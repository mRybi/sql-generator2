{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _Db2Formatter = require(\"./languages/Db2Formatter\");\n\nvar _Db2Formatter2 = _interopRequireDefault(_Db2Formatter);\n\nvar _N1qlFormatter = require(\"./languages/N1qlFormatter\");\n\nvar _N1qlFormatter2 = _interopRequireDefault(_N1qlFormatter);\n\nvar _PlSqlFormatter = require(\"./languages/PlSqlFormatter\");\n\nvar _PlSqlFormatter2 = _interopRequireDefault(_PlSqlFormatter);\n\nvar _StandardSqlFormatter = require(\"./languages/StandardSqlFormatter\");\n\nvar _StandardSqlFormatter2 = _interopRequireDefault(_StandardSqlFormatter);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nexports[\"default\"] = {\n  /**\n   * Format whitespaces in a query to make it easier to read.\n   *\n   * @param {String} query\n   * @param {Object} cfg\n   *  @param {String} cfg.language Query language, default is Standard SQL\n   *  @param {String} cfg.indent Characters used for indentation, default is \"  \" (2 spaces)\n   *  @param {Object} cfg.params Collection of params for placeholder replacement\n   * @return {String}\n   */\n  format: function format(query, cfg) {\n    cfg = cfg || {};\n\n    switch (cfg.language) {\n      case \"db2\":\n        return new _Db2Formatter2[\"default\"](cfg).format(query);\n\n      case \"n1ql\":\n        return new _N1qlFormatter2[\"default\"](cfg).format(query);\n\n      case \"pl/sql\":\n        return new _PlSqlFormatter2[\"default\"](cfg).format(query);\n\n      case \"sql\":\n      case undefined:\n        return new _StandardSqlFormatter2[\"default\"](cfg).format(query);\n\n      default:\n        throw Error(\"Unsupported SQL dialect: \" + cfg.language);\n    }\n  }\n};\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}