{"ast":null,"code":"import _slicedToArray from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/RelationPopup.tsx\";\nimport React, { useState } from 'react';\nimport Popup from 'reactjs-popup';\nimport './popup.scss';\n\nvar Props = function Props() {\n  _classCallCheck(this, Props);\n\n  this.isOpen = void 0;\n  this.link = void 0;\n};\n\nexport var RelationPopup = function RelationPopup(props) {\n  var _useState = useState('1, N'),\n      _useState2 = _slicedToArray(_useState, 2),\n      left = _useState2[0],\n      setLeft = _useState2[1];\n\n  var _useState3 = useState('0, 1'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      right = _useState4[0],\n      setRight = _useState4[1]; // handleChangepRropType(event: React.ChangeEvent<HTMLSelectElement>, row: Port) {\n  //   event.persist();\n  //   (this.state.updatedItem.getPortFromID(row.id) as Port).propertyType = event.target.value;\n  //   this.forceUpdate();\n  // }\n\n\n  var setLeftLabel = function setLeftLabel(value) {\n    setLeft(value);\n    var a = props.link.labels[0];\n    a.label = value;\n  };\n\n  var setRightLabel = function setRightLabel(value) {\n    setRight(value);\n    var a = props.link.labels[4];\n    a.label = value;\n  };\n\n  return React.createElement(Popup, {\n    modal: true,\n    closeOnDocumentClick: true,\n    open: props.isOpen,\n    closeOnEscape: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"SQLResultDialog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"darkSelect\",\n    onChange: function onChange(event) {\n      return setLeftLabel(event.target.value);\n    },\n    value: left,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1, N\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"1, N\"), React.createElement(\"option\", {\n    value: \"0, N\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"0, N\"), React.createElement(\"option\", {\n    value: \"0, 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"0, 0\"), React.createElement(\"option\", {\n    value: \"0, 1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"0, 1\"), React.createElement(\"option\", {\n    value: \"1, 1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"1, 1\"), React.createElement(\"option\", {\n    value: \"1, 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"1, 0\"), React.createElement(\"option\", {\n    value: \"N, M\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"N, M\")), React.createElement(\"select\", {\n    className: \"darkSelect\",\n    onChange: function onChange(event) {\n      return setRightLabel(event.target.value);\n    },\n    value: right,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1, N\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"1, N\"), React.createElement(\"option\", {\n    value: \"0, N\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"0, N\"), React.createElement(\"option\", {\n    value: \"0, 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"0, 0\"), React.createElement(\"option\", {\n    value: \"0, 1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"0, 1\"), React.createElement(\"option\", {\n    value: \"1, 1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"1, 1\"), React.createElement(\"option\", {\n    value: \"1, 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"1, 0\"), React.createElement(\"option\", {\n    value: \"N, M\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"N, M\"))));\n};","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/RelationPopup.tsx"],"names":["React","useState","Popup","Props","isOpen","link","RelationPopup","props","left","setLeft","right","setRight","setLeftLabel","value","a","labels","label","setRightLabel","event","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Popup from 'reactjs-popup'\nimport sqlFormatter from \"sql-formatter\";\nimport './popup.scss';\nimport { Link } from './components/models/Link';\nimport { Label } from './components/models/Label';\n\nclass Props {\n  isOpen: boolean;\n  link: Link;\n}\n\nexport const RelationPopup = (props: Props) => {\n \n  const [left, setLeft] = useState(\n    '1, N'\n  );\n\n  const [right, setRight] = useState(\n    '0, 1'\n  );\n\n  // handleChangepRropType(event: React.ChangeEvent<HTMLSelectElement>, row: Port) {\n  //   event.persist();\n  //   (this.state.updatedItem.getPortFromID(row.id) as Port).propertyType = event.target.value;\n\n  //   this.forceUpdate();\n  // }\n\n  let setLeftLabel = (value: string) => {\n    setLeft(value);\n    let a = props.link.labels[0] as Label;\n    a.label = value;\n  }\n\n  let setRightLabel = (value: string) => {\n    setRight(value);\n    let a = props.link.labels[4] as Label;\n    a.label = value;\n  }\n  \n  return (\n\n\n    <Popup\n      modal\n      closeOnDocumentClick\n      open={props.isOpen}\n      closeOnEscape\n    >\n      <div className=\"SQLResultDialog\">\n      <select className=\"darkSelect\"\n              onChange={(event) => setLeftLabel(event.target.value)} \n              value={left}>\n              <option value=\"1, N\">1, N</option>\n              <option value=\"0, N\">0, N</option>\n              <option value=\"0, 0\">0, 0</option>\n              <option value=\"0, 1\">0, 1</option>\n              <option value=\"1, 1\">1, 1</option>\n              <option value=\"1, 0\">1, 0</option>\n              <option value=\"N, M\">N, M</option>\n\n            </select>\n\n            <select className=\"darkSelect\"\n              onChange={(event) => setRightLabel(event.target.value)} \n              value={right}>\n              <option value=\"1, N\">1, N</option>\n              <option value=\"0, N\">0, N</option>\n              <option value=\"0, 0\">0, 0</option>\n              <option value=\"0, 1\">0, 1</option>\n              <option value=\"1, 1\">1, 1</option>\n              <option value=\"1, 0\">1, 0</option>\n              <option value=\"N, M\">N, M</option>\n\n            </select>\n      {/* <input type=\"text\" onChange={event => setDbName(event.target.value)} value={dbName}/>\n      <button onClick={ () => props.generateScript(dbName)}>Generate</button>\n        <textarea readOnly={true} value={aa}></textarea>\n        <button>Download</button> */}\n      </div>\n    </Popup>)\n}\n\n"]},"metadata":{},"sourceType":"module"}