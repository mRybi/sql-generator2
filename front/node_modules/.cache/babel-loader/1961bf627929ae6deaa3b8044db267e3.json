{"ast":null,"code":"import _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeInfo/NodeInfo.tsx\";\nimport './nodeItems.scss';\nimport * as React from \"react\";\nimport { NodeProperty } from './nodeProperty/NodeProperty';\n\nvar OwnProps = function OwnProps() {\n  _classCallCheck(this, OwnProps);\n\n  this.selectedItem = void 0;\n};\n\nvar State = function State() {\n  _classCallCheck(this, State);\n\n  this.updatedItem = void 0;\n  this.name = void 0;\n  this.showInput = void 0;\n};\n\nexport var NodeInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NodeInfo, _React$Component);\n\n  function NodeInfo(props) {\n    _classCallCheck(this, NodeInfo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NodeInfo).call(this, props));\n  }\n\n  _createClass(NodeInfo, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        updatedItem: this.props.selectedItem,\n        name: this.props.selectedItem.name,\n        showInput: false\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log('both', this.props, nextProps);\n\n      if (nextProps != this.props) {\n        this.setState({\n          updatedItem: nextProps.selectedItem,\n          name: nextProps.selectedItem.name\n        });\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"changeName1\",\n    value: function changeName1(newValue) {\n      var updatedItem = this.state.updatedItem;\n      updatedItem.name = newValue;\n      this.setState({\n        updatedItem: updatedItem\n      });\n    }\n  }, {\n    key: \"addPort\",\n    value: function addPort(portName, isOut) {\n      if (isOut) {\n        this.state.updatedItem.addOutPort(portName);\n      } else {\n        this.state.updatedItem.addInPort(portName);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log('selected node', this.props.selectedItem);\n      if (this.state.updatedItem == null) return 'Loading...';\n      return React.createElement(\"div\", {\n        className: \"trayBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(NodeProperty, {\n        value: this.state.name,\n        acceptChangeProperty: this.changeName1.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        onDoubleClick: function onDoubleClick() {\n          return _this.showInput();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.state.showInput ? React.createElement(\"input\", {\n        className: \"tray-bottom-item\",\n        type: \"text\",\n        onBlur: this.switchViewUpdateValue.bind(this),\n        onChange: this.handleChange.bind(this),\n        value: this.state.propertyValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : React.createElement(\"h1\", {\n        className: \"tray-bottom-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.copy)));\n    }\n  }, {\n    key: \"showInput\",\n    value: function showInput() {\n      this.setState({\n        showInput: true\n      });\n    }\n  }]);\n\n  return NodeInfo;\n}(React.Component);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeInfo/NodeInfo.tsx"],"names":["React","NodeProperty","OwnProps","selectedItem","State","updatedItem","name","showInput","NodeInfo","props","setState","nextProps","console","log","forceUpdate","newValue","state","portName","isOut","addOutPort","addInPort","changeName1","bind","switchViewUpdateValue","handleChange","propertyValue","copy","Component"],"mappings":";;;;;;AAAA,OAAO,kBAAP;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,YAAT,QAA6B,6BAA7B;;IAEMC,Q;;;OACFC,Y;;;IAGEC,K;;;OACFC,W;OACAC,I;OACAC,S;;;AAKJ,WAAaC,QAAb;AAAA;AAAA;AAAA;;AACI,oBAAYC,KAAZ,EAA0B;AAAA;;AAAA,iFAChBA,KADgB;AAEzB;;AAHL;AAAA;AAAA,yCAKyB;AACjB,WAAKC,QAAL,CAAc;AACVL,QAAAA,WAAW,EAAE,KAAKI,KAAL,CAAWN,YADd;AAEVG,QAAAA,IAAI,EAAE,KAAKG,KAAL,CAAWN,YAAX,CAAwBG,IAFpB;AAGVC,QAAAA,SAAS,EAAE;AAHD,OAAd;AAKH;AAXL;AAAA;AAAA,8CAa8BI,SAb9B,EAagD;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKJ,KAAzB,EAAgCE,SAAhC;;AACA,UAAIA,SAAS,IAAI,KAAKF,KAAtB,EAA6B;AACzB,aAAKC,QAAL,CAAc;AACVL,UAAAA,WAAW,EAAEM,SAAS,CAACR,YADb;AAEVG,UAAAA,IAAI,EAAEK,SAAS,CAACR,YAAV,CAAuBG;AAFnB,SAAd;AAIA,aAAKQ,WAAL;AACH;AACJ;AAtBL;AAAA;AAAA,gCAwBgBC,QAxBhB,EAwBwC;AAChC,UAAIV,WAA6B,GAAG,KAAKW,KAAL,CAAWX,WAA/C;AACAA,MAAAA,WAAW,CAACC,IAAZ,GAAmBS,QAAnB;AACA,WAAKL,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAEA;AAAf,OAAd;AACH;AA5BL;AAAA;AAAA,4BA8BYY,QA9BZ,EA8B8BC,KA9B9B,EA8B8C;AACtC,UAAIA,KAAJ,EAAW;AACP,aAAKF,KAAL,CAAWX,WAAX,CAAuBc,UAAvB,CAAkCF,QAAlC;AACH,OAFD,MAEO;AACH,aAAKD,KAAL,CAAWX,WAAX,CAAuBe,SAAvB,CAAiCH,QAAjC;AACH;AACJ;AApCL;AAAA;AAAA,6BAsCa;AAAA;;AACLL,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKJ,KAAL,CAAWN,YAAxC;AACA,UAAI,KAAKa,KAAL,CAAWX,WAAX,IAA0B,IAA9B,EAAoC,OAAO,YAAP;AACpC,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWV,IAAhC;AAAsC,QAAA,oBAAoB,EAAE,KAAKe,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,aAAa,EAAE;AAAA,iBAAM,KAAI,CAACf,SAAL,EAAN;AAAA,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKS,KAAL,CAAWT,SAAX,GAAuB;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,MAAM,EAAE,KAAKgB,qBAAL,CAA2BD,IAA3B,CAAgC,IAAhC,CAAxD;AAA+F,QAAA,QAAQ,EAAE,KAAKE,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAAzG;AAAuI,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWS,aAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,GAA0M;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC,KAAKT,KAAL,CAAWU,IAA7C,CAD/M,CAFJ,CADJ;AAWH;AApDL;AAAA;AAAA,gCAqDsB;AACd,WAAKhB,QAAL,CAAc;AACVH,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH;AAzDL;;AAAA;AAAA,EAA8BP,KAAK,CAAC2B,SAApC","sourcesContent":["import './nodeItems.scss';\nimport * as React from \"react\";\nimport { DefaultNodeModel } from 'storm-react-diagrams';\nimport { NodeProperty } from './nodeProperty/NodeProperty';\n\nclass OwnProps {\n    selectedItem: DefaultNodeModel\n}\n\nclass State {\n    updatedItem: DefaultNodeModel\n    name: string;\n    showInput: boolean\n}\n\ntype Props = OwnProps;\n\nexport class NodeInfo extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.setState({\n            updatedItem: this.props.selectedItem,\n            name: this.props.selectedItem.name,\n            showInput: false\n        })\n    }\n\n    componentWillReceiveProps(nextProps: Props) {\n        console.log('both', this.props, nextProps);\n        if (nextProps != this.props) {\n            this.setState({\n                updatedItem: nextProps.selectedItem,\n                name: nextProps.selectedItem.name\n            })\n            this.forceUpdate();\n        }\n    }\n\n    changeName1(newValue: string): void {\n        let updatedItem: DefaultNodeModel = this.state.updatedItem;\n        updatedItem.name = newValue;\n        this.setState({ updatedItem: updatedItem });\n    }\n\n    addPort(portName: string, isOut: boolean) {\n        if (isOut) {\n            this.state.updatedItem.addOutPort(portName);\n        } else {\n            this.state.updatedItem.addInPort(portName);\n        }\n    }\n\n    render() {\n        console.log('selected node', this.props.selectedItem)\n        if (this.state.updatedItem == null) return 'Loading...'\n        return (\n            <div className=\"trayBottom\">\n                <NodeProperty value={this.state.name} acceptChangeProperty={this.changeName1.bind(this)} />\n                <div onDoubleClick={() => this.showInput()}>\n                    {this.state.showInput ? <input className=\"tray-bottom-item\" type=\"text\" onBlur={this.switchViewUpdateValue.bind(this)} onChange={this.handleChange.bind(this)} value={this.state.propertyValue}></input> : <h1 className=\"tray-bottom-item\">{this.state.copy}</h1>}\n                </div>\n\n            </div>\n\n\n        );\n    }\n    showInput(): void {\n        this.setState({\n            showInput: true\n        })\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}