{"ast":null,"code":"import _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx\";\nimport './NodeProperties.scss';\nimport * as React from \"react\";\nimport { Port } from '../models/Port';\nimport { RelationType } from '../../App2';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nvar OwnProps = function OwnProps() {\n  _classCallCheck(this, OwnProps);\n\n  this.selectedItem = void 0;\n  this.diagramEngine = void 0;\n  this.selectedLink = void 0;\n  this.selectedRelation = void 0;\n};\n\nvar State = function State() {\n  _classCallCheck(this, State);\n\n  this.updatedItem = void 0;\n  this.name = void 0;\n  this.portLabel = void 0;\n};\n\nexport var NodeProperties =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NodeProperties, _React$Component);\n\n  function NodeProperties(props) {\n    _classCallCheck(this, NodeProperties);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NodeProperties).call(this, props));\n  }\n\n  _createClass(NodeProperties, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        updatedItem: this.props.selectedItem,\n        name: this.props.selectedItem.name,\n        portLabel: \"\"\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps != this.props) {\n        this.setState({\n          updatedItem: nextProps.selectedItem,\n          name: nextProps.selectedItem.name\n        });\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"handleChangePK\",\n    value: function handleChangePK(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isPrimaryKey = !row.isPrimaryKey;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeFK\",\n    value: function handleChangeFK(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isForeignKey = !row.isForeignKey;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeNull\",\n    value: function handleChangeNull(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isNotNull = !row.isNotNull;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeUnique\",\n    value: function handleChangeUnique(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isUnique = !row.isUnique;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeAutoInc\",\n    value: function handleChangeAutoInc(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isAutoIncremented = !row.isAutoIncremented;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangepRropType\",\n    value: function handleChangepRropType(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).propertyType = event.target.value;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangePortLabel\",\n    value: function handleChangePortLabel(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).label = event.target.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log('state', this.state);\n      var columns = [{\n        dataField: 'label',\n        text: 'Property Name',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"input\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            className: \"darkInput\",\n            type: \"text\",\n            defaultValue: row.label,\n            onChange: function onChange(event) {\n              return _this.handleChangePortLabel(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }));\n        }\n      }, {\n        dataField: 'propertyType',\n        text: 'Property Type',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, React.createElement(\"select\", {\n            className: \"darkSelect\",\n            onChange: function onChange(event) {\n              return _this.handleChangepRropType(event, row);\n            },\n            value: row.propertyType,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            value: \"BIT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, \"BIT\"), React.createElement(\"option\", {\n            value: \"TINYINT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, \"TINYINT\"), React.createElement(\"option\", {\n            value: \"SMALLINT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, \"SMALLINT\"), React.createElement(\"option\", {\n            value: \"INT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, \"INT\"), React.createElement(\"option\", {\n            value: \"BIGINT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, \"BIGINT\"), React.createElement(\"option\", {\n            value: \"DECIMAL\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, \"DECIMAL\"), React.createElement(\"option\", {\n            value: \"NUMERIC\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \"NUMERIC\"), React.createElement(\"option\", {\n            value: \"FLOAT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"FLOAT\"), React.createElement(\"option\", {\n            value: \"REAL\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, \"REAL\"), React.createElement(\"option\", {\n            value: \"DATE\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, \"DATE\"), React.createElement(\"option\", {\n            value: \"TIME\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, \"TIME\"), React.createElement(\"option\", {\n            value: \"DATETIME\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, \"DATETIME\"), React.createElement(\"option\", {\n            value: \"TIMESTAMP\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, \"TIMESTAMP\"), React.createElement(\"option\", {\n            value: \"YEAR\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, \"YEAR\"), React.createElement(\"option\", {\n            value: \"CHAR\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, \"CHAR\"), React.createElement(\"option\", {\n            value: \"VARCHAR\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, \"VARCHAR\"), React.createElement(\"option\", {\n            value: \"VARCHARMAX\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, \"VARCHARMAX\"), React.createElement(\"option\", {\n            value: \"TEXT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, \"TEXT\"), React.createElement(\"option\", {\n            value: \"NCHAR\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, \"NCHAR\"), React.createElement(\"option\", {\n            value: \"NVARCHAR\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, \"NVARCHAR\"), React.createElement(\"option\", {\n            value: \"NVARCHARMAX\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, \"NVARCHARMAX\"), React.createElement(\"option\", {\n            value: \"NTEXT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, \"NTEXT\"), React.createElement(\"option\", {\n            value: \"BINARY\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, \"BINARY\"), React.createElement(\"option\", {\n            value: \"VARBINARY\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, \"VARBINARY\"), React.createElement(\"option\", {\n            value: \"VARBINARYMAX\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, \"VARBINARYMAX\"), React.createElement(\"option\", {\n            value: \"IMAGE\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, \"IMAGE\"), React.createElement(\"option\", {\n            value: \"CLOB\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, \"CLOB\"), React.createElement(\"option\", {\n            value: \"BLOB\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, \"BLOB\"), React.createElement(\"option\", {\n            value: \"XML\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, \"XML\"), React.createElement(\"option\", {\n            value: \"JSON\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }, \"JSON\"))));\n        }\n      }, {\n        dataField: 'isPrimaryKey',\n        text: 'Is Primary Key',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isPrimaryKey,\n            onChange: function onChange(event) {\n              return _this.handleChangePK(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          })));\n        }\n      }, {\n        dataField: 'isForeignKey',\n        text: 'Is Foreign Key',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isForeignKey,\n            onChange: function onChange(event) {\n              return _this.handleChangeFK(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          })));\n        }\n      }, {\n        dataField: 'isNotNull',\n        text: 'Is Nullable',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isNotNull,\n            onChange: function onChange(event) {\n              return _this.handleChangeNull(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          })));\n        }\n      }, {\n        dataField: 'isAutoIncremented',\n        text: 'Is Auto Incremented',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isAutoIncremented,\n            onChange: function onChange(event) {\n              return _this.handleChangeAutoInc(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          })));\n        }\n      }, {\n        dataField: 'isUnique',\n        text: 'Is Unique',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isUnique,\n            onChange: function onChange(event) {\n              return _this.handleChangeUnique(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          })));\n        }\n      }];\n      var ports = this.state.updatedItem.ports;\n      var portsTable = Object.keys(ports).map(function (x) {\n        return ports[x];\n      });\n      var newPorts = [];\n      newPorts.push(new Port(false, false, false, false, false, false, 'newProp1', 'newProp1', RelationType.none));\n      newPorts.forEach(function (p) {\n        return portsTable.push(p);\n      });\n      return React.createElement(\"div\", {\n        className: \"trayBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        keyField: \"id\",\n        data: portsTable,\n        columns: columns // cellEdit={cellEditFactory({\n        //     mode: 'click',\n        //     blurToSave: true\n        // })}\n        ,\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NodeProperties;\n}(React.Component);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx"],"names":["React","Port","RelationType","BootstrapTable","OwnProps","selectedItem","diagramEngine","selectedLink","selectedRelation","State","updatedItem","name","portLabel","NodeProperties","props","setState","nextProps","forceUpdate","event","row","persist","state","getPortFromID","id","isPrimaryKey","isForeignKey","isNotNull","isUnique","isAutoIncremented","propertyType","target","value","label","console","log","columns","dataField","text","formatter","cellContent","handleChangePortLabel","handleChangepRropType","handleChangePK","handleChangeFK","handleChangeNull","handleChangeAutoInc","handleChangeUnique","ports","portsTable","Object","keys","map","x","newPorts","push","none","forEach","p","Component"],"mappings":"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","sourcesContent":["import './NodeProperties.scss';\nimport * as React from \"react\";\nimport { DiagramEngine } from 'storm-react-diagrams';\nimport { Link } from '../models/Link';\nimport { Node } from \"../models/Node\";\nimport { Port } from '../models/Port';\nimport { RelationType } from '../../App2';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nclass OwnProps {\n  selectedItem: Node;\n  diagramEngine: DiagramEngine;\n  selectedLink: Link;\n  selectedRelation: RelationType;\n}\n\nclass State {\n  updatedItem: Node\n  name: string;\n  portLabel: string;\n}\n\ntype Props = OwnProps;\n\nexport class NodeProperties extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.setState({\n      updatedItem: this.props.selectedItem,\n      name: this.props.selectedItem.name,\n      portLabel: \"\" \n    })\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps != this.props) {\n      this.setState({\n        updatedItem: nextProps.selectedItem,\n        name: nextProps.selectedItem.name\n      })\n      this.forceUpdate();\n    }\n  }\n\n  handleChangePK(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isPrimaryKey = !row.isPrimaryKey;\n\n    this.forceUpdate();\n  }\n\n  handleChangeFK(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isForeignKey = !row.isForeignKey;\n\n    this.forceUpdate();\n  }\n\n  handleChangeNull(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isNotNull = !row.isNotNull;\n\n    this.forceUpdate();\n  }\n\n  handleChangeUnique(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isUnique = !row.isUnique;\n\n    this.forceUpdate();\n  }\n\n  handleChangeAutoInc(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isAutoIncremented = !row.isAutoIncremented;\n\n    this.forceUpdate();\n  }\n\n  handleChangepRropType(event: React.ChangeEvent<HTMLSelectElement>, row: Port) {\n    event.persist();\n    (this.state.updatedItem.getPortFromID(row.id) as Port).propertyType = event.target.value;\n\n    this.forceUpdate();\n  }\n\n  handleChangePortLabel(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n    (this.state.updatedItem.getPortFromID(row.id) as Port).label = event.target.value;\n  }\n\n  render() {\n    console.log('state', this.state);\n    const columns = [{\n      dataField: 'label',\n      text: 'Property Name',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"input\">\n          <input className=\"darkInput\" type=\"text\" defaultValue={row.label} onChange={(event) => this.handleChangePortLabel(event, row)}></input>\n        </div>\n      )\n    }, {\n      dataField: 'propertyType',\n      text: 'Property Type',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"checkbox\">\n          <label>\n            <select className=\"darkSelect\" onChange={(event) => this.handleChangepRropType(event, row)} value={row.propertyType}>\n              <option value=\"BIT\">BIT</option>\n              <option value=\"TINYINT\">TINYINT</option>\n              <option value=\"SMALLINT\">SMALLINT</option>\n              <option value=\"INT\">INT</option>\n              <option value=\"BIGINT\">BIGINT</option>\n              <option value=\"DECIMAL\">DECIMAL</option>\n              <option value=\"NUMERIC\">NUMERIC</option>\n              <option value=\"FLOAT\">FLOAT</option>\n              <option value=\"REAL\">REAL</option>\n\n              <option value=\"DATE\">DATE</option>\n              <option value=\"TIME\">TIME</option>\n              <option value=\"DATETIME\">DATETIME</option>\n              <option value=\"TIMESTAMP\">TIMESTAMP</option>\n              <option value=\"YEAR\">YEAR</option>\n\n              <option value=\"CHAR\">CHAR</option>\n              <option value=\"VARCHAR\">VARCHAR</option>\n              <option value=\"VARCHARMAX\">VARCHARMAX</option>\n              <option value=\"TEXT\">TEXT</option>\n\n              <option value=\"NCHAR\">NCHAR</option>\n              <option value=\"NVARCHAR\">NVARCHAR</option>\n              <option value=\"NVARCHARMAX\">NVARCHARMAX</option>\n              <option value=\"NTEXT\">NTEXT</option>\n              <option value=\"BINARY\">BINARY</option>\n              <option value=\"VARBINARY\">VARBINARY</option>\n              <option value=\"VARBINARYMAX\">VARBINARYMAX</option>\n              <option value=\"IMAGE\">IMAGE</option>\n              <option value=\"CLOB\">CLOB</option>\n              <option value=\"BLOB\">BLOB</option>\n              <option value=\"XML\">XML</option>\n              <option value=\"JSON\">JSON</option>\n\n            </select>\n          </label>\n        </div>\n      )\n    }, {\n      dataField: 'isPrimaryKey',\n      text: 'Is Primary Key',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" checked={row.isPrimaryKey} onChange={(event) => this.handleChangePK(event, row)} />\n          </label>\n        </div>\n      )\n    }, {\n      dataField: 'isForeignKey',\n      text: 'Is Foreign Key',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" checked={row.isForeignKey} onChange={(event) => this.handleChangeFK(event, row)} />\n          </label>\n        </div>\n      )\n    }, {\n      dataField: 'isNotNull',\n      text: 'Is Nullable',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" checked={row.isNotNull} onChange={(event) => this.handleChangeNull(event, row)} />\n          </label>\n        </div>\n      )\n    }, {\n      dataField: 'isAutoIncremented',\n      text: 'Is Auto Incremented',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" checked={row.isAutoIncremented} onChange={(event) => this.handleChangeAutoInc(event, row)} />\n          </label>\n        </div>\n      )\n    }, {\n      dataField: 'isUnique',\n      text: 'Is Unique',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" checked={row.isUnique} onChange={(event) => this.handleChangeUnique(event, row)} />\n          </label>\n        </div>\n      )\n    }];\n\n    let ports = this.state.updatedItem.ports as { [s: string]: Port };\n    let portsTable: Port[] = Object.keys(ports).map(x => {\n      return ports[x];\n    });\n    let newPorts: Port[] = [];\n    newPorts.push(new Port(false, false, false, false, false, false, 'newProp1', 'newProp1', RelationType.none));\n    newPorts.forEach(p => portsTable.push(p));\n\n    return (\n      <div className=\"trayBottom\">\n        <BootstrapTable\n          keyField=\"id\"\n          data={portsTable}\n          columns={columns}\n          // cellEdit={cellEditFactory({\n          //     mode: 'click',\n          //     blurToSave: true\n          // })}\n          bordered={false}\n        />\n\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}