{"ast":null,"code":"import _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx\";\nimport './NodeProperties.scss';\nimport * as React from \"react\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nvar OwnProps = function OwnProps() {\n  _classCallCheck(this, OwnProps);\n\n  this.selectedItem = void 0;\n  this.diagramEngine = void 0;\n  this.selectedLink = void 0;\n  this.selectedRelation = void 0;\n};\n\nvar State = function State() {\n  _classCallCheck(this, State);\n\n  this.updatedItem = void 0;\n  this.name = void 0;\n};\n\nexport var NodeProperties =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NodeProperties, _React$Component);\n\n  function NodeProperties(props) {\n    _classCallCheck(this, NodeProperties);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NodeProperties).call(this, props));\n  }\n\n  _createClass(NodeProperties, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        updatedItem: this.props.selectedItem,\n        name: this.props.selectedItem.name\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps != this.props) {\n        this.setState({\n          updatedItem: nextProps.selectedItem,\n          name: nextProps.selectedItem.name\n        });\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var columns = [{\n        dataField: 'id',\n        text: 'Product ID'\n      }, {\n        dataField: 'name',\n        text: 'Product Name'\n      }, {\n        dataField: 'price',\n        text: 'Product Price'\n      }];\n      var products = [{\n        id: '1',\n        name: 'asdsd',\n        price: 2\n      }, {\n        id: '2',\n        name: 'asdsd',\n        price: 4\n      }];\n      var ports = this.state.updatedItem.ports;\n      console.log(ports);\n      var portsTable = Object.keys(ports).map(function (x) {\n        return React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"XDDDD\"), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"XDDDD\"), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"XDDDD\"), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"XDDDD\"));\n      });\n      return React.createElement(\"div\", {\n        className: \"trayBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        keyField: \"id\",\n        data: products,\n        columns: columns,\n        cellEdit: cellEditFactory({\n          mode: 'click',\n          blurToSave: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NodeProperties;\n}(React.Component);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx"],"names":["React","BootstrapTable","cellEditFactory","OwnProps","selectedItem","diagramEngine","selectedLink","selectedRelation","State","updatedItem","name","NodeProperties","props","setState","nextProps","forceUpdate","columns","dataField","text","products","id","price","ports","state","console","log","portsTable","Object","keys","map","x","mode","blurToSave","Component"],"mappings":";;;;;;AAAA,OAAO,uBAAP;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AASA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAO,gEAAP;;IACMC,Q;;;OACFC,Y;OACAC,a;OACAC,Y;OACAC,gB;;;IAGEC,K;;;OACFC,W;OACAC,I;;;AAKJ,WAAaC,cAAb;AAAA;AAAA;AAAA;;AACI,0BAAYC,KAAZ,EAA0B;AAAA;;AAAA,uFAChBA,KADgB;AAEzB;;AAHL;AAAA;AAAA,yCAKyB;AACjB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,WAAW,EAAE,KAAKG,KAAL,CAAWR,YADd;AAEVM,QAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWR,YAAX,CAAwBM;AAFpB,OAAd;AAIH;AAVL;AAAA;AAAA,8CAY8BI,SAZ9B,EAYgD;AACxC,UAAIA,SAAS,IAAI,KAAKF,KAAtB,EAA6B;AACzB,aAAKC,QAAL,CAAc;AACVJ,UAAAA,WAAW,EAAEK,SAAS,CAACV,YADb;AAEVM,UAAAA,IAAI,EAAEI,SAAS,CAACV,YAAV,CAAuBM;AAFnB,SAAd;AAIA,aAAKK,WAAL;AACH;AACJ;AApBL;AAAA;AAAA,6BAwBa;AACL,UAAMC,OAAO,GAAG,CAAC;AACbC,QAAAA,SAAS,EAAE,IADE;AAEbC,QAAAA,IAAI,EAAE;AAFO,OAAD,EAGb;AACCD,QAAAA,SAAS,EAAE,MADZ;AAECC,QAAAA,IAAI,EAAE;AAFP,OAHa,EAMb;AACCD,QAAAA,SAAS,EAAE,OADZ;AAECC,QAAAA,IAAI,EAAE;AAFP,OANa,CAAhB;AAWA,UAAMC,QAAQ,GAAG,CAAC;AACdC,QAAAA,EAAE,EAAE,GADU;AAEdV,QAAAA,IAAI,EAAE,OAFQ;AAGdW,QAAAA,KAAK,EAAE;AAHO,OAAD,EAId;AACCD,QAAAA,EAAE,EAAE,GADL;AAECV,QAAAA,IAAI,EAAE,OAFP;AAGCW,QAAAA,KAAK,EAAE;AAHR,OAJc,CAAjB;AAWA,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWd,WAAX,CAAuBa,KAAnC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,UAAII,UAAyB,GAAGC,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,GAAnB,CAAuB,UAAAC,CAAC,EAAI;AACxD,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,CADJ;AAWH,OAZ+B,CAAhC;AAaA,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AACI,QAAA,QAAQ,EAAC,IADb;AAEI,QAAA,IAAI,EAAEX,QAFV;AAGI,QAAA,OAAO,EAAEH,OAHb;AAII,QAAA,QAAQ,EAAEd,eAAe,CAAC;AACtB6B,UAAAA,IAAI,EAAE,OADgB;AAEtBC,UAAAA,UAAU,EAAE;AAFU,SAAD,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAcH;AA5EL;;AAAA;AAAA,EAAoChC,KAAK,CAACiC,SAA1C","sourcesContent":["import './NodeProperties.scss';\nimport * as React from \"react\";\nimport { DefaultNodeModel, DefaultPortModel, PortModel, DiagramModel, LabelModel, DefaultLinkModel, DiagramEngine } from 'storm-react-diagrams';\nimport { number } from 'prop-types';\nimport { randomBytes } from 'crypto';\nimport { Link } from '../models/Link';\nimport { Node } from \"../models/Node\";\nimport { PropertyType } from '../models/PropertyType';\nimport { Port } from '../models/Port';\nimport { RelationType } from '../../App2';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nclass OwnProps {\n    selectedItem: Node;\n    diagramEngine: DiagramEngine;\n    selectedLink: Link;\n    selectedRelation: RelationType;\n}\n\nclass State {\n    updatedItem: Node\n    name: string;\n}\n\ntype Props = OwnProps;\n\nexport class NodeProperties extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.setState({\n            updatedItem: this.props.selectedItem,\n            name: this.props.selectedItem.name,\n        })\n    }\n\n    componentWillReceiveProps(nextProps: Props) {\n        if (nextProps != this.props) {\n            this.setState({\n                updatedItem: nextProps.selectedItem,\n                name: nextProps.selectedItem.name\n            })\n            this.forceUpdate();\n        }\n    }\n\n\n\n    render() {\n        const columns = [{\n            dataField: 'id',\n            text: 'Product ID'\n        }, {\n            dataField: 'name',\n            text: 'Product Name'\n        }, {\n            dataField: 'price',\n            text: 'Product Price'\n        }];\n\n        const products = [{\n            id: '1',\n            name: 'asdsd',\n            price: 2\n        }, {\n            id: '2',\n            name: 'asdsd',\n            price: 4\n        }\n    ]\n\n        let ports = this.state.updatedItem.ports as { [s: string]: Port };\n        console.log(ports);\n        let portsTable: JSX.Element[] = Object.keys(ports).map(x => {\n            return (\n                <td>\n                    <tr>XDDDD</tr>\n                    <tr>XDDDD</tr>\n\n                    <tr>XDDDD</tr>\n\n                    <tr>XDDDD</tr>\n                </td>\n\n            )\n        });\n        return (\n            <div className=\"trayBottom\">\n                <BootstrapTable\n                    keyField=\"id\"\n                    data={products}\n                    columns={columns}\n                    cellEdit={cellEditFactory({\n                        mode: 'click',\n                        blurToSave: true\n                    })}\n                />\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}