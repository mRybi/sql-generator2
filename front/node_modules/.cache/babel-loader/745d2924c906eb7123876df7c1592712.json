{"ast":null,"code":"import _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport * as _ from \"lodash\";\nimport { PortModel } from \"storm-react-diagrams\";\nimport { Link } from \"./Link\";\nimport { PropertyType } from \"./PropertyType\";\nexport var Port =\n/*#__PURE__*/\nfunction (_PortModel) {\n  _inherits(Port, _PortModel);\n\n  function Port(isPrimaryKey, isForeignKey, isInput, name) {\n    var _this;\n\n    var label = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    var propertyType = arguments.length > 5 ? arguments[5] : undefined;\n    var id = arguments.length > 6 ? arguments[6] : undefined;\n\n    _classCallCheck(this, Port);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Port).call(this, name, \"with_prop\", id));\n    _this.in = void 0;\n    _this.label = void 0;\n    _this.propertyType = void 0;\n    _this.isPrimaryKey = void 0;\n    _this.isForeignKey = void 0;\n    _this.links = void 0;\n    _this.iterator = 1;\n    _this.in = isInput;\n    _this.label = label || name;\n    _this.links = {};\n    _this.propertyType = propertyType;\n    _this.isForeignKey = isForeignKey;\n    _this.isPrimaryKey = isPrimaryKey;\n    return _this;\n  }\n\n  _createClass(Port, [{\n    key: \"deSerialize\",\n    value: function deSerialize(object, engine) {\n      _get(_getPrototypeOf(Port.prototype), \"deSerialize\", this).call(this, object, engine);\n\n      this.in = object.in;\n      this.label = object.label;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return _.merge(_get(_getPrototypeOf(Port.prototype), \"serialize\", this).call(this), {\n        in: this.in,\n        label: this.label,\n        propertyType: PropertyType[this.propertyType],\n        isForeignKey: this.isForeignKey,\n        isPrimaryKey: this.isPrimaryKey\n      });\n    } // link(port: PortModel): LinkModel {\n    // \tlet link = this.createLinkModel();\n    // \tlink.setSourcePort(this);\n    // \tlink.setTargetPort(port);\n    // \treturn link;\n    // }\n\n  }, {\n    key: \"link\",\n    value: function link(nodeToLink) {\n      //dalczego  przypina do zlego portu?\n      console.log('nodeToLink', nodeToLink);\n      var link = this.createLinkModel();\n      var thisPortNode = this.getNode();\n      var ports = nodeToLink.getInPorts();\n      var isThereAlreadyThatPort = ports.filter(function (p) {\n        return p.label === \"\".concat(thisPortNode.name, \"Id\");\n      }).length;\n      console.log('isther', isThereAlreadyThatPort);\n\n      if (isThereAlreadyThatPort === 0) {\n        var newPort = nodeToLink.addInPort(false, true, \"\".concat(thisPortNode.name, \"Id\"), PropertyType.INT);\n        link.setSourcePort(this);\n        link.setTargetPort(newPort);\n        console.log('NEWLINK', link);\n        return link;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"canLinkToPort\",\n    value: function canLinkToPort(port) {\n      //logika czy mozna polaczyc\n      console.log('PORT', port);\n\n      if (port instanceof Port) {\n        console.log('AAAAAAAAAAAAa', this.isPrimaryKey && port.isForeignKey || this.isForeignKey && port.isPrimaryKey);\n\n        if (this.iterator === 1 && (this.isPrimaryKey && port.isForeignKey || this.isForeignKey && port.isPrimaryKey)) {\n          console.log('XDDD');\n          var nodeToLink = port.getNode();\n          this.link(nodeToLink);\n          this.iterator = 0;\n        } else if (this.isPrimaryKey && port.isPrimaryKey) {\n          console.log('else');\n\n          var _nodeToLink = port.getNode();\n\n          this.link(_nodeToLink);\n          this.iterator = 0;\n        }\n\n        return this.isPrimaryKey && port.isForeignKey || this.isForeignKey && port.isPrimaryKey ? true : false;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"createLinkModel\",\n    value: function createLinkModel() {\n      var link = _get(_getPrototypeOf(Port.prototype), \"createLinkModel\", this).call(this);\n\n      return link || new Link();\n    }\n  }]);\n\n  return Port;\n}(PortModel);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/models/Port.ts"],"names":["_","PortModel","Link","PropertyType","Port","isPrimaryKey","isForeignKey","isInput","name","label","propertyType","id","in","links","iterator","object","engine","merge","nodeToLink","console","log","link","createLinkModel","thisPortNode","getNode","ports","getInPorts","isThereAlreadyThatPort","filter","p","length","newPort","addInPort","INT","setSourcePort","setTargetPort","port"],"mappings":"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","sourcesContent":["import * as _ from \"lodash\";\nimport { PortModel, DiagramEngine, LinkModel, DefaultLinkModel, NodeModel } from \"storm-react-diagrams\";\nimport { Link } from \"./Link\";\nimport { PropertyType } from \"./PropertyType\";\nimport { Node } from \"./Node\";\n\nexport class Port extends PortModel {\n\tin: boolean;\n    label: string;\n\tpropertyType: PropertyType;\n\tisPrimaryKey: boolean;\n\tisForeignKey: boolean;\n\tlinks: { [id: string]: Link };\n\titerator: number = 1;\n\n\tconstructor(isPrimaryKey: boolean, isForeignKey: boolean, isInput: boolean, name: string, label: string = null, propertyType?: PropertyType, id?: string) {\n\t\tsuper(name, \"with_prop\", id);\n\t\tthis.in = isInput;\n        this.label = label || name;\n        this.links = {};\n\t\tthis.propertyType = propertyType;\n\t\tthis.isForeignKey = isForeignKey;\n\t\tthis.isPrimaryKey = isPrimaryKey;\n\t}\n\n\tdeSerialize(object: any, engine: DiagramEngine) {\n\t\tsuper.deSerialize(object, engine);\n\t\tthis.in = object.in;\n\t\tthis.label = object.label;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tin: this.in,\n            label: this.label,\n\t\t\tpropertyType: PropertyType[this.propertyType],\n\t\t\tisForeignKey: this.isForeignKey,\n\t\t\tisPrimaryKey: this.isPrimaryKey\n\t\t});\n\t}\n\n\t// link(port: PortModel): LinkModel {\n\t// \tlet link = this.createLinkModel();\n\n\t// \tlink.setSourcePort(this);\n\t// \tlink.setTargetPort(port);\n\t// \treturn link;\n\t// }\n\n\tlink(nodeToLink: Node): LinkModel {\n//dalczego  przypina do zlego portu?\n\n\tconsole.log('nodeToLink', nodeToLink);\n\n\tlet link = this.createLinkModel();\n\tlet thisPortNode = this.getNode() as Node;\n\tlet ports = nodeToLink.getInPorts();\n\tlet isThereAlreadyThatPort = ports.filter(p => p.label === `${thisPortNode.name}Id`).length;\n\tconsole.log('isther', isThereAlreadyThatPort);\n\tif(isThereAlreadyThatPort === 0) {\n\n\t\tlet newPort = nodeToLink.addInPort(false, true, `${thisPortNode.name}Id`, PropertyType.INT);\n\n\t\tlink.setSourcePort(this);\n\t\tlink.setTargetPort(newPort);\n\t\tconsole.log('NEWLINK', link);\n\t\treturn link;\n}\nreturn null;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\t//logika czy mozna polaczyc\n\t\tconsole.log('PORT', port);\n\t\tif (port instanceof Port) {\nconsole.log('AAAAAAAAAAAAa', (this.isPrimaryKey && port.isForeignKey || this.isForeignKey && port.isPrimaryKey));\n\t\t\tif(this.iterator === 1 && (this.isPrimaryKey && port.isForeignKey || this.isForeignKey && port.isPrimaryKey)) {\n\t\t\t\n\t\t\t\tconsole.log('XDDD');\n\t\t\n\t\t\t\tlet nodeToLink = port.getNode() as Node;\n\t\t\t\tthis.link(nodeToLink);\n\t\t\t\tthis.iterator = 0;\n\t\t\t} else if(this.isPrimaryKey && port.isPrimaryKey){\n\t\t\t\tconsole.log('else');\n\t\t\n\t\t\t\tlet nodeToLink = port.getNode() as Node;\n\t\t\t\tthis.link(nodeToLink);\n\t\t\t\tthis.iterator = 0;\n\t\t\t}\n\t\t\treturn (this.isPrimaryKey && port.isForeignKey || this.isForeignKey && port.isPrimaryKey) ? true : false\n\t\t\n\t\t}\n\t\treturn false;\n\t\t\n\t\t\n\t}\n\n\tcreateLinkModel(): LinkModel {\n\t\tlet link = super.createLinkModel();\n\t\treturn link || new Link();\n\t}\n}"]},"metadata":{},"sourceType":"module"}