{"ast":null,"code":"import _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeInfo/nodeProperty/NodeProperty.tsx\";\nimport * as React from \"react\";\n\nvar OwnProps = function OwnProps() {\n  _classCallCheck(this, OwnProps);\n};\n\nvar State = function State() {\n  _classCallCheck(this, State);\n\n  this.showInput = void 0;\n};\n\nexport var NodeProperty =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NodeProperty, _React$Component);\n\n  function NodeProperty(props) {\n    _classCallCheck(this, NodeProperty);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NodeProperty).call(this, props));\n  }\n\n  _createClass(NodeProperty, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        //updatedItem: this.props.selectedItem,\n        //name: this.props.selectedItem.name\n        showInput: false\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {// if(nextProps != this.props) {\n      //     this.setState({\n      //         updatedItem: nextProps.selectedItem,\n      //         name: this.props.selectedItem.name\n      //     })\n      //     this.forceUpdate();\n      // }\n    }\n  }, {\n    key: \"changeName\",\n    value: function changeName(newName) {\n      console.log('event', event);\n      console.log('event', event.srcElement.innerHTML);\n      console.log('event', event.srcElement.append()); //let updatedNameItem: DefaultNodeModel = this.state.updatedItem;\n      // updatedNameItem.name = newName;\n      // this.setState({ updatedItem: updatedNameItem})\n\n      return null;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {// event.persist()\n      // console.log(event)\n      // console.log(this.state.name);\n      // console.log(event.target.value);\n      // this.setState({name: event.target.value});\n      // console.log('state:  ', this.state)\n    }\n  }, {\n    key: \"changeName1\",\n    value: function changeName1() {//     console.log('HALLLOOOOO', this.state);\n      //     let updatedItem: DefaultNodeModel = this.state.updatedItem;\n      //     updatedItem.name = this.state.name; \n      //     this.setState({ updatedItem: updatedItem});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      //let name = this.state.name;\n      //if(this.state.updatedItem == null) return 'Loading....' \n      //console.log('item', this.props.selectedItem);\n      var name = 'wwww';\n      var jsxToDisplay;\n\n      if (this.state.showInput) {\n        jsxToDisplay = React.createElement(\"div\", {\n          onDoubleClick: function onDoubleClick() {\n            return _this.showInput();\n          },\n          className: \"trayBottom\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, name), React.createElement(\"input\", {\n          className: \"tray-bottom-item\",\n          type: \"text\",\n          name: \"name\",\n          onBlur: this.changeName1.bind(this),\n          onAbort: function onAbort() {\n            return _this.changeName1();\n          },\n          onChange: this.handleChange.bind(this),\n          value: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }));\n      }\n\n      console.log(jsxToDisplay);\n      return React.createElement(\"div\", {\n        onDoubleClick: function onDoubleClick() {\n          return _this.showInput();\n        },\n        className: \"trayBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, name), this.state.showInput ? React.createElement(\"input\", {\n        className: \"tray-bottom-item\",\n        type: \"text\",\n        name: \"name\",\n        onBlur: this.changeName1.bind(this),\n        onAbort: function onAbort() {\n          return _this.changeName1();\n        },\n        onChange: this.handleChange.bind(this),\n        value: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }) : null);\n    }\n  }, {\n    key: \"showInput\",\n    value: function showInput() {\n      this.setState({\n        showInput: true\n      });\n    }\n  }]);\n\n  return NodeProperty;\n}(React.Component);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeInfo/nodeProperty/NodeProperty.tsx"],"names":["React","OwnProps","State","showInput","NodeProperty","props","setState","nextProps","newName","console","log","event","srcElement","innerHTML","append","name","jsxToDisplay","state","changeName1","bind","handleChange","Component"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;IAGMC,Q;;;;IAIAC,K;;;OAGFC,S;;;AAKJ,WAAaC,YAAb;AAAA;AAAA;AAAA;;AACI,wBAAYC,KAAZ,EAA0B;AAAA;;AAAA,qFAChBA,KADgB;AAEzB;;AAHL;AAAA;AAAA,yCAKyB;AACjB,WAAKC,QAAL,CAAc;AACV;AACA;AACAH,QAAAA,SAAS,EAAE;AAHD,OAAd;AAKH;AAXL;AAAA;AAAA,8CAa8BI,SAb9B,EAagD,CAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAtBL;AAAA;AAAA,+BAwBeC,OAxBf,EAwBmG;AAC3FC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAAK,CAACC,UAAN,CAAiBC,SAAtC;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAAK,CAACC,UAAN,CAAiBE,MAAjB,EAArB,EAH2F,CAM3F;AACA;AAEA;;AACA,aAAO,IAAP;AACH;AAnCL;AAAA;AAAA,iCAqCiBH,KArCjB,EAqC6D,CACrD;AACA;AACA;AACA;AAEA;AACA;AACH;AA7CL;AAAA;AAAA,kCA+CwB,CAChB;AACA;AACA;AACA;AACH;AApDL;AAAA;AAAA,6BAsDa;AAAA;;AACL;AACA;AACA;AACA,UAAII,IAAI,GAAC,MAAT;AACA,UAAIC,YAAJ;;AACA,UAAG,KAAKC,KAAL,CAAWd,SAAd,EAAyB;AACrBa,QAAAA,YAAY,GAAI;AAAK,UAAA,aAAa,EAAE;AAAA,mBAAM,KAAI,CAACb,SAAL,EAAN;AAAA,WAApB;AAA4C,UAAA,SAAS,EAAC,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKY,IAAL,CADJ,EAEI;AAAO,UAAA,SAAS,EAAC,kBAAjB;AAAoC,UAAA,IAAI,EAAC,MAAzC;AAAgD,UAAA,IAAI,EAAC,MAArD;AAA4D,UAAA,MAAM,EAAE,KAAKG,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAApE;AAAiG,UAAA,OAAO,EAAE;AAAA,mBAAM,KAAI,CAACD,WAAL,EAAN;AAAA,WAA1G;AAAoI,UAAA,QAAQ,EAAE,KAAKE,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAA9I;AAA4K,UAAA,KAAK,EAAEJ,IAAnL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CAAhB;AAIH;;AACDN,MAAAA,OAAO,CAACC,GAAR,CAAYM,YAAZ;AACA,aAEI;AAAK,QAAA,aAAa,EAAE;AAAA,iBAAM,KAAI,CAACb,SAAL,EAAN;AAAA,SAApB;AAA4C,QAAA,SAAS,EAAC,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKY,IAAL,CADpB,EAEqB,KAAKE,KAAL,CAAWd,SAAX,GAAuB;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,IAAI,EAAC,MAArD;AAA4D,QAAA,MAAM,EAAE,KAAKe,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAApE;AAAiG,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACD,WAAL,EAAN;AAAA,SAA1G;AAAoI,QAAA,QAAQ,EAAE,KAAKE,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAA9I;AAA4K,QAAA,KAAK,EAAEJ,IAAnL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,GAA2N,IAFhP,CAFJ;AAOH;AA1EL;AAAA;AAAA,gCA2EsB;AACd,WAAKT,QAAL,CAAc;AACVH,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH;AA/EL;;AAAA;AAAA,EAAkCH,KAAK,CAACqB,SAAxC","sourcesContent":["import * as React from \"react\";\nimport { BaseModel, BaseEntity, BaseModelListener, DefaultNodeModel } from 'storm-react-diagrams';\n\nclass OwnProps {\n    //selectedItem: DefaultNodeModel\n}\n\nclass State {\n    // updatedItem: DefaultNodeModel\n    // name: string;\n    showInput: boolean\n}\n\ntype Props = OwnProps;\n\nexport class NodeProperty extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.setState({\n            //updatedItem: this.props.selectedItem,\n            //name: this.props.selectedItem.name\n            showInput: false\n        })\n    }\n\n    componentWillReceiveProps(nextProps: Props) {\n\n        // if(nextProps != this.props) {\n        //     this.setState({\n        //         updatedItem: nextProps.selectedItem,\n        //         name: this.props.selectedItem.name\n        //     })\n        //     this.forceUpdate();\n        // }\n    }\n\n    changeName(newName: string): (event: React.MouseEvent<HTMLHeadingElement, MouseEvent>) => void {\n        console.log('event', event);\n        console.log('event', event.srcElement.innerHTML);\n        console.log('event', event.srcElement.append());\n\n\n        //let updatedNameItem: DefaultNodeModel = this.state.updatedItem;\n        // updatedNameItem.name = newName;\n\n        // this.setState({ updatedItem: updatedNameItem})\n        return null\n    }\n\n    handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n        // event.persist()\n        // console.log(event)\n        // console.log(this.state.name);\n        // console.log(event.target.value);\n\n        // this.setState({name: event.target.value});\n        // console.log('state:  ', this.state)\n    }\n\n    changeName1(): void {\n        //     console.log('HALLLOOOOO', this.state);\n        //     let updatedItem: DefaultNodeModel = this.state.updatedItem;\n        //     updatedItem.name = this.state.name; \n        //     this.setState({ updatedItem: updatedItem});\n    }\n\n    render() {\n        //let name = this.state.name;\n        //if(this.state.updatedItem == null) return 'Loading....' \n        //console.log('item', this.props.selectedItem);\n        let name='wwww';\n        let jsxToDisplay: JSX.Element;\n        if(this.state.showInput) {\n            jsxToDisplay =  <div onDoubleClick={() => this.showInput()} className=\"trayBottom\">\n                                <h1>{name}</h1>\n                                <input className=\"tray-bottom-item\" type=\"text\" name=\"name\" onBlur={this.changeName1.bind(this)} onAbort={() => this.changeName1()} onChange={this.handleChange.bind(this)} value={name}></input>\n                            </div>\n        }\n        console.log(jsxToDisplay);\n        return (\n            \n            <div onDoubleClick={() => this.showInput()} className=\"trayBottom\">\n                                <h1>{name}</h1>\n                                {this.state.showInput ? <input className=\"tray-bottom-item\" type=\"text\" name=\"name\" onBlur={this.changeName1.bind(this)} onAbort={() => this.changeName1()} onChange={this.handleChange.bind(this)} value={name}></input> : null}\n                            </div>\n        );\n    }\n    showInput(): void {\n        this.setState({\n            showInput: true\n        })\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}