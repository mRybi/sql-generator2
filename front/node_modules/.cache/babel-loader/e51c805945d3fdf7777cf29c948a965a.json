{"ast":null,"code":"import _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx\";\nimport './NodeProperties.scss';\nimport * as React from \"react\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nvar OwnProps = function OwnProps() {\n  _classCallCheck(this, OwnProps);\n\n  this.selectedItem = void 0;\n  this.diagramEngine = void 0;\n  this.selectedLink = void 0;\n  this.selectedRelation = void 0;\n};\n\nvar State = function State() {\n  _classCallCheck(this, State);\n\n  this.updatedItem = void 0;\n  this.name = void 0;\n};\n\nexport var NodeProperties =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NodeProperties, _React$Component);\n\n  function NodeProperties(props) {\n    _classCallCheck(this, NodeProperties);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NodeProperties).call(this, props));\n  }\n\n  _createClass(NodeProperties, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        updatedItem: this.props.selectedItem,\n        name: this.props.selectedItem.name\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps != this.props) {\n        this.setState({\n          updatedItem: nextProps.selectedItem,\n          name: nextProps.selectedItem.name\n        });\n        this.forceUpdate();\n      }\n    }\n    /*\n    in: boolean;\n    \tlabel: string;\n    \tpropertyType: PropertyType;\n    \tisPrimaryKey: boolean;\n    \tisForeignKey: boolean;\n    \tisNotNull: boolean;\n    \tisUnique: boolean;\n    \tisAutoIncremented: boolean;\n    \tlinks: { [id: string]: Link };\n    \titerator: number = 1;\n    \tfirstM2M: number = 1;\n    \tselectedRelation: RelationType;\n    \tdiagramEngine: DiagramEngine;\n    \n    \n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var columns = [{\n        dataField: 'label',\n        text: 'Property Name'\n      }, {\n        dataField: 'propertyType',\n        text: 'Property Type'\n      }, {\n        dataField: 'isPrimaryKey',\n        text: 'Is Primary Key'\n      }, {\n        dataField: 'isForeignKey',\n        text: 'Is Foreign Key'\n      }, {\n        dataField: 'isNotNull',\n        text: 'Is Nullable'\n      }, {\n        dataField: 'isAutoIncremented',\n        text: 'Is Auto Incremented'\n      }, {\n        dataField: 'isUnique',\n        text: 'Is Unique'\n      }];\n      var ports = this.state.updatedItem.ports;\n      var portsTable = Object.keys(ports).map(function (x) {\n        return ports[x];\n      });\n      return React.createElement(\"div\", {\n        className: \"trayBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        keyField: \"id\",\n        data: portsTable,\n        columns: columns,\n        cellEdit: cellEditFactory({\n          mode: 'click',\n          blurToSave: true\n        }),\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NodeProperties;\n}(React.Component);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx"],"names":["React","BootstrapTable","cellEditFactory","OwnProps","selectedItem","diagramEngine","selectedLink","selectedRelation","State","updatedItem","name","NodeProperties","props","setState","nextProps","forceUpdate","columns","dataField","text","ports","state","portsTable","Object","keys","map","x","mode","blurToSave","Component"],"mappings":";;;;;;AAAA,OAAO,uBAAP;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AASA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAO,gEAAP;;IACMC,Q;;;OACFC,Y;OACAC,a;OACAC,Y;OACAC,gB;;;IAGEC,K;;;OACFC,W;OACAC,I;;;AAKJ,WAAaC,cAAb;AAAA;AAAA;AAAA;;AACI,0BAAYC,KAAZ,EAA0B;AAAA;;AAAA,uFAChBA,KADgB;AAEzB;;AAHL;AAAA;AAAA,yCAKyB;AACjB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,WAAW,EAAE,KAAKG,KAAL,CAAWR,YADd;AAEVM,QAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWR,YAAX,CAAwBM;AAFpB,OAAd;AAIH;AAVL;AAAA;AAAA,8CAY8BI,SAZ9B,EAYgD;AACxC,UAAIA,SAAS,IAAI,KAAKF,KAAtB,EAA6B;AACzB,aAAKC,QAAL,CAAc;AACVJ,UAAAA,WAAW,EAAEK,SAAS,CAACV,YADb;AAEVM,UAAAA,IAAI,EAAEI,SAAS,CAACV,YAAV,CAAuBM;AAFnB,SAAd;AAIA,aAAKK,WAAL;AACH;AACJ;AAEL;;;;;;;;;;;;;;;;;;AAtBA;AAAA;AAAA,6BAwCa;AACL,UAAMC,OAAO,GAAG,CAAC;AACbC,QAAAA,SAAS,EAAE,OADE;AAEbC,QAAAA,IAAI,EAAE;AAFO,OAAD,EAGb;AACCD,QAAAA,SAAS,EAAE,cADZ;AAECC,QAAAA,IAAI,EAAE;AAFP,OAHa,EAMb;AACCD,QAAAA,SAAS,EAAE,cADZ;AAECC,QAAAA,IAAI,EAAE;AAFP,OANa,EASb;AACCD,QAAAA,SAAS,EAAE,cADZ;AAECC,QAAAA,IAAI,EAAE;AAFP,OATa,EAYb;AACCD,QAAAA,SAAS,EAAE,WADZ;AAECC,QAAAA,IAAI,EAAE;AAFP,OAZa,EAeb;AACCD,QAAAA,SAAS,EAAE,mBADZ;AAECC,QAAAA,IAAI,EAAE;AAFP,OAfa,EAkBb;AACCD,QAAAA,SAAS,EAAE,UADZ;AAECC,QAAAA,IAAI,EAAE;AAFP,OAlBa,CAAhB;AAuBA,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWX,WAAX,CAAuBU,KAAnC;AACA,UAAIE,UAAkB,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,GAAnB,CAAuB,UAAAC,CAAC,EAAI;AACjD,eAAON,KAAK,CAACM,CAAD,CAAZ;AACH,OAFwB,CAAzB;AAGA,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AACI,QAAA,QAAQ,EAAC,IADb;AAEI,QAAA,IAAI,EAAEJ,UAFV;AAGI,QAAA,OAAO,EAAEL,OAHb;AAII,QAAA,QAAQ,EAAEd,eAAe,CAAC;AACtBwB,UAAAA,IAAI,EAAE,OADgB;AAEtBC,UAAAA,UAAU,EAAE;AAFU,SAAD,CAJ7B;AAQI,QAAA,QAAQ,EAAG,KARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAeH;AAnFL;;AAAA;AAAA,EAAoC3B,KAAK,CAAC4B,SAA1C","sourcesContent":["import './NodeProperties.scss';\nimport * as React from \"react\";\nimport { DefaultNodeModel, DefaultPortModel, PortModel, DiagramModel, LabelModel, DefaultLinkModel, DiagramEngine } from 'storm-react-diagrams';\nimport { number } from 'prop-types';\nimport { randomBytes } from 'crypto';\nimport { Link } from '../models/Link';\nimport { Node } from \"../models/Node\";\nimport { PropertyType } from '../models/PropertyType';\nimport { Port } from '../models/Port';\nimport { RelationType } from '../../App2';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nclass OwnProps {\n    selectedItem: Node;\n    diagramEngine: DiagramEngine;\n    selectedLink: Link;\n    selectedRelation: RelationType;\n}\n\nclass State {\n    updatedItem: Node\n    name: string;\n}\n\ntype Props = OwnProps;\n\nexport class NodeProperties extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.setState({\n            updatedItem: this.props.selectedItem,\n            name: this.props.selectedItem.name,\n        })\n    }\n\n    componentWillReceiveProps(nextProps: Props) {\n        if (nextProps != this.props) {\n            this.setState({\n                updatedItem: nextProps.selectedItem,\n                name: nextProps.selectedItem.name\n            })\n            this.forceUpdate();\n        }\n    }\n\n/*\nin: boolean;\n\tlabel: string;\n\tpropertyType: PropertyType;\n\tisPrimaryKey: boolean;\n\tisForeignKey: boolean;\n\tisNotNull: boolean;\n\tisUnique: boolean;\n\tisAutoIncremented: boolean;\n\tlinks: { [id: string]: Link };\n\titerator: number = 1;\n\tfirstM2M: number = 1;\n\tselectedRelation: RelationType;\n\tdiagramEngine: DiagramEngine;\n\n\n*/\n\n    render() {\n        const columns = [{\n            dataField: 'label',\n            text: 'Property Name'\n        }, {\n            dataField: 'propertyType',\n            text: 'Property Type'\n        }, {\n            dataField: 'isPrimaryKey',\n            text: 'Is Primary Key'\n        }, {\n            dataField: 'isForeignKey',\n            text: 'Is Foreign Key'\n        }, {\n            dataField: 'isNotNull',\n            text: 'Is Nullable'\n        }, {\n            dataField: 'isAutoIncremented',\n            text: 'Is Auto Incremented'\n        }, {\n            dataField: 'isUnique',\n            text: 'Is Unique'\n        }];\n\n        let ports = this.state.updatedItem.ports as { [s: string]: Port };\n        let portsTable: Port[] = Object.keys(ports).map(x => {\n            return ports[x]; \n        });\n        return (\n            <div className=\"trayBottom\">\n                <BootstrapTable\n                    keyField=\"id\"\n                    data={portsTable}\n                    columns={columns}\n                    cellEdit={cellEditFactory({\n                        mode: 'click',\n                        blurToSave: true\n                    })}\n                    bordered={ false }\n                />\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}