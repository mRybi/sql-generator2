{"ast":null,"code":"import _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx\";\nimport './NodeProperties.scss';\nimport * as React from \"react\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nvar OwnProps = function OwnProps() {\n  _classCallCheck(this, OwnProps);\n\n  this.selectedItem = void 0;\n  this.diagramEngine = void 0;\n  this.selectedLink = void 0;\n  this.selectedRelation = void 0;\n};\n\nvar State = function State() {\n  _classCallCheck(this, State);\n\n  this.updatedItem = void 0;\n  this.name = void 0;\n};\n\nexport var NodeProperties =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NodeProperties, _React$Component);\n\n  function NodeProperties(props) {\n    _classCallCheck(this, NodeProperties);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NodeProperties).call(this, props));\n  }\n\n  _createClass(NodeProperties, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        updatedItem: this.props.selectedItem,\n        name: this.props.selectedItem.name\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps != this.props) {\n        this.setState({\n          updatedItem: nextProps.selectedItem,\n          name: nextProps.selectedItem.name\n        });\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"handleChangePK\",\n    value: function handleChangePK(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isPrimaryKey = !row.isPrimaryKey;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeFK\",\n    value: function handleChangeFK(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isForeignKey = !row.isForeignKey;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeNull\",\n    value: function handleChangeNull(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isNotNull = !row.isNotNull;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeUnique\",\n    value: function handleChangeUnique(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isUnique = !row.isUnique;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeAutoInc\",\n    value: function handleChangeAutoInc(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isAutoIncremented = !row.isAutoIncremented;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangepRropType\",\n    value: function handleChangepRropType(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).propertyType = event.target.value;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var columns = [{\n        dataField: 'label',\n        text: 'Property Name'\n      }, {\n        dataField: 'propertyType',\n        text: 'Property Type',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, React.createElement(\"select\", {\n            className: \"darkSelect\",\n            onChange: function onChange(event) {\n              return _this.handleChangepRropType(event, row);\n            },\n            value: row.propertyType,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            value: \"BIT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, \"BIT\"), React.createElement(\"option\", {\n            value: \"TINYINT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, \"TINYINT\"), React.createElement(\"option\", {\n            value: \"SMALLINT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, \"SMALLINT\"), React.createElement(\"option\", {\n            value: \"INT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, \"INT\"), React.createElement(\"option\", {\n            value: \"BIGINT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, \"BIGINT\"), React.createElement(\"option\", {\n            value: \"DECIMAL\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, \"DECIMAL\")), \"                \"));\n        }\n      }, {\n        dataField: 'isPrimaryKey',\n        text: 'Is Primary Key',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isPrimaryKey,\n            onChange: function onChange(event) {\n              return _this.handleChangePK(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          })));\n        }\n      }, {\n        dataField: 'isForeignKey',\n        text: 'Is Foreign Key',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isForeignKey,\n            onChange: function onChange(event) {\n              return _this.handleChangeFK(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          })));\n        }\n      }, {\n        dataField: 'isNotNull',\n        text: 'Is Nullable',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isNotNull,\n            onChange: function onChange(event) {\n              return _this.handleChangeNull(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          })));\n        }\n      }, {\n        dataField: 'isAutoIncremented',\n        text: 'Is Auto Incremented',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isAutoIncremented,\n            onChange: function onChange(event) {\n              return _this.handleChangeAutoInc(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          })));\n        }\n      }, {\n        dataField: 'isUnique',\n        text: 'Is Unique',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isUnique,\n            onChange: function onChange(event) {\n              return _this.handleChangeUnique(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          })));\n        }\n      }];\n      var ports = this.state.updatedItem.ports;\n      var portsTable = Object.keys(ports).map(function (x) {\n        return ports[x];\n      });\n      return React.createElement(\"div\", {\n        className: \"trayBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        keyField: \"id\",\n        data: portsTable,\n        columns: columns // cellEdit={cellEditFactory({\n        //     mode: 'click',\n        //     blurToSave: true\n        // })}\n        ,\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NodeProperties;\n}(React.Component);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx"],"names":["React","BootstrapTable","OwnProps","selectedItem","diagramEngine","selectedLink","selectedRelation","State","updatedItem","name","NodeProperties","props","setState","nextProps","forceUpdate","event","row","persist","state","getPortFromID","id","isPrimaryKey","isForeignKey","isNotNull","isUnique","isAutoIncremented","propertyType","target","value","columns","dataField","text","formatter","cellContent","handleChangepRropType","handleChangePK","handleChangeFK","handleChangeNull","handleChangeAutoInc","handleChangeUnique","ports","portsTable","Object","keys","map","x","Component"],"mappings":";;;;;;AAAA,OAAO,uBAAP;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAMA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAO,gEAAP;;IACMC,Q;;;OACFC,Y;OACAC,a;OACAC,Y;OACAC,gB;;;IAGEC,K;;;OACFC,W;OACAC,I;;;AAKJ,WAAaC,cAAb;AAAA;AAAA;AAAA;;AACI,0BAAYC,KAAZ,EAA0B;AAAA;;AAAA,uFAChBA,KADgB;AAEzB;;AAHL;AAAA;AAAA,yCAKyB;AACjB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,WAAW,EAAE,KAAKG,KAAL,CAAWR,YADd;AAEVM,QAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWR,YAAX,CAAwBM;AAFpB,OAAd;AAIH;AAVL;AAAA;AAAA,8CAY8BI,SAZ9B,EAYgD;AACxC,UAAIA,SAAS,IAAI,KAAKF,KAAtB,EAA6B;AACzB,aAAKC,QAAL,CAAc;AACVJ,UAAAA,WAAW,EAAEK,SAAS,CAACV,YADb;AAEVM,UAAAA,IAAI,EAAEI,SAAS,CAACV,YAAV,CAAuBM;AAFnB,SAAd;AAIA,aAAKK,WAAL;AACH;AACJ;AApBL;AAAA;AAAA,mCAsBeC,KAtBf,EAsB2DC,GAtB3D,EAsBsE;AAClED,MAAAA,KAAK,CAACE,OAAN;AAEC,WAAKC,KAAL,CAAWV,WAAX,CAAuBW,aAAvB,CAAqCH,GAAG,CAACI,EAAzC,CAAD,CAAuDC,YAAvD,GAAsE,CAACL,GAAG,CAACK,YAA3E;AAEA,WAAKP,WAAL;AACH;AA5BD;AAAA;AAAA,mCA8BeC,KA9Bf,EA8B2DC,GA9B3D,EA8BsE;AAClED,MAAAA,KAAK,CAACE,OAAN;AAEC,WAAKC,KAAL,CAAWV,WAAX,CAAuBW,aAAvB,CAAqCH,GAAG,CAACI,EAAzC,CAAD,CAAuDE,YAAvD,GAAsE,CAACN,GAAG,CAACM,YAA3E;AAEA,WAAKR,WAAL;AACH;AApCD;AAAA;AAAA,qCAsCiBC,KAtCjB,EAsC6DC,GAtC7D,EAsCwE;AACpED,MAAAA,KAAK,CAACE,OAAN;AAEC,WAAKC,KAAL,CAAWV,WAAX,CAAuBW,aAAvB,CAAqCH,GAAG,CAACI,EAAzC,CAAD,CAAuDG,SAAvD,GAAmE,CAACP,GAAG,CAACO,SAAxE;AAEA,WAAKT,WAAL;AACH;AA5CD;AAAA;AAAA,uCA8CmBC,KA9CnB,EA8C+DC,GA9C/D,EA8C0E;AACtED,MAAAA,KAAK,CAACE,OAAN;AAEC,WAAKC,KAAL,CAAWV,WAAX,CAAuBW,aAAvB,CAAqCH,GAAG,CAACI,EAAzC,CAAD,CAAuDI,QAAvD,GAAkE,CAACR,GAAG,CAACQ,QAAvE;AAEA,WAAKV,WAAL;AACH;AApDD;AAAA;AAAA,wCAsDoBC,KAtDpB,EAsDgEC,GAtDhE,EAsD2E;AACvED,MAAAA,KAAK,CAACE,OAAN;AAEC,WAAKC,KAAL,CAAWV,WAAX,CAAuBW,aAAvB,CAAqCH,GAAG,CAACI,EAAzC,CAAD,CAAuDK,iBAAvD,GAA2E,CAACT,GAAG,CAACS,iBAAhF;AAEA,WAAKX,WAAL;AACH;AA5DD;AAAA;AAAA,0CA8DsBC,KA9DtB,EA8DmEC,GA9DnE,EA8D8E;AAC5ED,MAAAA,KAAK,CAACE,OAAN;AACC,WAAKC,KAAL,CAAWV,WAAX,CAAuBW,aAAvB,CAAqCH,GAAG,CAACI,EAAzC,CAAD,CAAuDM,YAAvD,GAAsEX,KAAK,CAACY,MAAN,CAAaC,KAAnF;AAEA,WAAKd,WAAL;AACD;AAnED;AAAA;AAAA,6BAqEa;AAAA;;AACL,UAAMe,OAAO,GAAG,CAAC;AACbC,QAAAA,SAAS,EAAE,OADE;AAEbC,QAAAA,IAAI,EAAE;AAFO,OAAD,EAGb;AACCD,QAAAA,SAAS,EAAE,cADZ;AAECC,QAAAA,IAAI,EAAE,eAFP;AAGCC,QAAAA,SAAS,EAAE,mBAACC,WAAD,EAAmBjB,GAAnB;AAAA,iBACT;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAUA;AAAQ,YAAA,SAAS,EAAC,YAAlB;AAA+B,YAAA,QAAQ,EAAE,kBAACD,KAAD;AAAA,qBAAW,KAAI,CAACmB,qBAAL,CAA2BnB,KAA3B,EAAkCC,GAAlC,CAAX;AAAA,aAAzC;AAA4F,YAAA,KAAK,EAAEA,GAAG,CAACU,YAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACoB;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADpB,EAEoB;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFpB,EAGoB;AAAQ,YAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHpB,EAIoB;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJpB,EAKoB;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALpB,EAMoB;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANpB,CAVA,qBADF,CADS;AAAA;AAHZ,OAHa,EA4Bb;AACCI,QAAAA,SAAS,EAAE,cADZ;AAECC,QAAAA,IAAI,EAAE,gBAFP;AAGCC,QAAAA,SAAS,EAAE,mBAACC,WAAD,EAAmBjB,GAAnB;AAAA,iBACT;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAGA,GAAG,CAACK,YAArC;AAAoD,YAAA,QAAQ,EAAE,kBAACN,KAAD;AAAA,qBAAW,KAAI,CAACoB,cAAL,CAAoBpB,KAApB,EAA2BC,GAA3B,CAAX;AAAA,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CADS;AAAA;AAHZ,OA5Ba,EAsCb;AACCc,QAAAA,SAAS,EAAE,cADZ;AAECC,QAAAA,IAAI,EAAE,gBAFP;AAGCC,QAAAA,SAAS,EAAE,mBAACC,WAAD,EAAmBjB,GAAnB;AAAA,iBACT;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAGA,GAAG,CAACM,YAArC;AAAoD,YAAA,QAAQ,EAAE,kBAACP,KAAD;AAAA,qBAAW,KAAI,CAACqB,cAAL,CAAoBrB,KAApB,EAA2BC,GAA3B,CAAX;AAAA,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CADS;AAAA;AAHZ,OAtCa,EAgDb;AACCc,QAAAA,SAAS,EAAE,WADZ;AAECC,QAAAA,IAAI,EAAE,aAFP;AAGCC,QAAAA,SAAS,EAAE,mBAACC,WAAD,EAAmBjB,GAAnB;AAAA,iBACT;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAGA,GAAG,CAACO,SAArC;AAAiD,YAAA,QAAQ,EAAE,kBAACR,KAAD;AAAA,qBAAW,KAAI,CAACsB,gBAAL,CAAsBtB,KAAtB,EAA6BC,GAA7B,CAAX;AAAA,aAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CADS;AAAA;AAHZ,OAhDa,EA0Db;AACCc,QAAAA,SAAS,EAAE,mBADZ;AAECC,QAAAA,IAAI,EAAE,qBAFP;AAGCC,QAAAA,SAAS,EAAE,mBAACC,WAAD,EAAmBjB,GAAnB;AAAA,iBACT;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAGA,GAAG,CAACS,iBAArC;AAAyD,YAAA,QAAQ,EAAE,kBAACV,KAAD;AAAA,qBAAW,KAAI,CAACuB,mBAAL,CAAyBvB,KAAzB,EAAgCC,GAAhC,CAAX;AAAA,aAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CADS;AAAA;AAHZ,OA1Da,EAoEb;AACCc,QAAAA,SAAS,EAAE,UADZ;AAECC,QAAAA,IAAI,EAAE,WAFP;AAGCC,QAAAA,SAAS,EAAE,mBAACC,WAAD,EAAmBjB,GAAnB;AAAA,iBACT;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAGA,GAAG,CAACQ,QAArC;AAAgD,YAAA,QAAQ,EAAE,kBAACT,KAAD;AAAA,qBAAW,KAAI,CAACwB,kBAAL,CAAwBxB,KAAxB,EAA+BC,GAA/B,CAAX;AAAA,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CADS;AAAA;AAHZ,OApEa,CAAhB;AAgFA,UAAIwB,KAAK,GAAG,KAAKtB,KAAL,CAAWV,WAAX,CAAuBgC,KAAnC;AACA,UAAIC,UAAkB,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,GAAnB,CAAuB,UAAAC,CAAC,EAAI;AACjD,eAAOL,KAAK,CAACK,CAAD,CAAZ;AACH,OAFwB,CAAzB;AAGA,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AACI,QAAA,QAAQ,EAAC,IADb;AAEI,QAAA,IAAI,EAAEJ,UAFV;AAGI,QAAA,OAAO,EAAEZ,OAHb,CAII;AACA;AACA;AACA;AAPJ;AAQI,QAAA,QAAQ,EAAG,KARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAeH;AAzKL;;AAAA;AAAA,EAAoC7B,KAAK,CAAC8C,SAA1C","sourcesContent":["import './NodeProperties.scss';\nimport * as React from \"react\";\nimport { DiagramEngine } from 'storm-react-diagrams';\nimport { Link } from '../models/Link';\nimport { Node } from \"../models/Node\";\nimport { Port } from '../models/Port';\nimport { RelationType } from '../../App2';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nclass OwnProps {\n    selectedItem: Node;\n    diagramEngine: DiagramEngine;\n    selectedLink: Link;\n    selectedRelation: RelationType;\n}\n\nclass State {\n    updatedItem: Node\n    name: string;\n}\n\ntype Props = OwnProps;\n\nexport class NodeProperties extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.setState({\n            updatedItem: this.props.selectedItem,\n            name: this.props.selectedItem.name,\n        })\n    }\n\n    componentWillReceiveProps(nextProps: Props) {\n        if (nextProps != this.props) {\n            this.setState({\n                updatedItem: nextProps.selectedItem,\n                name: nextProps.selectedItem.name\n            })\n            this.forceUpdate();\n        }\n    }\n\nhandleChangePK(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isPrimaryKey = !row.isPrimaryKey;\n\n    this.forceUpdate();\n}\n\nhandleChangeFK(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isForeignKey = !row.isForeignKey;\n\n    this.forceUpdate();\n}\n\nhandleChangeNull(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isNotNull = !row.isNotNull;\n\n    this.forceUpdate();\n}\n\nhandleChangeUnique(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isUnique = !row.isUnique;\n\n    this.forceUpdate();\n}\n\nhandleChangeAutoInc(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isAutoIncremented = !row.isAutoIncremented;\n\n    this.forceUpdate();\n}\n\nhandleChangepRropType(event: React.ChangeEvent<HTMLSelectElement>, row: Port) {\n  event.persist();\n  (this.state.updatedItem.getPortFromID(row.id) as Port).propertyType = event.target.value;\n\n  this.forceUpdate();\n}\n\n    render() {\n        const columns = [{\n            dataField: 'label',\n            text: 'Property Name'\n        }, {\n            dataField: 'propertyType',\n            text: 'Property Type',\n            formatter: (cellContent: any, row: any) => (\n              <div className=\"checkbox\">\n                <label>\n                {/* BIT = 0,\n    TINYINT   = 1,\n    SMALLINT = 2,\n    INT = 3,\n    BIGINT = 4,\n    DECIMAL = 5,\n    NUMERIC = 6,\n    FLOAT = 7,\n    REAL = 8, */}\n                <select className=\"darkSelect\" onChange={(event) => this.handleChangepRropType(event, row)} value={row.propertyType}>\n                                    <option value=\"BIT\">BIT</option>\n                                    <option value=\"TINYINT\">TINYINT</option>\n                                    <option value=\"SMALLINT\">SMALLINT</option>\n                                    <option value=\"INT\">INT</option>\n                                    <option value=\"BIGINT\">BIGINT</option>\n                                    <option value=\"DECIMAL\">DECIMAL</option>\n                                </select>                </label>\n              </div>\n            )\n        }, {\n            dataField: 'isPrimaryKey',\n            text: 'Is Primary Key',\n            formatter: (cellContent: any, row: any) => (\n              <div className=\"checkbox\">\n                <label>\n                  <input type=\"checkbox\" checked={ row.isPrimaryKey } onChange={(event) => this.handleChangePK(event, row)} />\n                </label>\n              </div>\n            )\n        }, {\n            dataField: 'isForeignKey',\n            text: 'Is Foreign Key',\n            formatter: (cellContent: any, row: any) => (\n              <div className=\"checkbox\">\n                <label>\n                  <input type=\"checkbox\" checked={ row.isForeignKey } onChange={(event) => this.handleChangeFK(event, row)}/>\n                </label>\n              </div>\n            )\n        }, {\n            dataField: 'isNotNull',\n            text: 'Is Nullable',\n            formatter: (cellContent: any, row: any) => (\n              <div className=\"checkbox\">\n                <label>\n                  <input type=\"checkbox\" checked={ row.isNotNull } onChange={(event) => this.handleChangeNull(event, row)}/>\n                </label>\n              </div>\n            )\n        }, {\n            dataField: 'isAutoIncremented',\n            text: 'Is Auto Incremented',\n            formatter: (cellContent: any, row: any) => (\n              <div className=\"checkbox\">\n                <label>\n                  <input type=\"checkbox\" checked={ row.isAutoIncremented } onChange={(event) => this.handleChangeAutoInc(event, row)}/>\n                </label>\n              </div>\n            )\n        }, {\n            dataField: 'isUnique',\n            text: 'Is Unique',\n            formatter: (cellContent: any, row: any) => (\n              <div className=\"checkbox\">\n                <label>\n                  <input type=\"checkbox\" checked={ row.isUnique } onChange={(event) => this.handleChangeUnique(event, row)}/>\n                </label>\n              </div>\n            )\n        }];\n\n        let ports = this.state.updatedItem.ports as { [s: string]: Port };\n        let portsTable: Port[] = Object.keys(ports).map(x => {\n            return ports[x]; \n        });\n        return (\n            <div className=\"trayBottom\">\n                <BootstrapTable\n                    keyField=\"id\"\n                    data={portsTable}\n                    columns={columns}\n                    // cellEdit={cellEditFactory({\n                    //     mode: 'click',\n                    //     blurToSave: true\n                    // })}\n                    bordered={ false }\n                />\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}