{"ast":null,"code":"import _objectSpread from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { LinkModel, LabelModel } from \"storm-react-diagrams\";\nimport * as _ from \"lodash\";\nimport { Label } from \"./Label\";\nimport { RelationType } from \"../../App2\";\nexport var Link =\n/*#__PURE__*/\nfunction (_LinkModel) {\n  _inherits(Link, _LinkModel);\n\n  function Link() {\n    var _this;\n\n    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"default\";\n    var relationType = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, Link);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Link).call(this, type));\n    _this.width = void 0;\n    _this.color = void 0;\n    _this.curvyness = void 0;\n    _this.relationType = void 0;\n\n    if (relationType === RelationType.O2O) {\n      _this.color = \"rgba(255,255,255,0.5)\";\n    } else if (relationType === RelationType.O2M) {\n      _this.color = \"rgba(255,0,0,0.5)\";\n    } else {\n      _this.color = \"rgba(0,0,255,0.5)\";\n    }\n\n    _this.width = 3;\n    _this.curvyness = 50;\n    _this.relationType = relationType;\n    return _this;\n  }\n\n  _createClass(Link, [{\n    key: \"serialize\",\n    value: function serialize() {\n      return _.merge(_get(_getPrototypeOf(Link.prototype), \"serialize\", this).call(this), {\n        width: this.width,\n        color: this.color,\n        curvyness: this.curvyness\n      });\n    }\n  }, {\n    key: \"deSerialize\",\n    value: function deSerialize(ob, engine) {\n      _get(_getPrototypeOf(Link.prototype), \"deSerialize\", this).call(this, ob, engine);\n\n      this.color = ob.color;\n      this.width = ob.width;\n      this.curvyness = ob.curvyness;\n    }\n  }, {\n    key: \"addLabel\",\n    value: function addLabel(label) {\n      if (label instanceof LabelModel) {\n        return _get(_getPrototypeOf(Link.prototype), \"addLabel\", this).call(this, label);\n      }\n\n      var labelOb = new Label();\n      labelOb.setLabel(label);\n      return _get(_getPrototypeOf(Link.prototype), \"addLabel\", this).call(this, labelOb);\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth(width) {\n      this.width = width;\n      this.iterateListeners(function (listener, event) {\n        if (listener.widthChanged) {\n          listener.widthChanged(_objectSpread({}, event, {\n            width: width\n          }));\n        }\n      });\n    }\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      this.color = color;\n      this.iterateListeners(function (listener, event) {\n        if (listener.colorChanged) {\n          listener.colorChanged(_objectSpread({}, event, {\n            color: color\n          }));\n        }\n      });\n    }\n  }]);\n\n  return Link;\n}(LinkModel);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/models/Link.ts"],"names":["LinkModel","LabelModel","_","Label","RelationType","Link","type","relationType","width","color","curvyness","O2O","O2M","merge","ob","engine","label","labelOb","setLabel","iterateListeners","listener","event","widthChanged","colorChanged"],"mappings":";;;;;;;AAAA,SAAuCA,SAAvC,EAAiEC,UAAjE,QAAmF,sBAAnF;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,YAAT,QAA6B,YAA7B;AAQA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAMC,kBAAkE;AAAA;;AAAA,QAAtDC,IAAsD,uEAAvC,SAAuC;AAAA,QAA5BC,YAA4B;;AAAA;;AACjE,8EAAMD,IAAN;AADiE,UALlEE,KAKkE;AAAA,UAJlEC,KAIkE;AAAA,UAHlEC,SAGkE;AAAA,UAFlEH,YAEkE;;AAEjE,QAAGA,YAAY,KAAKH,YAAY,CAACO,GAAjC,EAAsC;AACrC,YAAKF,KAAL,GAAa,uBAAb;AACA,KAFD,MAEO,IAAGF,YAAY,KAAKH,YAAY,CAACQ,GAAjC,EAAsC;AAC5C,YAAKH,KAAL,GAAa,mBAAb;AACA,KAFM,MAEA;AACN,YAAKA,KAAL,GAAa,mBAAb;AACA;;AACD,UAAKD,KAAL,GAAa,CAAb;AACA,UAAKE,SAAL,GAAiB,EAAjB;AACA,UAAKH,YAAL,GAAoBA,YAApB;AAXiE;AAYjE;;AAlBF;AAAA;AAAA,gCAoBa;AACX,aAAOL,CAAC,CAACW,KAAF,sEAA2B;AACjCL,QAAAA,KAAK,EAAE,KAAKA,KADqB;AAEjCC,QAAAA,KAAK,EAAE,KAAKA,KAFqB;AAGjCC,QAAAA,SAAS,EAAE,KAAKA;AAHiB,OAA3B,CAAP;AAKA;AA1BF;AAAA;AAAA,gCA4BaI,EA5Bb,EA4BsBC,MA5BtB,EA4B6C;AAC3C,4EAAkBD,EAAlB,EAAsBC,MAAtB;;AACA,WAAKN,KAAL,GAAaK,EAAE,CAACL,KAAhB;AACA,WAAKD,KAAL,GAAaM,EAAE,CAACN,KAAhB;AACA,WAAKE,SAAL,GAAiBI,EAAE,CAACJ,SAApB;AACA;AAjCF;AAAA;AAAA,6BAmCUM,KAnCV,EAmCsC;AACpC,UAAIA,KAAK,YAAYf,UAArB,EAAiC;AAChC,kFAAsBe,KAAtB;AACA;;AACD,UAAIC,OAAO,GAAG,IAAId,KAAJ,EAAd;AACAc,MAAAA,OAAO,CAACC,QAAR,CAAiBF,KAAjB;AACA,gFAAsBC,OAAtB;AACA;AA1CF;AAAA;AAAA,6BA4CUT,KA5CV,EA4CyB;AACvB,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKW,gBAAL,CAAsB,UAACC,QAAD,EAAqCC,KAArC,EAA0D;AAC/E,YAAID,QAAQ,CAACE,YAAb,EAA2B;AAC1BF,UAAAA,QAAQ,CAACE,YAAT,mBAA2BD,KAA3B;AAAkCb,YAAAA,KAAK,EAAEA;AAAzC;AACA;AACD,OAJD;AAKA;AAnDF;AAAA;AAAA,6BAqDUC,KArDV,EAqDyB;AACvB,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKU,gBAAL,CAAsB,UAACC,QAAD,EAAqCC,KAArC,EAA0D;AAC/E,YAAID,QAAQ,CAACG,YAAb,EAA2B;AAC1BH,UAAAA,QAAQ,CAACG,YAAT,mBAA2BF,KAA3B;AAAkCZ,YAAAA,KAAK,EAAEA;AAAzC;AACA;AACD,OAJD;AAKA;AA5DF;;AAAA;AAAA,EAA0BT,SAA1B","sourcesContent":["import { LinkModelListener, BaseEvent, LinkModel, DiagramEngine, LabelModel } from \"storm-react-diagrams\";\nimport * as _ from \"lodash\";\nimport { Label } from \"./Label\";\nimport { RelationType } from \"../../App2\";\n\nexport interface DefaultLinkModelListener extends LinkModelListener {\n\tcolorChanged?(event: BaseEvent<Link> & { color: null | string }): void;\n\n\twidthChanged?(event: BaseEvent<Link> & { width: 0 | number }): void;\n}\n\nexport class Link extends LinkModel<DefaultLinkModelListener> {\n\twidth: number;\n\tcolor: string;\n\tcurvyness: number;\n\trelationType: RelationType;\n\n\tconstructor(type: string = \"default\", relationType: RelationType) {\n\t\tsuper(type);\n\t\tif(relationType === RelationType.O2O) {\n\t\t\tthis.color = \"rgba(255,255,255,0.5)\";\n\t\t} else if(relationType === RelationType.O2M) {\n\t\t\tthis.color = \"rgba(255,0,0,0.5)\";\n\t\t} else {\n\t\t\tthis.color = \"rgba(0,0,255,0.5)\";\n\t\t}\n\t\tthis.width = 3;\n\t\tthis.curvyness = 50;\n\t\tthis.relationType = relationType;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\twidth: this.width,\n\t\t\tcolor: this.color,\n\t\t\tcurvyness: this.curvyness\n\t\t});\n\t}\n\n\tdeSerialize(ob: any, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.color = ob.color;\n\t\tthis.width = ob.width;\n\t\tthis.curvyness = ob.curvyness;\n\t}\n\n\taddLabel(label: LabelModel | string) {\n\t\tif (label instanceof LabelModel) {\n\t\t\treturn super.addLabel(label);\n\t\t}\n\t\tlet labelOb = new Label();\n\t\tlabelOb.setLabel(label);\n\t\treturn super.addLabel(labelOb);\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.width = width;\n\t\tthis.iterateListeners((listener: DefaultLinkModelListener, event: BaseEvent) => {\n\t\t\tif (listener.widthChanged) {\n\t\t\t\tlistener.widthChanged({ ...event, width: width });\n\t\t\t}\n\t\t});\n\t}\n\n\tsetColor(color: string) {\n\t\tthis.color = color;\n\t\tthis.iterateListeners((listener: DefaultLinkModelListener, event: BaseEvent) => {\n\t\t\tif (listener.colorChanged) {\n\t\t\t\tlistener.colorChanged({ ...event, color: color });\n\t\t\t}\n\t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}