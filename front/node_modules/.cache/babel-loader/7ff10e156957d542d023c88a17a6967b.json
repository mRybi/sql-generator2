{"ast":null,"code":"import _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/App2.tsx\";\nimport * as React from \"react\";\nimport * as _ from \"lodash\";\nimport { DefaultNodeModel, DiagramWidget } from \"storm-react-diagrams\";\nimport { TrayItemWidget } from \"./components/dragAndDrop/TrayItemWidget\";\nimport { TrayWidget } from \"./components/dragAndDrop/TrayWidget\";\nimport './dragAndDrop.scss';\n\nrequire(\"storm-react-diagrams/dist/style.min.css\");\n\nimport './App.css';\nimport { NodeInfo } from \"./components/nodeInfo/NodeInfo\";\n\n/** \n * @author Dylan Vorster\n */\nexport var App2 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App2, _React$Component);\n\n  function App2(props) {\n    var _this;\n\n    _classCallCheck(this, App2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App2).call(this, props));\n    _this.state = {\n      selectedNode: null\n    };\n    return _this;\n  }\n\n  _createClass(App2, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Create diagrams\")), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(TrayWidget, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(TrayItemWidget, {\n        model: {\n          type: \"in\"\n        },\n        name: \"In Node\",\n        color: \"rgb(192,255,0)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(TrayItemWidget, {\n        model: {\n          type: \"out\"\n        },\n        name: \"Out Node\",\n        color: \"rgb(0,192,255)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"diagram-layer\",\n        onDrop: function onDrop(event) {\n          var data = JSON.parse(event.dataTransfer.getData(\"storm-diagram-node\"));\n\n          var nodesCount = _.keys(_this2.props.app.getDiagramEngine().getDiagramModel().getNodes()).length;\n\n          var node = null;\n\n          if (data.type === \"in\") {\n            node = new DefaultNodeModel(\"Node \" + (nodesCount + 1), \"rgb(192,255,0)\");\n            node.addInPort(\"In\");\n          } else {\n            node = new DefaultNodeModel(\"Node \" + (nodesCount + 1), \"rgb(0,192,255)\");\n            node.addOutPort(\"Out\");\n            node.addOutPort(\"XDD\");\n            node.addInPort(\"IN\");\n          }\n\n          var points = _this2.props.app.getDiagramEngine().getRelativeMousePoint(event);\n\n          node.x = points.x;\n          node.y = points.y;\n\n          _this2.props.app.getDiagramEngine().getDiagramModel().addNode(node);\n\n          _this2.forceUpdate();\n        },\n        onDragOver: function onDragOver(event) {\n          event.preventDefault();\n        },\n        onClick: function onClick(event) {\n          _this2.setState({\n            selectedNode: _this2.props.app.getDiagramEngine().getDiagramModel().getSelectedItems()[0]\n          });\n\n          console.log('XD', _this2.state.selectedNode);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(DiagramWidget, {\n        className: \"srd-demo-canvas\",\n        diagramEngine: this.props.app.getDiagramEngine(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.selectedNode != null ? React.createElement(NodeInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }) : null))));\n    }\n  }]);\n\n  return App2;\n}(React.Component);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/App2.tsx"],"names":["React","_","DefaultNodeModel","DiagramWidget","TrayItemWidget","TrayWidget","require","NodeInfo","App2","props","state","selectedNode","type","event","data","JSON","parse","dataTransfer","getData","nodesCount","keys","app","getDiagramEngine","getDiagramModel","getNodes","length","node","addInPort","addOutPort","points","getRelativeMousePoint","x","y","addNode","forceUpdate","preventDefault","setState","getSelectedItems","console","log","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport * as _ from \"lodash\";\nimport { DefaultNodeModel, DiagramWidget } from \"storm-react-diagrams\";\nimport { TrayItemWidget } from \"./components/dragAndDrop/TrayItemWidget\";\nimport { TrayWidget } from \"./components/dragAndDrop/TrayWidget\";\nimport { Application } from \"./components/dragAndDrop/Application\";\nimport './dragAndDrop.scss';\nrequire(\"storm-react-diagrams/dist/style.min.css\");\nimport './App.css';\nimport { NodeInfo } from \"./components/nodeInfo/NodeInfo\";\n\nexport interface BodyWidgetProps {\n\tapp: Application;\n}\n\nexport interface BodyWidgetState {\n\tselectedNode: any;\n}\n\n/** \n * @author Dylan Vorster\n */\nexport class App2 extends React.Component<BodyWidgetProps, BodyWidgetState> {\n\tconstructor(props: BodyWidgetProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselectedNode: null\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"body\">\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<div className=\"title\">Create diagrams</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<TrayWidget>\n\t\t\t\t\t\t<TrayItemWidget model={{ type: \"in\" }} name=\"In Node\" color=\"rgb(192,255,0)\" />\n\t\t\t\t\t\t<TrayItemWidget model={{ type: \"out\" }} name=\"Out Node\" color=\"rgb(0,192,255)\" />\n\t\t\t\t\t</TrayWidget>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"diagram-layer\"\n\t\t\t\t\t\tonDrop={event => {\n\t\t\t\t\t\t\tvar data = JSON.parse(event.dataTransfer.getData(\"storm-diagram-node\"));\n\t\t\t\t\t\t\tvar nodesCount = _.keys(\n\t\t\t\t\t\t\t\tthis.props.app\n\t\t\t\t\t\t\t\t\t.getDiagramEngine()\n\t\t\t\t\t\t\t\t\t.getDiagramModel()\n\t\t\t\t\t\t\t\t\t.getNodes()\n\t\t\t\t\t\t\t).length;\n\n\t\t\t\t\t\t\tvar node = null;\n\t\t\t\t\t\t\tif (data.type === \"in\") {\n\t\t\t\t\t\t\t\tnode = new DefaultNodeModel(\"Node \" + (nodesCount + 1), \"rgb(192,255,0)\");\n\t\t\t\t\t\t\t\tnode.addInPort(\"In\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnode = new DefaultNodeModel(\"Node \" + (nodesCount + 1), \"rgb(0,192,255)\");\n\t\t\t\t\t\t\t\tnode.addOutPort(\"Out\");\n\t\t\t\t\t\t\t\tnode.addOutPort(\"XDD\")\n\t\t\t\t\t\t\t\tnode.addInPort(\"IN\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar points = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n\t\t\t\t\t\t\tnode.x = points.x;\n\t\t\t\t\t\t\tnode.y = points.y;\n\t\t\t\t\t\t\tthis.props.app\n\t\t\t\t\t\t\t\t.getDiagramEngine()\n\t\t\t\t\t\t\t\t.getDiagramModel()\n\t\t\t\t\t\t\t\t.addNode(node);\n\t\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonDragOver={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={event => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tselectedNode: this.props.app\n\t\t\t\t\t\t\t\t.getDiagramEngine()\n\t\t\t\t\t\t\t\t.getDiagramModel()\n\t\t\t\t\t\t\t\t.getSelectedItems()[0]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconsole.log('XD',this.state.selectedNode);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DiagramWidget className=\"srd-demo-canvas\" diagramEngine={this.props.app.getDiagramEngine()} >\n\t\t\t\t\t\t{ this.state.selectedNode != null ? <NodeInfo /> : null}\n\t\t\t\t\t\t</DiagramWidget>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}