{"ast":null,"code":"import _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx\";\nimport './NodeProperties.scss';\nimport * as React from \"react\";\nimport { Port } from '../models/Port';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { PropertyType } from '../models/PropertyType';\nimport { Col, Row, Grid } from '../grid';\nimport AppContext from '../../context/appContext/AppContext';\n\nvar OwnProps = function OwnProps() {\n  _classCallCheck(this, OwnProps);\n\n  this.selectedItem = void 0;\n  this.diagramEngine = void 0;\n  this.selectedLink = void 0;\n  this.selectedRelation = void 0;\n};\n\nvar State = function State() {\n  _classCallCheck(this, State);\n\n  this.updatedItem = void 0;\n  this.name = void 0;\n  this.portLabel = void 0;\n  this.showInput = void 0;\n};\n\nexport var NodeProperties =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NodeProperties, _React$Component);\n\n  function NodeProperties(props) {\n    _classCallCheck(this, NodeProperties);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NodeProperties).call(this, props));\n  }\n\n  _createClass(NodeProperties, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        updatedItem: this.props.selectedItem,\n        name: this.props.selectedItem.name,\n        portLabel: \"\",\n        showInput: false\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps != this.props) {\n        this.setState({\n          updatedItem: nextProps.selectedItem,\n          name: nextProps.selectedItem.name\n        });\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"handleChangePK\",\n    value: function handleChangePK(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isPrimaryKey = !row.isPrimaryKey;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeFK\",\n    value: function handleChangeFK(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isForeignKey = !row.isForeignKey;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeNull\",\n    value: function handleChangeNull(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isNotNull = !row.isNotNull;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeUnique\",\n    value: function handleChangeUnique(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isUnique = !row.isUnique;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeAutoInc\",\n    value: function handleChangeAutoInc(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isAutoincremented = !row.isAutoincremented;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangepRropType\",\n    value: function handleChangepRropType(event, row) {\n      event.persist(); // (this.state.updatedItem.getPortFromID(row.id) as Port).propertyType = event.target.value;\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangePortLabel\",\n    value: function handleChangePortLabel(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).label = event.target.value;\n    }\n  }, {\n    key: \"handleNameChange\",\n    value: function handleNameChange(event) {\n      event.persist();\n      this.state.updatedItem.name = event.target.value; // this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log('state', this.state);\n      var columns = [];\n\n      if (this.context.view !== 0) {\n        columns = [{\n          dataField: 'label',\n          text: 'Property Name',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"input\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              className: \"darkInput\",\n              type: \"text\",\n              defaultValue: row.label,\n              onChange: function onChange(event) {\n                return _this.handleChangePortLabel(event, row);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 125\n              },\n              __self: this\n            }));\n          }\n        }, {\n          style: {\n            paddingLeft: 0\n          },\n          dataField: 'propertyType',\n          text: 'Property Type',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 134\n              },\n              __self: this\n            }, React.createElement(\"select\", {\n              className: \"darkSelect\",\n              onChange: function onChange(event) {\n                return _this.handleChangepRropType(event, row);\n              },\n              value: row.propertyType,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 135\n              },\n              __self: this\n            }, React.createElement(\"option\", {\n              value: \"BIT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136\n              },\n              __self: this\n            }, \"BIT\"), React.createElement(\"option\", {\n              value: \"TINYINT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 137\n              },\n              __self: this\n            }, \"TINYINT\"), React.createElement(\"option\", {\n              value: \"SMALLINT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 138\n              },\n              __self: this\n            }, \"SMALLINT\"), React.createElement(\"option\", {\n              value: \"INT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139\n              },\n              __self: this\n            }, \"INT\"), React.createElement(\"option\", {\n              value: \"BIGINT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140\n              },\n              __self: this\n            }, \"BIGINT\"), React.createElement(\"option\", {\n              value: \"DECIMAL\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141\n              },\n              __self: this\n            }, \"DECIMAL\"), React.createElement(\"option\", {\n              value: \"NUMERIC\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            }, \"NUMERIC\"), React.createElement(\"option\", {\n              value: \"FLOAT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 143\n              },\n              __self: this\n            }, \"FLOAT\"), React.createElement(\"option\", {\n              value: \"REAL\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 144\n              },\n              __self: this\n            }, \"REAL\"), React.createElement(\"option\", {\n              value: \"DATE\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146\n              },\n              __self: this\n            }, \"DATE\"), React.createElement(\"option\", {\n              value: \"TIME\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147\n              },\n              __self: this\n            }, \"TIME\"), React.createElement(\"option\", {\n              value: \"DATETIME\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148\n              },\n              __self: this\n            }, \"DATETIME\"), React.createElement(\"option\", {\n              value: \"TIMESTAMP\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149\n              },\n              __self: this\n            }, \"TIMESTAMP\"), React.createElement(\"option\", {\n              value: \"YEAR\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 150\n              },\n              __self: this\n            }, \"YEAR\"), React.createElement(\"option\", {\n              value: \"CHAR\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 152\n              },\n              __self: this\n            }, \"CHAR\"), React.createElement(\"option\", {\n              value: \"VARCHAR\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 153\n              },\n              __self: this\n            }, \"VARCHAR\"), React.createElement(\"option\", {\n              value: \"VARCHARMAX\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 154\n              },\n              __self: this\n            }, \"VARCHARMAX\"), React.createElement(\"option\", {\n              value: \"TEXT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155\n              },\n              __self: this\n            }, \"TEXT\"), React.createElement(\"option\", {\n              value: \"NCHAR\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157\n              },\n              __self: this\n            }, \"NCHAR\"), React.createElement(\"option\", {\n              value: \"NVARCHAR\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158\n              },\n              __self: this\n            }, \"NVARCHAR\"), React.createElement(\"option\", {\n              value: \"NVARCHARMAX\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159\n              },\n              __self: this\n            }, \"NVARCHARMAX\"), React.createElement(\"option\", {\n              value: \"NTEXT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160\n              },\n              __self: this\n            }, \"NTEXT\"), React.createElement(\"option\", {\n              value: \"BINARY\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161\n              },\n              __self: this\n            }, \"BINARY\"), React.createElement(\"option\", {\n              value: \"VARBINARY\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162\n              },\n              __self: this\n            }, \"VARBINARY\"), React.createElement(\"option\", {\n              value: \"VARBINARYMAX\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163\n              },\n              __self: this\n            }, \"VARBINARYMAX\"), React.createElement(\"option\", {\n              value: \"IMAGE\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 164\n              },\n              __self: this\n            }, \"IMAGE\"), React.createElement(\"option\", {\n              value: \"CLOB\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165\n              },\n              __self: this\n            }, \"CLOB\"), React.createElement(\"option\", {\n              value: \"BLOB\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166\n              },\n              __self: this\n            }, \"BLOB\"), React.createElement(\"option\", {\n              value: \"XML\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 167\n              },\n              __self: this\n            }, \"XML\"), React.createElement(\"option\", {\n              value: \"JSON\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 168\n              },\n              __self: this\n            }, \"JSON\"))));\n          }\n        }, {\n          dataField: 'isPrimaryKey',\n          text: 'Is Primary Key',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 178\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 179\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"checkbox\",\n              checked: row.isPrimaryKey,\n              onChange: function onChange(event) {\n                return _this.handleChangePK(event, row);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 180\n              },\n              __self: this\n            })));\n          }\n        }, {\n          dataField: 'isForeignKey',\n          text: 'Is Foreign Key',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 190\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 191\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"checkbox\",\n              checked: row.isForeignKey,\n              onChange: function onChange(event) {\n                return _this.handleChangeFK(event, row);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 192\n              },\n              __self: this\n            })));\n          }\n        }, {\n          dataField: 'isNotNull',\n          text: 'Is Nullable',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 203\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"checkbox\",\n              checked: row.isNotNull,\n              onChange: function onChange(event) {\n                return _this.handleChangeNull(event, row);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 204\n              },\n              __self: this\n            })));\n          }\n        }, {\n          dataField: 'isAutoIncremented',\n          text: 'Is Auto Incremented',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 212\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 213\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"checkbox\",\n              checked: row.isAutoIncremented,\n              onChange: function onChange(event) {\n                return _this.handleChangeAutoInc(event, row);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 214\n              },\n              __self: this\n            })));\n          }\n        }, {\n          dataField: 'isUnique',\n          text: 'Is Unique',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 222\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 223\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"checkbox\",\n              checked: row.isUnique,\n              onChange: function onChange(event) {\n                return _this.handleChangeUnique(event, row);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 224\n              },\n              __self: this\n            })));\n          }\n        }, {\n          dataField: 'remove',\n          text: 'Remove',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 232\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 233\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              onClick: function onClick() {\n                return _this.removePort(row);\n              },\n              className: \"mi mi-Delete red\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 234\n              },\n              __self: this\n            })));\n          }\n        }];\n      } else {\n        columns = [{\n          dataField: 'label',\n          text: 'Property Name',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"input\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 244\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              className: \"darkInput\",\n              type: \"text\",\n              defaultValue: row.label,\n              onChange: function onChange(event) {\n                return _this.handleChangePortLabel(event, row);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 245\n              },\n              __self: this\n            }));\n          }\n        }, {\n          style: {\n            paddingLeft: 0\n          },\n          dataField: 'propertyType',\n          text: 'Property Type',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 253\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 254\n              },\n              __self: this\n            }, React.createElement(\"select\", {\n              className: \"darkSelect\",\n              onChange: function onChange(event) {\n                return _this.handleChangepRropType(event, row);\n              },\n              value: row.propertyType,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 255\n              },\n              __self: this\n            }, React.createElement(\"option\", {\n              value: \"BIT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 256\n              },\n              __self: this\n            }, \"BIT\"), React.createElement(\"option\", {\n              value: \"TINYINT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 257\n              },\n              __self: this\n            }, \"TINYINT\"), React.createElement(\"option\", {\n              value: \"SMALLINT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 258\n              },\n              __self: this\n            }, \"SMALLINT\"), React.createElement(\"option\", {\n              value: \"INT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 259\n              },\n              __self: this\n            }, \"INT\"), React.createElement(\"option\", {\n              value: \"BIGINT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 260\n              },\n              __self: this\n            }, \"BIGINT\"), React.createElement(\"option\", {\n              value: \"DECIMAL\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 261\n              },\n              __self: this\n            }, \"DECIMAL\"), React.createElement(\"option\", {\n              value: \"NUMERIC\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 262\n              },\n              __self: this\n            }, \"NUMERIC\"), React.createElement(\"option\", {\n              value: \"FLOAT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 263\n              },\n              __self: this\n            }, \"FLOAT\"), React.createElement(\"option\", {\n              value: \"REAL\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 264\n              },\n              __self: this\n            }, \"REAL\"), React.createElement(\"option\", {\n              value: \"DATE\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 266\n              },\n              __self: this\n            }, \"DATE\"), React.createElement(\"option\", {\n              value: \"TIME\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 267\n              },\n              __self: this\n            }, \"TIME\"), React.createElement(\"option\", {\n              value: \"DATETIME\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 268\n              },\n              __self: this\n            }, \"DATETIME\"), React.createElement(\"option\", {\n              value: \"TIMESTAMP\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 269\n              },\n              __self: this\n            }, \"TIMESTAMP\"), React.createElement(\"option\", {\n              value: \"YEAR\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 270\n              },\n              __self: this\n            }, \"YEAR\"), React.createElement(\"option\", {\n              value: \"CHAR\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 272\n              },\n              __self: this\n            }, \"CHAR\"), React.createElement(\"option\", {\n              value: \"VARCHAR\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 273\n              },\n              __self: this\n            }, \"VARCHAR\"), React.createElement(\"option\", {\n              value: \"VARCHARMAX\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 274\n              },\n              __self: this\n            }, \"VARCHARMAX\"), React.createElement(\"option\", {\n              value: \"TEXT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 275\n              },\n              __self: this\n            }, \"TEXT\"), React.createElement(\"option\", {\n              value: \"NCHAR\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 277\n              },\n              __self: this\n            }, \"NCHAR\"), React.createElement(\"option\", {\n              value: \"NVARCHAR\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 278\n              },\n              __self: this\n            }, \"NVARCHAR\"), React.createElement(\"option\", {\n              value: \"NVARCHARMAX\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 279\n              },\n              __self: this\n            }, \"NVARCHARMAX\"), React.createElement(\"option\", {\n              value: \"NTEXT\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 280\n              },\n              __self: this\n            }, \"NTEXT\"), React.createElement(\"option\", {\n              value: \"BINARY\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 281\n              },\n              __self: this\n            }, \"BINARY\"), React.createElement(\"option\", {\n              value: \"VARBINARY\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 282\n              },\n              __self: this\n            }, \"VARBINARY\"), React.createElement(\"option\", {\n              value: \"VARBINARYMAX\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 283\n              },\n              __self: this\n            }, \"VARBINARYMAX\"), React.createElement(\"option\", {\n              value: \"IMAGE\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 284\n              },\n              __self: this\n            }, \"IMAGE\"), React.createElement(\"option\", {\n              value: \"CLOB\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 285\n              },\n              __self: this\n            }, \"CLOB\"), React.createElement(\"option\", {\n              value: \"BLOB\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 286\n              },\n              __self: this\n            }, \"BLOB\"), React.createElement(\"option\", {\n              value: \"XML\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 287\n              },\n              __self: this\n            }, \"XML\"), React.createElement(\"option\", {\n              value: \"JSON\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 288\n              },\n              __self: this\n            }, \"JSON\"))));\n          }\n        }, {\n          dataField: 'isPrimaryKey',\n          text: 'Is Primary Key',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 298\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 299\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"checkbox\",\n              checked: row.isPrimaryKey,\n              onChange: function onChange(event) {\n                return _this.handleChangePK(event, row);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 300\n              },\n              __self: this\n            })));\n          }\n        }, {\n          dataField: 'isNotNull',\n          text: 'Is Nullable',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 311\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 312\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"checkbox\",\n              checked: row.isNotNull,\n              onChange: function onChange(event) {\n                return _this.handleChangeNull(event, row);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 313\n              },\n              __self: this\n            })));\n          }\n        }, {\n          dataField: 'isAutoIncremented',\n          text: 'Is Auto Incremented',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 321\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 322\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"checkbox\",\n              checked: row.isAutoIncremented,\n              onChange: function onChange(event) {\n                return _this.handleChangeAutoInc(event, row);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 323\n              },\n              __self: this\n            })));\n          }\n        }, {\n          dataField: 'isUnique',\n          text: 'Is Unique',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 331\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 332\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: \"checkbox\",\n              checked: row.isUnique,\n              onChange: function onChange(event) {\n                return _this.handleChangeUnique(event, row);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 333\n              },\n              __self: this\n            })));\n          }\n        }, {\n          dataField: 'remove',\n          text: 'Remove',\n          formatter: function formatter(cellContent, row) {\n            return React.createElement(\"div\", {\n              className: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 341\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 342\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              onClick: function onClick() {\n                return _this.removePort(row);\n              },\n              className: \"mi mi-Delete red\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 343\n              },\n              __self: this\n            })));\n          }\n        }];\n      }\n\n      var ports = this.state.updatedItem.ports && this.state.updatedItem.ports;\n      var portsTable = Object.keys(ports).map(function (x) {\n        return ports[x];\n      });\n      portsTable = this.context.view === 0 ? portsTable.filter(function (p) {\n        return !p.isForeignKey;\n      }) : portsTable; // for entity view enable FK in rel view\n\n      var newPorts = [];\n      newPorts.push(new Port(false, false, false, false, false, false, 'newProp1', 'newProp1'));\n      return React.createElement(\"div\", {\n        className: \"trayBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, !this.state.showInput ? React.createElement(\"h1\", {\n        onDoubleClick: function onDoubleClick() {\n          return _this.setState({\n            showInput: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, this.state.name) : React.createElement(\"input\", {\n        className: \"darkInput fs-24\",\n        defaultValue: this.state.name,\n        onChange: function onChange(event) {\n          return _this.handleNameChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      })), React.createElement(Col, {\n        className: \"tableFixHead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        keyField: \"id\",\n        data: portsTable,\n        columns: columns,\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"mouse-cursor\",\n        onClick: function onClick() {\n          return _this.addNewPort(portsTable.length);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \"Add new prop\")))));\n    }\n  }, {\n    key: \"addNewPort\",\n    value: function addNewPort(newPortNumber) {\n      this.state.updatedItem.addInPort(false, false, false, false, false, \"new port \".concat(newPortNumber), PropertyType.INT);\n      this.forceUpdate();\n    }\n  }, {\n    key: \"removePort\",\n    value: function removePort(port) {\n      var _this2 = this;\n\n      if (Object.entries(port.links).length !== 0 && port.links.constructor === Object) {\n        var portLinks = Object.keys(port.links).map(function (x) {\n          return port.links[x];\n        });\n        portLinks.forEach(function (p) {\n          return _this2.props.diagramEngine.getDiagramModel().removeLink(p);\n        });\n      }\n\n      this.state.updatedItem.removePort(port);\n      this.forceUpdate();\n    }\n  }]);\n\n  return NodeProperties;\n}(React.Component);\nNodeProperties.contextType = AppContext;","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx"],"names":["React","Port","BootstrapTable","PropertyType","Col","Row","Grid","AppContext","OwnProps","selectedItem","diagramEngine","selectedLink","selectedRelation","State","updatedItem","name","portLabel","showInput","NodeProperties","props","setState","nextProps","forceUpdate","event","row","persist","state","getPortFromID","id","isPrimaryKey","isForeignKey","isNotNull","isUnique","isAutoincremented","label","target","value","console","log","columns","context","view","dataField","text","formatter","cellContent","handleChangePortLabel","style","paddingLeft","handleChangepRropType","propertyType","handleChangePK","handleChangeFK","handleChangeNull","isAutoIncremented","handleChangeAutoInc","handleChangeUnique","removePort","ports","portsTable","Object","keys","map","x","filter","p","newPorts","push","handleNameChange","addNewPort","length","newPortNumber","addInPort","INT","port","entries","links","constructor","portLinks","forEach","getDiagramModel","removeLink","Component","contextType"],"mappings":"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","sourcesContent":["import './NodeProperties.scss';\nimport * as React from \"react\";\nimport { DiagramEngine } from 'storm-react-diagrams';\nimport { Link } from '../models/Link';\nimport { Node } from \"../models/Node\";\nimport { Port } from '../models/Port';\nimport { RelationType } from '../../AppView';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { PropertyType } from '../models/PropertyType';\nimport { Col, Row, Grid } from '../grid';\nimport AppContext from '../../context/appContext/AppContext';\n\nclass OwnProps {\n  selectedItem: Node;\n  diagramEngine: DiagramEngine;\n  selectedLink: Link;\n  selectedRelation: RelationType;\n}\n\nclass State {\n  updatedItem: Node\n  name: string;\n  portLabel: string;\n  showInput: boolean;\n}\n\ntype Props = OwnProps;\n\nexport class NodeProperties extends React.Component<Props, State> {\n  static contextType = AppContext;\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.setState({\n      updatedItem: this.props.selectedItem,\n      name: this.props.selectedItem.name,\n      portLabel: \"\",\n      showInput: false\n    })\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps != this.props) {\n      this.setState({\n        updatedItem: nextProps.selectedItem,\n        name: nextProps.selectedItem.name\n      })\n      this.forceUpdate();\n    }\n  }\n\n  handleChangePK(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isPrimaryKey = !row.isPrimaryKey;\n\n    this.forceUpdate();\n  }\n\n  handleChangeFK(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isForeignKey = !row.isForeignKey;\n\n    this.forceUpdate();\n  }\n\n  handleChangeNull(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isNotNull = !row.isNotNull;\n\n    this.forceUpdate();\n  }\n\n  handleChangeUnique(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isUnique = !row.isUnique;\n\n    this.forceUpdate();\n  }\n\n  handleChangeAutoInc(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isAutoincremented = !row.isAutoincremented;\n\n    this.forceUpdate();\n  }\n\n  handleChangepRropType(event: React.ChangeEvent<HTMLSelectElement>, row: Port) {\n    event.persist();\n    // (this.state.updatedItem.getPortFromID(row.id) as Port).propertyType = event.target.value;\n\n    this.forceUpdate();\n  }\n\n  handleChangePortLabel(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n    (this.state.updatedItem.getPortFromID(row.id) as Port).label = event.target.value;\n  }\n\n  handleNameChange(event: React.ChangeEvent<HTMLInputElement>) {\n    event.persist();\n\n    this.state.updatedItem.name = event.target.value;\n\n    // this.forceUpdate();\n  }\n\n  render() {\n    console.log('state', this.state);\n    let columns: any[] = [];\n    if (this.context.view !== 0) {\n      columns = [{\n        dataField: 'label',\n        text: 'Property Name',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"input\">\n            <input className=\"darkInput\" type=\"text\" defaultValue={row.label} onChange={(event) => this.handleChangePortLabel(event, row)}></input>\n          </div>\n        )\n      }, {\n        style: {paddingLeft: 0},\n        dataField: 'propertyType',\n        text: 'Property Type',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"checkbox\">\n            <label>\n              <select className=\"darkSelect\" onChange={(event) => this.handleChangepRropType(event, row)} value={row.propertyType}>\n                <option value=\"BIT\">BIT</option>\n                <option value=\"TINYINT\">TINYINT</option>\n                <option value=\"SMALLINT\">SMALLINT</option>\n                <option value=\"INT\">INT</option>\n                <option value=\"BIGINT\">BIGINT</option>\n                <option value=\"DECIMAL\">DECIMAL</option>\n                <option value=\"NUMERIC\">NUMERIC</option>\n                <option value=\"FLOAT\">FLOAT</option>\n                <option value=\"REAL\">REAL</option>\n  \n                <option value=\"DATE\">DATE</option>\n                <option value=\"TIME\">TIME</option>\n                <option value=\"DATETIME\">DATETIME</option>\n                <option value=\"TIMESTAMP\">TIMESTAMP</option>\n                <option value=\"YEAR\">YEAR</option>\n  \n                <option value=\"CHAR\">CHAR</option>\n                <option value=\"VARCHAR\">VARCHAR</option>\n                <option value=\"VARCHARMAX\">VARCHARMAX</option>\n                <option value=\"TEXT\">TEXT</option>\n  \n                <option value=\"NCHAR\">NCHAR</option>\n                <option value=\"NVARCHAR\">NVARCHAR</option>\n                <option value=\"NVARCHARMAX\">NVARCHARMAX</option>\n                <option value=\"NTEXT\">NTEXT</option>\n                <option value=\"BINARY\">BINARY</option>\n                <option value=\"VARBINARY\">VARBINARY</option>\n                <option value=\"VARBINARYMAX\">VARBINARYMAX</option>\n                <option value=\"IMAGE\">IMAGE</option>\n                <option value=\"CLOB\">CLOB</option>\n                <option value=\"BLOB\">BLOB</option>\n                <option value=\"XML\">XML</option>\n                <option value=\"JSON\">JSON</option>\n  \n              </select>\n            </label>\n          </div>\n        )\n      }, {\n        dataField: 'isPrimaryKey',\n        text: 'Is Primary Key',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" checked={row.isPrimaryKey} onChange={(event) => this.handleChangePK(event, row)} />\n            </label>\n          </div>\n        )\n      }\n      ,\n       {\n        dataField: 'isForeignKey',\n        text: 'Is Foreign Key',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" checked={row.isForeignKey} onChange={(event) => this.handleChangeFK(event, row)} />\n            </label>\n          </div>\n        )\n      }\n      , \n      {\n        dataField: 'isNotNull',\n        text: 'Is Nullable',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" checked={row.isNotNull} onChange={(event) => this.handleChangeNull(event, row)} />\n            </label>\n          </div>\n        )\n      }, {\n        dataField: 'isAutoIncremented',\n        text: 'Is Auto Incremented',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" checked={row.isAutoIncremented} onChange={(event) => this.handleChangeAutoInc(event, row)} />\n            </label>\n          </div>\n        )\n      }, {\n        dataField: 'isUnique',\n        text: 'Is Unique',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" checked={row.isUnique} onChange={(event) => this.handleChangeUnique(event, row)} />\n            </label>\n          </div>\n        )\n      }, {\n        dataField: 'remove',\n        text: 'Remove',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"checkbox\">\n            <label>\n              <span onClick={() => this.removePort(row)} className=\"mi mi-Delete red\" />          \n            </label>\n          </div>\n        )\n      }];\n    } else {\n      columns = [{\n        dataField: 'label',\n        text: 'Property Name',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"input\">\n            <input className=\"darkInput\" type=\"text\" defaultValue={row.label} onChange={(event) => this.handleChangePortLabel(event, row)}></input>\n          </div>\n        )\n      }, {\n        style: {paddingLeft: 0},\n        dataField: 'propertyType',\n        text: 'Property Type',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"checkbox\">\n            <label>\n              <select className=\"darkSelect\" onChange={(event) => this.handleChangepRropType(event, row)} value={row.propertyType}>\n                <option value=\"BIT\">BIT</option>\n                <option value=\"TINYINT\">TINYINT</option>\n                <option value=\"SMALLINT\">SMALLINT</option>\n                <option value=\"INT\">INT</option>\n                <option value=\"BIGINT\">BIGINT</option>\n                <option value=\"DECIMAL\">DECIMAL</option>\n                <option value=\"NUMERIC\">NUMERIC</option>\n                <option value=\"FLOAT\">FLOAT</option>\n                <option value=\"REAL\">REAL</option>\n  \n                <option value=\"DATE\">DATE</option>\n                <option value=\"TIME\">TIME</option>\n                <option value=\"DATETIME\">DATETIME</option>\n                <option value=\"TIMESTAMP\">TIMESTAMP</option>\n                <option value=\"YEAR\">YEAR</option>\n  \n                <option value=\"CHAR\">CHAR</option>\n                <option value=\"VARCHAR\">VARCHAR</option>\n                <option value=\"VARCHARMAX\">VARCHARMAX</option>\n                <option value=\"TEXT\">TEXT</option>\n  \n                <option value=\"NCHAR\">NCHAR</option>\n                <option value=\"NVARCHAR\">NVARCHAR</option>\n                <option value=\"NVARCHARMAX\">NVARCHARMAX</option>\n                <option value=\"NTEXT\">NTEXT</option>\n                <option value=\"BINARY\">BINARY</option>\n                <option value=\"VARBINARY\">VARBINARY</option>\n                <option value=\"VARBINARYMAX\">VARBINARYMAX</option>\n                <option value=\"IMAGE\">IMAGE</option>\n                <option value=\"CLOB\">CLOB</option>\n                <option value=\"BLOB\">BLOB</option>\n                <option value=\"XML\">XML</option>\n                <option value=\"JSON\">JSON</option>\n  \n              </select>\n            </label>\n          </div>\n        )\n      }, {\n        dataField: 'isPrimaryKey',\n        text: 'Is Primary Key',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" checked={row.isPrimaryKey} onChange={(event) => this.handleChangePK(event, row)} />\n            </label>\n          </div>\n        )\n      }\n      \n      , \n      {\n        dataField: 'isNotNull',\n        text: 'Is Nullable',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" checked={row.isNotNull} onChange={(event) => this.handleChangeNull(event, row)} />\n            </label>\n          </div>\n        )\n      }, {\n        dataField: 'isAutoIncremented',\n        text: 'Is Auto Incremented',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" checked={row.isAutoIncremented} onChange={(event) => this.handleChangeAutoInc(event, row)} />\n            </label>\n          </div>\n        )\n      }, {\n        dataField: 'isUnique',\n        text: 'Is Unique',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" checked={row.isUnique} onChange={(event) => this.handleChangeUnique(event, row)} />\n            </label>\n          </div>\n        )\n      }, {\n        dataField: 'remove',\n        text: 'Remove',\n        formatter: (cellContent: any, row: any) => (\n          <div className=\"checkbox\">\n            <label>\n              <span onClick={() => this.removePort(row)} className=\"mi mi-Delete red\" />          \n            </label>\n          </div>\n        )\n      }];\n    }\n    \n\n    let ports = this.state.updatedItem.ports && this.state.updatedItem.ports as { [s: string]: Port };\n    let portsTable: Port[] = Object.keys(ports).map(x => {\n      return ports[x];\n    });\n    \n    portsTable = this.context.view === 0 ? portsTable.filter( p => !p.isForeignKey) : portsTable; // for entity view enable FK in rel view\n    let newPorts: Port[] = [];\n    newPorts.push(new Port(false, false, false, false, false, false, 'newProp1', 'newProp1'));\n\n    return (\n      <div className=\"trayBottom\">\n      <Grid>\n        <Row>\n          <Col>\n            {!this.state.showInput ? <h1 onDoubleClick={() => this.setState({showInput: true})}>{this.state.name}</h1> : <input className=\"darkInput fs-24\" defaultValue={this.state.name} onChange={(event) => this.handleNameChange(event)}/>}\n          </Col>\n\n          <Col className=\"tableFixHead\">\n            <BootstrapTable\n              keyField=\"id\"\n              data={portsTable}\n              columns={columns}\n              bordered={false}\n            />\n            <p className=\"mouse-cursor\" onClick={() => this.addNewPort(portsTable.length)}>Add new prop</p>\n          </Col>\n        </Row>\n      </Grid>\n        \n      </div>\n    )\n  }\n\n  addNewPort(newPortNumber: number) {\n    this.state.updatedItem.addInPort(false, false, false, false, false, `new port ${newPortNumber}`, PropertyType.INT)\n    this.forceUpdate();\n  }\n\n  removePort(port: Port) {\n    if(Object.entries(port.links).length !== 0 && port.links.constructor === Object) {\n      let portLinks: Link[] = Object.keys(port.links).map(x => {\n        return port.links[x];\n      });\n      portLinks.forEach(p => this.props.diagramEngine.getDiagramModel().removeLink(p));\n    }\n    this.state.updatedItem.removePort(port);\n    this.forceUpdate();\n  }\n}"]},"metadata":{},"sourceType":"module"}