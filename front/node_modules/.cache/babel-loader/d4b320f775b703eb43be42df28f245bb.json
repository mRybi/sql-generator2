{"ast":null,"code":"import _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx\";\nimport './NodeProperties.scss';\nimport * as React from \"react\";\nimport { Port } from '../models/Port';\nimport { RelationType } from '../../App2';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { PropertyType } from '../models/PropertyType';\nimport { Col, Row, Grid } from '../grid';\n\nvar OwnProps = function OwnProps() {\n  _classCallCheck(this, OwnProps);\n\n  this.selectedItem = void 0;\n  this.diagramEngine = void 0;\n  this.selectedLink = void 0;\n  this.selectedRelation = void 0;\n};\n\nvar State = function State() {\n  _classCallCheck(this, State);\n\n  this.updatedItem = void 0;\n  this.name = void 0;\n  this.portLabel = void 0;\n  this.showInput = void 0;\n};\n\nexport var NodeProperties =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NodeProperties, _React$Component);\n\n  function NodeProperties(props) {\n    _classCallCheck(this, NodeProperties);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NodeProperties).call(this, props));\n  }\n\n  _createClass(NodeProperties, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        updatedItem: this.props.selectedItem,\n        name: this.props.selectedItem.name,\n        portLabel: \"\",\n        showInput: false\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps != this.props) {\n        this.setState({\n          updatedItem: nextProps.selectedItem,\n          name: nextProps.selectedItem.name\n        });\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"handleChangePK\",\n    value: function handleChangePK(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isPrimaryKey = !row.isPrimaryKey;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeFK\",\n    value: function handleChangeFK(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isForeignKey = !row.isForeignKey;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeNull\",\n    value: function handleChangeNull(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isNotNull = !row.isNotNull;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeUnique\",\n    value: function handleChangeUnique(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isUnique = !row.isUnique;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeAutoInc\",\n    value: function handleChangeAutoInc(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).isAutoIncremented = !row.isAutoIncremented;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangepRropType\",\n    value: function handleChangepRropType(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).propertyType = event.target.value;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangePortLabel\",\n    value: function handleChangePortLabel(event, row) {\n      event.persist();\n      this.state.updatedItem.getPortFromID(row.id).label = event.target.value;\n    }\n  }, {\n    key: \"handleNameChange\",\n    value: function handleNameChange(event) {\n      event.persist();\n      this.state.updatedItem.name = event.target.value; // this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log('state', this.state);\n      var columns = [{\n        dataField: 'label',\n        text: 'Property Name',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"input\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            className: \"darkInput\",\n            type: \"text\",\n            defaultValue: row.label,\n            onChange: function onChange(event) {\n              return _this.handleChangePortLabel(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }));\n        }\n      }, {\n        style: {\n          paddingLeft: 0\n        },\n        dataField: 'propertyType',\n        text: 'Property Type',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, React.createElement(\"select\", {\n            className: \"darkSelect\",\n            onChange: function onChange(event) {\n              return _this.handleChangepRropType(event, row);\n            },\n            value: row.propertyType,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            value: \"BIT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, \"BIT\"), React.createElement(\"option\", {\n            value: \"TINYINT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, \"TINYINT\"), React.createElement(\"option\", {\n            value: \"SMALLINT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, \"SMALLINT\"), React.createElement(\"option\", {\n            value: \"INT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, \"INT\"), React.createElement(\"option\", {\n            value: \"BIGINT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, \"BIGINT\"), React.createElement(\"option\", {\n            value: \"DECIMAL\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, \"DECIMAL\"), React.createElement(\"option\", {\n            value: \"NUMERIC\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, \"NUMERIC\"), React.createElement(\"option\", {\n            value: \"FLOAT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, \"FLOAT\"), React.createElement(\"option\", {\n            value: \"REAL\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, \"REAL\"), React.createElement(\"option\", {\n            value: \"DATE\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, \"DATE\"), React.createElement(\"option\", {\n            value: \"TIME\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, \"TIME\"), React.createElement(\"option\", {\n            value: \"DATETIME\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, \"DATETIME\"), React.createElement(\"option\", {\n            value: \"TIMESTAMP\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, \"TIMESTAMP\"), React.createElement(\"option\", {\n            value: \"YEAR\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, \"YEAR\"), React.createElement(\"option\", {\n            value: \"CHAR\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, \"CHAR\"), React.createElement(\"option\", {\n            value: \"VARCHAR\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, \"VARCHAR\"), React.createElement(\"option\", {\n            value: \"VARCHARMAX\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, \"VARCHARMAX\"), React.createElement(\"option\", {\n            value: \"TEXT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }, \"TEXT\"), React.createElement(\"option\", {\n            value: \"NCHAR\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, \"NCHAR\"), React.createElement(\"option\", {\n            value: \"NVARCHAR\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, \"NVARCHAR\"), React.createElement(\"option\", {\n            value: \"NVARCHARMAX\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, \"NVARCHARMAX\"), React.createElement(\"option\", {\n            value: \"NTEXT\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, \"NTEXT\"), React.createElement(\"option\", {\n            value: \"BINARY\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, \"BINARY\"), React.createElement(\"option\", {\n            value: \"VARBINARY\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, \"VARBINARY\"), React.createElement(\"option\", {\n            value: \"VARBINARYMAX\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, \"VARBINARYMAX\"), React.createElement(\"option\", {\n            value: \"IMAGE\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, \"IMAGE\"), React.createElement(\"option\", {\n            value: \"CLOB\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, \"CLOB\"), React.createElement(\"option\", {\n            value: \"BLOB\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, \"BLOB\"), React.createElement(\"option\", {\n            value: \"XML\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          }, \"XML\"), React.createElement(\"option\", {\n            value: \"JSON\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, \"JSON\"))));\n        }\n      }, {\n        dataField: 'isPrimaryKey',\n        text: 'Is Primary Key',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isPrimaryKey,\n            onChange: function onChange(event) {\n              return _this.handleChangePK(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          })));\n        }\n      }, {\n        dataField: 'isForeignKey',\n        text: 'Is Foreign Key',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isForeignKey,\n            onChange: function onChange(event) {\n              return _this.handleChangeFK(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          })));\n        }\n      }, {\n        dataField: 'isNotNull',\n        text: 'Is Nullable',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isNotNull,\n            onChange: function onChange(event) {\n              return _this.handleChangeNull(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          })));\n        }\n      }, {\n        dataField: 'isAutoIncremented',\n        text: 'Is Auto Incremented',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isAutoIncremented,\n            onChange: function onChange(event) {\n              return _this.handleChangeAutoInc(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          })));\n        }\n      }, {\n        dataField: 'isUnique',\n        text: 'Is Unique',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: row.isUnique,\n            onChange: function onChange(event) {\n              return _this.handleChangeUnique(event, row);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215\n            },\n            __self: this\n          })));\n        }\n      }, {\n        dataField: 'remove',\n        text: 'Remove',\n        formatter: function formatter(cellContent, row) {\n          return React.createElement(\"div\", {\n            className: \"checkbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            onClick: function onClick() {\n              return _this.removePort(row);\n            },\n            className: \"mi mi-Delete red\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225\n            },\n            __self: this\n          })));\n        }\n      }];\n      var ports = this.state.updatedItem.ports;\n      var portsTable = Object.keys(ports).map(function (x) {\n        return ports[x];\n      });\n      var newPorts = [];\n      newPorts.push(new Port(false, false, false, false, false, false, 'newProp1', 'newProp1', RelationType.none));\n      return React.createElement(\"div\", {\n        className: \"trayBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, !this.state.showInput ? React.createElement(\"h1\", {\n        onDoubleClick: function onDoubleClick() {\n          return _this.setState({\n            showInput: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, this.state.name) : React.createElement(\"input\", {\n        className: \"darkInput fs-24\",\n        defaultValue: this.state.name,\n        onChange: function onChange(event) {\n          return _this.handleNameChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        keyField: \"id\",\n        data: portsTable,\n        columns: columns,\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"mouse-cursor\",\n        onClick: function onClick() {\n          return _this.addNewPort();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Add new prop\")))));\n    }\n  }, {\n    key: \"addNewPort\",\n    value: function addNewPort() {\n      this.state.updatedItem.addInPort(false, false, false, false, false, 'new port', this.props.selectedRelation, this.props.diagramEngine, PropertyType.INT);\n      this.forceUpdate();\n    }\n  }, {\n    key: \"removePort\",\n    value: function removePort(port) {\n      var _this2 = this;\n\n      if (Object.entries(port.links).length !== 0 && port.links.constructor === Object) {\n        var portLinks = Object.keys(port.links).map(function (x) {\n          return port.links[x];\n        });\n        portLinks.forEach(function (p) {\n          return _this2.props.diagramEngine.getDiagramModel().removeLink(p);\n        });\n      }\n\n      this.state.updatedItem.removePort(port);\n      this.forceUpdate();\n    }\n  }]);\n\n  return NodeProperties;\n}(React.Component);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx"],"names":["React","Port","RelationType","BootstrapTable","PropertyType","Col","Row","Grid","OwnProps","selectedItem","diagramEngine","selectedLink","selectedRelation","State","updatedItem","name","portLabel","showInput","NodeProperties","props","setState","nextProps","forceUpdate","event","row","persist","state","getPortFromID","id","isPrimaryKey","isForeignKey","isNotNull","isUnique","isAutoIncremented","propertyType","target","value","label","console","log","columns","dataField","text","formatter","cellContent","handleChangePortLabel","style","paddingLeft","handleChangepRropType","handleChangePK","handleChangeFK","handleChangeNull","handleChangeAutoInc","handleChangeUnique","removePort","ports","portsTable","Object","keys","map","x","newPorts","push","none","handleNameChange","addNewPort","addInPort","INT","port","entries","links","length","constructor","portLinks","forEach","p","getDiagramModel","removeLink","Component"],"mappings":"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","sourcesContent":["import './NodeProperties.scss';\nimport * as React from \"react\";\nimport { DiagramEngine } from 'storm-react-diagrams';\nimport { Link } from '../models/Link';\nimport { Node } from \"../models/Node\";\nimport { Port } from '../models/Port';\nimport { RelationType } from '../../App2';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { PropertyType } from '../models/PropertyType';\nimport { Col, Row, Grid } from '../grid';\n\nclass OwnProps {\n  selectedItem: Node;\n  diagramEngine: DiagramEngine;\n  selectedLink: Link;\n  selectedRelation: RelationType;\n}\n\nclass State {\n  updatedItem: Node\n  name: string;\n  portLabel: string;\n  showInput: boolean;\n}\n\ntype Props = OwnProps;\n\nexport class NodeProperties extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.setState({\n      updatedItem: this.props.selectedItem,\n      name: this.props.selectedItem.name,\n      portLabel: \"\",\n      showInput: false\n    })\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps != this.props) {\n      this.setState({\n        updatedItem: nextProps.selectedItem,\n        name: nextProps.selectedItem.name\n      })\n      this.forceUpdate();\n    }\n  }\n\n  handleChangePK(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isPrimaryKey = !row.isPrimaryKey;\n\n    this.forceUpdate();\n  }\n\n  handleChangeFK(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isForeignKey = !row.isForeignKey;\n\n    this.forceUpdate();\n  }\n\n  handleChangeNull(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isNotNull = !row.isNotNull;\n\n    this.forceUpdate();\n  }\n\n  handleChangeUnique(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isUnique = !row.isUnique;\n\n    this.forceUpdate();\n  }\n\n  handleChangeAutoInc(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n\n    (this.state.updatedItem.getPortFromID(row.id) as Port).isAutoIncremented = !row.isAutoIncremented;\n\n    this.forceUpdate();\n  }\n\n  handleChangepRropType(event: React.ChangeEvent<HTMLSelectElement>, row: Port) {\n    event.persist();\n    (this.state.updatedItem.getPortFromID(row.id) as Port).propertyType = event.target.value;\n\n    this.forceUpdate();\n  }\n\n  handleChangePortLabel(event: React.ChangeEvent<HTMLInputElement>, row: Port) {\n    event.persist();\n    (this.state.updatedItem.getPortFromID(row.id) as Port).label = event.target.value;\n  }\n\n  handleNameChange(event: React.ChangeEvent<HTMLInputElement>) {\n    event.persist();\n\n    this.state.updatedItem.name = event.target.value;\n\n    // this.forceUpdate();\n  }\n\n  render() {\n    console.log('state', this.state);\n    const columns = [{\n      dataField: 'label',\n      text: 'Property Name',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"input\">\n          <input className=\"darkInput\" type=\"text\" defaultValue={row.label} onChange={(event) => this.handleChangePortLabel(event, row)}></input>\n        </div>\n      )\n    }, {\n      style: {paddingLeft: 0},\n      dataField: 'propertyType',\n      text: 'Property Type',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"checkbox\">\n          <label>\n            <select className=\"darkSelect\" onChange={(event) => this.handleChangepRropType(event, row)} value={row.propertyType}>\n              <option value=\"BIT\">BIT</option>\n              <option value=\"TINYINT\">TINYINT</option>\n              <option value=\"SMALLINT\">SMALLINT</option>\n              <option value=\"INT\">INT</option>\n              <option value=\"BIGINT\">BIGINT</option>\n              <option value=\"DECIMAL\">DECIMAL</option>\n              <option value=\"NUMERIC\">NUMERIC</option>\n              <option value=\"FLOAT\">FLOAT</option>\n              <option value=\"REAL\">REAL</option>\n\n              <option value=\"DATE\">DATE</option>\n              <option value=\"TIME\">TIME</option>\n              <option value=\"DATETIME\">DATETIME</option>\n              <option value=\"TIMESTAMP\">TIMESTAMP</option>\n              <option value=\"YEAR\">YEAR</option>\n\n              <option value=\"CHAR\">CHAR</option>\n              <option value=\"VARCHAR\">VARCHAR</option>\n              <option value=\"VARCHARMAX\">VARCHARMAX</option>\n              <option value=\"TEXT\">TEXT</option>\n\n              <option value=\"NCHAR\">NCHAR</option>\n              <option value=\"NVARCHAR\">NVARCHAR</option>\n              <option value=\"NVARCHARMAX\">NVARCHARMAX</option>\n              <option value=\"NTEXT\">NTEXT</option>\n              <option value=\"BINARY\">BINARY</option>\n              <option value=\"VARBINARY\">VARBINARY</option>\n              <option value=\"VARBINARYMAX\">VARBINARYMAX</option>\n              <option value=\"IMAGE\">IMAGE</option>\n              <option value=\"CLOB\">CLOB</option>\n              <option value=\"BLOB\">BLOB</option>\n              <option value=\"XML\">XML</option>\n              <option value=\"JSON\">JSON</option>\n\n            </select>\n          </label>\n        </div>\n      )\n    }, {\n      dataField: 'isPrimaryKey',\n      text: 'Is Primary Key',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" checked={row.isPrimaryKey} onChange={(event) => this.handleChangePK(event, row)} />\n          </label>\n        </div>\n      )\n    }, {\n      dataField: 'isForeignKey',\n      text: 'Is Foreign Key',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" checked={row.isForeignKey} onChange={(event) => this.handleChangeFK(event, row)} />\n          </label>\n        </div>\n      )\n    }, {\n      dataField: 'isNotNull',\n      text: 'Is Nullable',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" checked={row.isNotNull} onChange={(event) => this.handleChangeNull(event, row)} />\n          </label>\n        </div>\n      )\n    }, {\n      dataField: 'isAutoIncremented',\n      text: 'Is Auto Incremented',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" checked={row.isAutoIncremented} onChange={(event) => this.handleChangeAutoInc(event, row)} />\n          </label>\n        </div>\n      )\n    }, {\n      dataField: 'isUnique',\n      text: 'Is Unique',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" checked={row.isUnique} onChange={(event) => this.handleChangeUnique(event, row)} />\n          </label>\n        </div>\n      )\n    }, {\n      dataField: 'remove',\n      text: 'Remove',\n      formatter: (cellContent: any, row: any) => (\n        <div className=\"checkbox\">\n          <label>\n            <span onClick={() => this.removePort(row)} className=\"mi mi-Delete red\" />          \n          </label>\n        </div>\n      )\n    }];\n\n    let ports = this.state.updatedItem.ports as { [s: string]: Port };\n    let portsTable: Port[] = Object.keys(ports).map(x => {\n      return ports[x];\n    });\n    let newPorts: Port[] = [];\n    newPorts.push(new Port(false, false, false, false, false, false, 'newProp1', 'newProp1', RelationType.none));\n\n    return (\n      <div className=\"trayBottom\">\n      <Grid>\n        <Row>\n          <Col sm=\"2\" >\n            {!this.state.showInput ? <h1 onDoubleClick={() => this.setState({showInput: true})}>{this.state.name}</h1> : <input className=\"darkInput fs-24\" defaultValue={this.state.name} onChange={(event) => this.handleNameChange(event)}/>}\n          </Col>\n\n          <Col sm=\"10\">\n            <BootstrapTable\n              keyField=\"id\"\n              data={portsTable}\n              columns={columns}\n              bordered={false}\n            />\n            <p className=\"mouse-cursor\" onClick={() => this.addNewPort()}>Add new prop</p>\n          </Col>\n        </Row>\n      </Grid>\n        \n      </div>\n    )\n  }\n\n  addNewPort() {\n    this.state.updatedItem.addInPort(false, false, false, false, false, 'new port', this.props.selectedRelation, this.props.diagramEngine, PropertyType.INT)\n    this.forceUpdate();\n  }\n\n  removePort(port: Port) {\n    if(Object.entries(port.links).length !== 0 && port.links.constructor === Object) {\n      let portLinks: Link[] = Object.keys(port.links).map(x => {\n        return port.links[x];\n      });\n      portLinks.forEach(p => this.props.diagramEngine.getDiagramModel().removeLink(p));\n    }\n    this.state.updatedItem.removePort(port);\n    this.forceUpdate();\n  }\n}"]},"metadata":{},"sourceType":"module"}