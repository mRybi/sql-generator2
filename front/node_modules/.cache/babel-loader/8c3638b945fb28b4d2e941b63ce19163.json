{"ast":null,"code":"import _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/App2.tsx\";\nimport * as React from \"react\";\nimport * as _ from \"lodash\";\nimport { DiagramWidget } from \"storm-react-diagrams\";\nimport { TrayItemWidget } from \"./components/dragAndDrop/TrayItemWidget\";\nimport { TrayWidget } from \"./components/dragAndDrop/TrayWidget\";\nimport './dragAndDrop.scss';\n\nrequire(\"storm-react-diagrams/dist/style.min.css\");\n\nimport './App.css';\nimport { NodeInfo } from \"./components/nodeInfo/NodeInfo\";\nimport { Node } from \"./components/models/Node\";\nimport { PropertyType } from \"./components/models/PropertyType\";\nexport var RelationType;\n\n(function (RelationType) {\n  RelationType[RelationType[\"O2O\"] = 0] = \"O2O\";\n  RelationType[RelationType[\"O2M\"] = 1] = \"O2M\";\n  RelationType[RelationType[\"M2M\"] = 2] = \"M2M\";\n})(RelationType || (RelationType = {}));\n\nexport var App2 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App2, _React$Component);\n\n  function App2(props) {\n    var _this;\n\n    _classCallCheck(this, App2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App2).call(this, props));\n    _this.state = {\n      selectedNode: null,\n      diagramModel: null,\n      selectedLink: null,\n      selectedRelation: RelationType.O2O,\n      isLocked: false\n    };\n    return _this;\n  }\n\n  _createClass(App2, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        selectedNode: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Create diagrams\")), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(TrayWidget, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(TrayItemWidget, {\n        model: {\n          type: \"table\"\n        },\n        name: \"Node\",\n        color: \"rgb(0,192,255)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(TrayItemWidget, {\n        model: {\n          type: \"label\"\n        },\n        name: \"Label\",\n        color: \"rgb(192,255,0)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          borderColor: \"rgb(0,0,0)\",\n          marginTop: '100px'\n        },\n        className: \"tray-item \".concat(this.state.isLocked ? 'locked' : ''),\n        onClick: function onClick() {\n          var app = _this2.props.app.getActiveDiagram().setLocked();\n\n          _this2.setState({\n            isLocked: !_this2.state.isLocked\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Move\"), React.createElement(\"div\", {\n        style: {\n          borderColor: \"rgb(0,255,0)\",\n          marginTop: '100px'\n        },\n        className: \"tray-item \".concat(this.state.selectedRelation === RelationType.O2O ? 'selected' : ''),\n        onClick: function onClick() {\n          var app = _this2.props.app.getActiveDiagram().getNodes();\n\n          Object.keys(app).forEach(function (x) {\n            return app[x].updatePorts(RelationType.O2O);\n          });\n\n          _this2.setState({\n            selectedRelation: RelationType.O2O\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"One2One Relation\"), React.createElement(\"div\", {\n        style: {\n          borderColor: \"rgb(0,255,0)\"\n        },\n        className: \"tray-item \".concat(this.state.selectedRelation === RelationType.O2M ? 'selected' : ''),\n        onClick: function onClick() {\n          var app = _this2.props.app.getActiveDiagram().getNodes();\n\n          Object.keys(app).forEach(function (x) {\n            return app[x].updatePorts(RelationType.O2M);\n          });\n\n          _this2.setState({\n            selectedRelation: RelationType.O2M\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"One2Many Relation\"), React.createElement(\"div\", {\n        style: {\n          borderColor: \"rgb(0,255,0)\"\n        },\n        className: \"tray-item \".concat(this.state.selectedRelation === RelationType.M2M ? 'selected' : ''),\n        onClick: function onClick() {\n          var app = _this2.props.app.getActiveDiagram().getNodes();\n\n          Object.keys(app).forEach(function (x) {\n            return app[x].updatePorts(RelationType.M2M);\n          });\n\n          _this2.setState({\n            selectedRelation: RelationType.M2M\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Many2Many Relation\"), React.createElement(\"div\", {\n        style: {\n          borderColor: \"rgb(255,0,0)\",\n          marginTop: '100px'\n        },\n        className: \"tray-item\",\n        onClick: function onClick() {\n          console.log(JSON.stringify(_this2.props.app.getActiveDiagram().serializeDiagram(), null, 2));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Serialize Graph\")), React.createElement(\"div\", {\n        className: \"diagram-layer\",\n        onDrop: function onDrop(event) {\n          var data = JSON.parse(event.dataTransfer.getData(\"storm-diagram-node\"));\n\n          var nodesCount = _.keys(_this2.props.app.getDiagramEngine().getDiagramModel().getNodes()).length;\n\n          var node = null;\n\n          if (data.type === \"table\") {\n            node = new Node(\"table\", \"Node \" + (nodesCount + 1), \"rgb(0,192,255)\");\n            node.addInPort(true, false, \"Id\", _this2.state.selectedRelation, _this2.props.app.getActiveDiagram(), PropertyType.INT);\n            node.addInPort(false, false, \"Name\", _this2.state.selectedRelation, _this2.props.app.getActiveDiagram(), PropertyType.NVARCHAR);\n          } else {\n            node = new Node(\"label\", \"Label \", \"rgb(192,255,0)\");\n          }\n\n          var points = _this2.props.app.getDiagramEngine().getRelativeMousePoint(event);\n\n          node.x = points.x;\n          node.y = points.y;\n\n          _this2.props.app.getDiagramEngine().getDiagramModel().addNode(node);\n\n          _this2.forceUpdate();\n        },\n        onDragOver: function onDragOver(event) {\n          event.preventDefault();\n        },\n        onDoubleClick: function onDoubleClick(event) {\n          event.preventDefault();\n\n          _this2.setState({\n            selectedNode: _this2.props.app.getDiagramEngine().getDiagramModel().getSelectedItems()[0],\n            diagramModel: _this2.props.app.getDiagramEngine().getDiagramModel(),\n            selectedLink: _this2.props.app.getDiagramEngine().getDiagramModel().getSelectedItems()[1]\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(DiagramWidget, {\n        className: \"srd-demo-canvas\",\n        diagramEngine: this.props.app.getDiagramEngine(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), this.state.selectedNode != null ? React.createElement(NodeInfo, {\n        selectedRelation: this.state.selectedRelation,\n        selectedLink: this.state.selectedLink,\n        selectedItem: this.state.selectedNode,\n        diagramModel: this.state.diagramModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return App2;\n}(React.Component);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/App2.tsx"],"names":["React","_","DiagramWidget","TrayItemWidget","TrayWidget","require","NodeInfo","Node","PropertyType","RelationType","App2","props","state","selectedNode","diagramModel","selectedLink","selectedRelation","O2O","isLocked","setState","type","borderColor","marginTop","app","getActiveDiagram","setLocked","getNodes","Object","keys","forEach","x","updatePorts","O2M","M2M","console","log","JSON","stringify","serializeDiagram","event","data","parse","dataTransfer","getData","nodesCount","getDiagramEngine","getDiagramModel","length","node","addInPort","INT","NVARCHAR","points","getRelativeMousePoint","y","addNode","forceUpdate","preventDefault","getSelectedItems","Component"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,SAA2BC,aAA3B,QAA0I,sBAA1I;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,UAAT,QAA2B,qCAA3B;AAEA,OAAO,oBAAP;;AACAC,OAAO,CAAC,yCAAD,CAAP;;AAEA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,IAAT,QAAqB,0BAArB;AAEA,SAASC,YAAT,QAA6B,kCAA7B;AAeA,WAAYC,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;GAAAA,Y,KAAAA,Y;;AAMZ,WAAaC,IAAb;AAAA;AAAA;AAAA;;AACC,gBAAYC,KAAZ,EAAoC;AAAA;;AAAA;;AACnC,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,YAAY,EAAE,IADF;AAEZC,MAAAA,YAAY,EAAE,IAFF;AAGZC,MAAAA,YAAY,EAAE,IAHF;AAIZC,MAAAA,gBAAgB,EAAEP,YAAY,CAACQ,GAJnB;AAKZC,MAAAA,QAAQ,EAAE;AALE,KAAb;AAFmC;AASnC;;AAVF;AAAA;AAAA,yCAYqB;AACnB,WAAKC,QAAL,CAAc;AAACN,QAAAA,YAAY,EAAE;AAAf,OAAd;AACA;AAdF;AAAA;AAAA,6BAgBU;AAAA;;AACR,aACC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,CADD,EAIC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAE;AAAEO,UAAAA,IAAI,EAAE;AAAR,SAAvB;AAA0C,QAAA,IAAI,EAAC,MAA/C;AAAsD,QAAA,KAAK,EAAC,gBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAE;AAAEA,UAAAA,IAAI,EAAE;AAAR,SAAvB;AAA0C,QAAA,IAAI,EAAC,OAA/C;AAAuD,QAAA,KAAK,EAAC,gBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAIC;AACC,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE,YAAf;AAA8BC,UAAAA,SAAS,EAAE;AAAzC,SADR;AAGC,QAAA,SAAS,sBAAe,KAAKV,KAAL,CAAWM,QAAX,GAAsB,QAAtB,GAAiC,EAAhD,CAHV;AAIC,QAAA,OAAO,EAAE,mBAAM;AACd,cAAIK,GAAG,GAAG,MAAI,CAACZ,KAAL,CAAWY,GAAX,CAAeC,gBAAf,GAAkCC,SAAlC,EAAV;;AACA,UAAA,MAAI,CAACN,QAAL,CAAc;AACbD,YAAAA,QAAQ,EAAE,CAAC,MAAI,CAACN,KAAL,CAAWM;AADT,WAAd;AAGA,SATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD,EAkBC;AACC,QAAA,KAAK,EAAE;AAAEG,UAAAA,WAAW,EAAE,cAAf;AAAgCC,UAAAA,SAAS,EAAE;AAA3C,SADR;AAGC,QAAA,SAAS,sBAAe,KAAKV,KAAL,CAAWI,gBAAX,KAAgCP,YAAY,CAACQ,GAA7C,GAAmD,UAAnD,GAAgE,EAA/E,CAHV;AAIC,QAAA,OAAO,EAAE,mBAAM;AACd,cAAIM,GAAG,GAAG,MAAI,CAACZ,KAAL,CAAWY,GAAX,CAAeC,gBAAf,GAAkCE,QAAlC,EAAV;;AACAC,UAAAA,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,OAAjB,CAAyB,UAAAC,CAAC;AAAA,mBAAIP,GAAG,CAACO,CAAD,CAAH,CAAOC,WAAP,CAAmBtB,YAAY,CAACQ,GAAhC,CAAJ;AAAA,WAA1B;;AACA,UAAA,MAAI,CAACE,QAAL,CAAc;AACbH,YAAAA,gBAAgB,EAAEP,YAAY,CAACQ;AADlB,WAAd;AAGA,SAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAlBD,EAgCC;AACC,QAAA,KAAK,EAAE;AAAEI,UAAAA,WAAW,EAAE;AAAf,SADR;AAEC,QAAA,SAAS,sBAAe,KAAKT,KAAL,CAAWI,gBAAX,KAAgCP,YAAY,CAACuB,GAA7C,GAAmD,UAAnD,GAAgE,EAA/E,CAFV;AAGC,QAAA,OAAO,EAAE,mBAAM;AACd,cAAIT,GAAG,GAAG,MAAI,CAACZ,KAAL,CAAWY,GAAX,CAAeC,gBAAf,GAAkCE,QAAlC,EAAV;;AACAC,UAAAA,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,OAAjB,CAAyB,UAAAC,CAAC;AAAA,mBAAIP,GAAG,CAACO,CAAD,CAAH,CAAOC,WAAP,CAAmBtB,YAAY,CAACuB,GAAhC,CAAJ;AAAA,WAA1B;;AAEA,UAAA,MAAI,CAACb,QAAL,CAAc;AACbH,YAAAA,gBAAgB,EAAEP,YAAY,CAACuB;AADlB,WAAd;AAEU,SATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAhCD,EA6CC;AACC,QAAA,KAAK,EAAE;AAAEX,UAAAA,WAAW,EAAE;AAAf,SADR;AAEC,QAAA,SAAS,sBAAe,KAAKT,KAAL,CAAWI,gBAAX,KAAgCP,YAAY,CAACwB,GAA7C,GAAmD,UAAnD,GAAgE,EAA/E,CAFV;AAGC,QAAA,OAAO,EAAE,mBAAM;AACd,cAAIV,GAAG,GAAG,MAAI,CAACZ,KAAL,CAAWY,GAAX,CAAeC,gBAAf,GAAkCE,QAAlC,EAAV;;AACAC,UAAAA,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,OAAjB,CAAyB,UAAAC,CAAC;AAAA,mBAAIP,GAAG,CAACO,CAAD,CAAH,CAAOC,WAAP,CAAmBtB,YAAY,CAACwB,GAAhC,CAAJ;AAAA,WAA1B;;AACA,UAAA,MAAI,CAACd,QAAL,CAAc;AACbH,YAAAA,gBAAgB,EAAEP,YAAY,CAACwB;AADlB,WAAd;AAEU,SARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BA7CD,EAyDC;AACC,QAAA,KAAK,EAAE;AAAEZ,UAAAA,WAAW,EAAE,cAAf;AAA+BC,UAAAA,SAAS,EAAE;AAA1C,SADR;AAEC,QAAA,SAAS,EAAC,WAFX;AAGC,QAAA,OAAO,EAAE,mBAAM;AACdY,UAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe,MAAI,CAAC1B,KAAL,CAAWY,GAAX,CAAeC,gBAAf,GAAkCc,gBAAlC,EAAf,EAAqE,IAArE,EAA2E,CAA3E,CAAZ;AACA,SALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAzDD,CADD,EAsEC;AACC,QAAA,SAAS,EAAC,eADX;AAEC,QAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AAChB,cAAIC,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWF,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2B,oBAA3B,CAAX,CAAX;;AACA,cAAIC,UAAU,GAAG3C,CAAC,CAAC2B,IAAF,CAChB,MAAI,CAACjB,KAAL,CAAWY,GAAX,CACEsB,gBADF,GAEEC,eAFF,GAGEpB,QAHF,EADgB,EAKfqB,MALF;;AAOA,cAAIC,IAAI,GAAG,IAAX;;AACA,cAAIR,IAAI,CAACpB,IAAL,KAAc,OAAlB,EAA2B;AAC1B4B,YAAAA,IAAI,GAAG,IAAIzC,IAAJ,CAAS,OAAT,EAAiB,WAAWqC,UAAU,GAAG,CAAxB,CAAjB,EAA6C,gBAA7C,CAAP;AACAI,YAAAA,IAAI,CAACC,SAAL,CAAe,IAAf,EAAqB,KAArB,EAA4B,IAA5B,EAAiC,MAAI,CAACrC,KAAL,CAAWI,gBAA5C,EAA8D,MAAI,CAACL,KAAL,CAAWY,GAAX,CAAeC,gBAAf,EAA9D,EAAiGhB,YAAY,CAAC0C,GAA9G;AACAF,YAAAA,IAAI,CAACC,SAAL,CAAe,KAAf,EAAqB,KAArB,EAA2B,MAA3B,EAAkC,MAAI,CAACrC,KAAL,CAAWI,gBAA7C,EAA+D,MAAI,CAACL,KAAL,CAAWY,GAAX,CAAeC,gBAAf,EAA/D,EAAkGhB,YAAY,CAAC2C,QAA/G;AACA,WAJD,MAIO;AACNH,YAAAA,IAAI,GAAG,IAAIzC,IAAJ,CAAS,OAAT,EAAiB,QAAjB,EAA2B,gBAA3B,CAAP;AACA;;AAED,cAAI6C,MAAM,GAAG,MAAI,CAACzC,KAAL,CAAWY,GAAX,CAAesB,gBAAf,GAAkCQ,qBAAlC,CAAwDd,KAAxD,CAAb;;AACAS,UAAAA,IAAI,CAAClB,CAAL,GAASsB,MAAM,CAACtB,CAAhB;AACAkB,UAAAA,IAAI,CAACM,CAAL,GAASF,MAAM,CAACE,CAAhB;;AACA,UAAA,MAAI,CAAC3C,KAAL,CAAWY,GAAX,CACEsB,gBADF,GAEEC,eAFF,GAGES,OAHF,CAGUP,IAHV;;AAIA,UAAA,MAAI,CAACQ,WAAL;AACA,SA5BF;AA6BC,QAAA,UAAU,EAAE,oBAAAjB,KAAK,EAAI;AACpBA,UAAAA,KAAK,CAACkB,cAAN;AACA,SA/BF;AAiCC,QAAA,aAAa,EAAE,uBAAAlB,KAAK,EAAI;AACvBA,UAAAA,KAAK,CAACkB,cAAN;;AAEA,UAAA,MAAI,CAACtC,QAAL,CAAc;AACbN,YAAAA,YAAY,EAAE,MAAI,CAACF,KAAL,CAAWY,GAAX,CACbsB,gBADa,GAEbC,eAFa,GAGbY,gBAHa,GAGM,CAHN,CADD;AAKb5C,YAAAA,YAAY,EAAE,MAAI,CAACH,KAAL,CAAWY,GAAX,CAAesB,gBAAf,GAAkCC,eAAlC,EALD;AAMb/B,YAAAA,YAAY,EAAE,MAAI,CAACJ,KAAL,CAAWY,GAAX,CACbsB,gBADa,GAEbC,eAFa,GAGbY,gBAHa,GAGM,CAHN;AAND,WAAd;AAWA,SA/CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAiDC,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAC,iBAAzB;AAA2C,QAAA,aAAa,EAAE,KAAK/C,KAAL,CAAWY,GAAX,CAAesB,gBAAf,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjDD,CAtED,EA0HG,KAAKjC,KAAL,CAAWC,YAAX,IAA2B,IAA3B,GAAkC,oBAAC,QAAD;AAAU,QAAA,gBAAgB,EAAE,KAAKD,KAAL,CAAWI,gBAAvC;AAAyD,QAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWG,YAAlF;AAAgG,QAAA,YAAY,EAAE,KAAKH,KAAL,CAAWC,YAAzH;AAAuI,QAAA,YAAY,EAAE,KAAKD,KAAL,CAAWE,YAAhK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlC,GAAqN,IA1HxN,CAJD,CADD;AAmIA;AApJF;;AAAA;AAAA,EAA0Bd,KAAK,CAAC2D,SAAhC","sourcesContent":["import * as React from \"react\";\nimport * as _ from \"lodash\";\nimport { DefaultNodeModel, DiagramWidget, BaseEntityType, BaseEntity, BaseModelListener, BaseModel, DiagramModel, DefaultLinkModel } from \"storm-react-diagrams\";\nimport { TrayItemWidget } from \"./components/dragAndDrop/TrayItemWidget\";\nimport { TrayWidget } from \"./components/dragAndDrop/TrayWidget\";\nimport { Application } from \"./components/dragAndDrop/Application\";\nimport './dragAndDrop.scss';\nrequire(\"storm-react-diagrams/dist/style.min.css\");\n\nimport './App.css';\nimport { NodeInfo } from \"./components/nodeInfo/NodeInfo\";\nimport { Node } from \"./components/models/Node\";\nimport { Link } from \"./components/models/Link\";\nimport { PropertyType } from \"./components/models/PropertyType\";\n\nexport interface BodyWidgetProps {\n\tapp: Application;\n}\n\nexport interface BodyWidgetState {\n\t// selectedNode: BaseModel<BaseEntity, BaseModelListener>[]; //DefaultNodeModel\n\tselectedNode: Node;\n\tdiagramModel: DiagramModel;\n\tselectedLink: Link;\n\tselectedRelation: RelationType;\n\tisLocked: boolean;\n}\n\nexport enum RelationType {\n\tO2O = 0,\n    O2M = 1,\n    M2M = 2\n}\n\nexport class App2 extends React.Component<BodyWidgetProps, BodyWidgetState> {\n\tconstructor(props: BodyWidgetProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselectedNode: null,\n\t\t\tdiagramModel: null,\n\t\t\tselectedLink: null,\n\t\t\tselectedRelation: RelationType.O2O,\n\t\t\tisLocked: false\n\t\t}\n\t}\n\n\tcomponentWillMount(){\n\t\tthis.setState({selectedNode: null})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"body\">\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<div className=\"title\">Create diagrams</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<TrayWidget>\n\t\t\t\t\t\t<TrayItemWidget model={{ type: \"table\" }} name=\"Node\" color=\"rgb(0,192,255)\" />\n\t\t\t\t\t\t<TrayItemWidget model={{ type: \"label\" }} name=\"Label\" color=\"rgb(192,255,0)\" />\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{ borderColor: \"rgb(0,0,0)\" , marginTop: '100px'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName={`tray-item ${this.state.isLocked ? 'locked' : ''}`}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tlet app = this.props.app.getActiveDiagram().setLocked();\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tisLocked: !this.state.isLocked\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tMove\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{ borderColor: \"rgb(0,255,0)\" , marginTop: '100px'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName={`tray-item ${this.state.selectedRelation === RelationType.O2O ? 'selected' : ''}`}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tlet app = this.props.app.getActiveDiagram().getNodes() as {[s: string]: Node} ;\n\t\t\t\t\t\t\t\tObject.keys(app).forEach(x => app[x].updatePorts(RelationType.O2O));\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tselectedRelation: RelationType.O2O\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tOne2One Relation\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{ borderColor: \"rgb(0,255,0)\"}}\n\t\t\t\t\t\t\tclassName={`tray-item ${this.state.selectedRelation === RelationType.O2M ? 'selected' : ''}`}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tlet app = this.props.app.getActiveDiagram().getNodes() as {[s: string]: Node} ;\n\t\t\t\t\t\t\t\tObject.keys(app).forEach(x => app[x].updatePorts(RelationType.O2M));\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tselectedRelation: RelationType.O2M\n\t\t\t\t\t\t\t\t})\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tOne2Many Relation\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{ borderColor: \"rgb(0,255,0)\"}}\n\t\t\t\t\t\t\tclassName={`tray-item ${this.state.selectedRelation === RelationType.M2M ? 'selected' : ''}`}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tlet app = this.props.app.getActiveDiagram().getNodes() as {[s: string]: Node} ;\n\t\t\t\t\t\t\t\tObject.keys(app).forEach(x => app[x].updatePorts(RelationType.M2M));\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tselectedRelation: RelationType.M2M\n\t\t\t\t\t\t\t\t})\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tMany2Many Relation\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{ borderColor: \"rgb(255,0,0)\", marginTop: '100px'}}\n\t\t\t\t\t\t\tclassName=\"tray-item\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tconsole.log(JSON.stringify(this.props.app.getActiveDiagram().serializeDiagram(), null, 2));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSerialize Graph\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t</TrayWidget>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"diagram-layer\"\n\t\t\t\t\t\tonDrop={event => {\n\t\t\t\t\t\t\tvar data = JSON.parse(event.dataTransfer.getData(\"storm-diagram-node\"));\n\t\t\t\t\t\t\tvar nodesCount = _.keys(\n\t\t\t\t\t\t\t\tthis.props.app\n\t\t\t\t\t\t\t\t\t.getDiagramEngine()\n\t\t\t\t\t\t\t\t\t.getDiagramModel()\n\t\t\t\t\t\t\t\t\t.getNodes()\n\t\t\t\t\t\t\t).length;\n\n\t\t\t\t\t\t\tvar node = null;\n\t\t\t\t\t\t\tif (data.type === \"table\") {\n\t\t\t\t\t\t\t\tnode = new Node(\"table\",\"Node \" + (nodesCount + 1), \"rgb(0,192,255)\");\n\t\t\t\t\t\t\t\tnode.addInPort(true, false, \"Id\",this.state.selectedRelation, this.props.app.getActiveDiagram(), PropertyType.INT);\n\t\t\t\t\t\t\t\tnode.addInPort(false,false,\"Name\",this.state.selectedRelation, this.props.app.getActiveDiagram(), PropertyType.NVARCHAR);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnode = new Node(\"label\",\"Label \", \"rgb(192,255,0)\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar points = this.props.app.getDiagramEngine().getRelativeMousePoint(event);\n\t\t\t\t\t\t\tnode.x = points.x;\n\t\t\t\t\t\t\tnode.y = points.y;\n\t\t\t\t\t\t\tthis.props.app\n\t\t\t\t\t\t\t\t.getDiagramEngine()\n\t\t\t\t\t\t\t\t.getDiagramModel()\n\t\t\t\t\t\t\t\t.addNode(node);\n\t\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonDragOver={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}}\n\n\t\t\t\t\t\tonDoubleClick={event => {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tselectedNode: this.props.app\n\t\t\t\t\t\t\t\t.getDiagramEngine()\n\t\t\t\t\t\t\t\t.getDiagramModel()\n\t\t\t\t\t\t\t\t.getSelectedItems()[0] as Node,\n\t\t\t\t\t\t\t\tdiagramModel: this.props.app.getDiagramEngine().getDiagramModel(),\n\t\t\t\t\t\t\t\tselectedLink: this.props.app\n\t\t\t\t\t\t\t\t.getDiagramEngine()\n\t\t\t\t\t\t\t\t.getDiagramModel()\n\t\t\t\t\t\t\t\t.getSelectedItems()[1] as Link,\n\t\t\t\t\t\t\t});\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DiagramWidget className=\"srd-demo-canvas\" diagramEngine={this.props.app.getDiagramEngine()} />\n\n\t\t\t\t\t</div>\n\t\t\t\t\t{ this.state.selectedNode != null ? <NodeInfo selectedRelation={this.state.selectedRelation} selectedLink={this.state.selectedLink} selectedItem={this.state.selectedNode} diagramModel={this.state.diagramModel} /> : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}