{"ast":null,"code":"import _slicedToArray from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/RelationPopup.tsx\";\nimport React, { useState } from 'react';\nimport Popup from 'reactjs-popup';\nimport './popup.scss';\nimport './RelationPopup.css';\n\nvar Props = function Props() {\n  _classCallCheck(this, Props);\n\n  this.isOpen = void 0;\n  this.link = void 0;\n  this.update = void 0;\n};\n\nexport var RelationPopup = function RelationPopup(props) {\n  var _useState = useState('0, 1'),\n      _useState2 = _slicedToArray(_useState, 2),\n      left = _useState2[0],\n      setLeft = _useState2[1];\n\n  var _useState3 = useState('0, N'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      right = _useState4[0],\n      setRight = _useState4[1];\n\n  var _useState5 = useState('relation name'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      relationName = _useState6[0],\n      setRelationName = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      relType = _useState8[0],\n      setRelType = _useState8[1];\n\n  var update = function update() {\n    var labels = props.link.labels; // labels[0].label = left;\n    // labels[4].label = right;\n    // labels[2].label = relationName;\n\n    labels[0].label = left;\n    labels[2].label = right;\n    labels[1].label = relationName;\n    var points = props.link.points;\n\n    for (var index = 1; index < points.length - 1; index++) {\n      var element = points[index];\n      element.remove();\n    }\n\n    props.link.relationType = relType;\n    props.update();\n  };\n\n  console.log('WWWW', props);\n  var sourcePort = props.link && props.link.sourcePort.parent;\n  var targetPort = props.link && props.link.targetPort.parent;\n\n  var remove = function remove() {\n    console.log('&&&&', props.link, targetPort.parent);\n    props.link && targetPort.removePort(props.link.targetPort);\n    props.link && targetPort.parent && targetPort.parent.removeLink(props.link);\n  };\n\n  return React.createElement(Popup, {\n    modal: true,\n    closeOnDocumentClick: true,\n    open: props.isOpen,\n    closeOnEscape: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"SQLResultDialog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"grid-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"grid-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, sourcePort && sourcePort.name)), React.createElement(\"div\", {\n    className: \"grid-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"darkInput\",\n    type: \"text\",\n    defaultValue: relationName,\n    onChange: function onChange(event) {\n      return setRelationName(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"grid-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, targetPort && targetPort.name)), React.createElement(\"div\", {\n    className: \"grid-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"darkSelect\",\n    onChange: function onChange(event) {\n      return setLeft(event.target.value);\n    },\n    value: left,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1, N\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"1, N\"), React.createElement(\"option\", {\n    value: \"0, N\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"0, N\"), React.createElement(\"option\", {\n    value: \"0, 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"0, 0\"), React.createElement(\"option\", {\n    value: \"0, 1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"0, 1\"), React.createElement(\"option\", {\n    value: \"1, 1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"1, 1\"), React.createElement(\"option\", {\n    value: \"1, 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"1, 0\"), React.createElement(\"option\", {\n    value: \"N, M\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"N, M\"))), React.createElement(\"div\", {\n    className: \"grid-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return update();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"SAVE\")), React.createElement(\"div\", {\n    className: \"grid-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return remove();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Remove\")), React.createElement(\"div\", {\n    className: \"grid-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"darkSelect\",\n    onChange: function onChange(event) {\n      return setRight(event.target.value);\n    },\n    value: right,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1, N\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"1, N\"), React.createElement(\"option\", {\n    value: \"0, N\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"0, N\"), React.createElement(\"option\", {\n    value: \"0, 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"0, 0\"), React.createElement(\"option\", {\n    value: \"0, 1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"0, 1\"), React.createElement(\"option\", {\n    value: \"1, 1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"1, 1\"), React.createElement(\"option\", {\n    value: \"1, 0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"1, 0\"), React.createElement(\"option\", {\n    value: \"N, M\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"N, M\"))))));\n}; // <div className=\"grid-item\"><select className=\"darkSelect\"\n//             onChange={(event) => setRelType(event.target.value as unknown as number)}\n//             value={relType}>\n//             <option value={0}>020</option>\n//             <option value={1}>02M</option>\n//             <option value={2}>M2M Attr</option>\n//             <option value={3}>M2M no Attr</option>\n//           </select></div>","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/RelationPopup.tsx"],"names":["React","useState","Popup","Props","isOpen","link","update","RelationPopup","props","left","setLeft","right","setRight","relationName","setRelationName","relType","setRelType","labels","label","points","index","length","element","remove","relationType","console","log","sourcePort","parent","targetPort","removePort","removeLink","name","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Popup from 'reactjs-popup'\nimport sqlFormatter from \"sql-formatter\";\nimport './popup.scss';\nimport { Link } from './components/models/Link';\nimport { Label } from './components/models/Label';\nimport { Node } from './components/models/Node';\nimport './RelationPopup.css';\n\nimport { NodeModel } from 'storm-react-diagrams';\nimport { RelationType } from './App2';\nimport { Grid, Row, Col } from './components/grid';\n\nclass Props {\n  isOpen: boolean;\n  link: Link;\n  update: () => void;\n}\n\nexport const RelationPopup = (props: Props) => {\n\n  const [left, setLeft] = useState(\n    '0, 1'\n  );\n\n  const [right, setRight] = useState(\n    '0, N'\n  );\n\n  const [relationName, setRelationName] = useState(\n    'relation name'\n  );\n\n  const [relType, setRelType] = useState(\n    0\n  );\n\n  let update = () => {\n    let labels = props.link.labels as Label[];\n    // labels[0].label = left;\n    // labels[4].label = right;\n    // labels[2].label = relationName;\n    labels[0].label = left;\n    labels[2].label = right;\n    labels[1].label = relationName;\n    let points = props.link.points;\n    for (let index = 1; index < points.length - 1; index++) {\n\n      const element = points[index];\n      element.remove();\n    }\n    props.link.relationType = relType;\n    props.update()\n  }\n  console.log('WWWW', props);\n\n  const sourcePort = props.link && props.link.sourcePort.parent as Node;\n  const targetPort = props.link && props.link.targetPort.parent as Node;\n\n  const remove = () => {\n    console.log('&&&&', props.link, targetPort.parent);\n    props.link && targetPort.removePort(props.link.targetPort)\n    props.link && targetPort.parent && targetPort.parent.removeLink(props.link);\n  }\n  return (\n\n\n    <Popup\n      modal\n      closeOnDocumentClick\n      open={props.isOpen}\n      closeOnEscape\n    >\n      <div className=\"SQLResultDialog\">\n\n        <div className=\"grid-container\">\n          <div className=\"grid-item\"><p>{sourcePort && sourcePort.name}</p></div>\n          <div className=\"grid-item\"><input className=\"darkInput\" type=\"text\" defaultValue={relationName} onChange={(event) => setRelationName(event.target.value)}></input></div>\n          <div className=\"grid-item\"><p>{targetPort && targetPort.name}</p></div>\n          <div className=\"grid-item\"><select className=\"darkSelect\"\n            onChange={(event) => setLeft(event.target.value)}\n            value={left}>\n            <option value=\"1, N\">1, N</option>\n            <option value=\"0, N\">0, N</option>\n            <option value=\"0, 0\">0, 0</option>\n            <option value=\"0, 1\">0, 1</option>\n            <option value=\"1, 1\">1, 1</option>\n            <option value=\"1, 0\">1, 0</option>\n            <option value=\"N, M\">N, M</option>\n\n          </select></div>\n          <div className=\"grid-item\"><button onClick={() => update()}>SAVE</button></div>\n          <div className=\"grid-item\"><button onClick={() => remove()}>Remove</button></div>\n\n\n\n          <div className=\"grid-item\"><select className=\"darkSelect\"\n            onChange={(event) => setRight(event.target.value)}\n            value={right}>\n            <option value=\"1, N\">1, N</option>\n            <option value=\"0, N\">0, N</option>\n            <option value=\"0, 0\">0, 0</option>\n            <option value=\"0, 1\">0, 1</option>\n            <option value=\"1, 1\">1, 1</option>\n            <option value=\"1, 0\">1, 0</option>\n            <option value=\"N, M\">N, M</option>\n\n          </select></div>\n          \n        </div>\n\n\n      </div>\n    </Popup>)\n}\n\n\n\n// <div className=\"grid-item\"><select className=\"darkSelect\"\n//             onChange={(event) => setRelType(event.target.value as unknown as number)}\n//             value={relType}>\n//             <option value={0}>020</option>\n//             <option value={1}>02M</option>\n//             <option value={2}>M2M Attr</option>\n//             <option value={3}>M2M no Attr</option>\n\n//           </select></div>"]},"metadata":{},"sourceType":"module"}