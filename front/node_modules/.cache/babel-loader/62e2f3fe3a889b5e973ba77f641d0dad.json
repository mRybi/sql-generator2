{"ast":null,"code":"import _slicedToArray from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/RelationPopup.tsx\";\nimport React, { useState } from 'react';\nimport Popup from 'reactjs-popup';\nimport './popup.scss';\n\nvar Props = function Props() {\n  _classCallCheck(this, Props);\n\n  this.isOpen = void 0;\n  this.link = void 0;\n};\n\nexport var RelationPopup = function RelationPopup(props) {\n  var _useState = useState('DB1'),\n      _useState2 = _slicedToArray(_useState, 2),\n      dbName = _useState2[0],\n      setDbName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sqlString = _useState4[0],\n      setSqlString = _useState4[1];\n\n  console.log('PPP', props.link.labels);\n  return React.createElement(Popup, {\n    modal: true,\n    closeOnDocumentClick: true,\n    open: props.isOpen,\n    closeOnEscape: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"SQLResultDialog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Link infoooo\")));\n};","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/RelationPopup.tsx"],"names":["React","useState","Popup","Props","isOpen","link","RelationPopup","props","dbName","setDbName","sqlString","setSqlString","console","log","labels"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,OAAO,cAAP;;IAGMC,K;;;OACJC,M;OACAC,I;;;AAGF,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAkB;AAAA,kBAEjBN,QAAQ,CAClC,KADkC,CAFS;AAAA;AAAA,MAEtCO,MAFsC;AAAA,MAE9BC,SAF8B;;AAAA,mBAMXR,QAAQ,CACxC,EADwC,CANG;AAAA;AAAA,MAMtCS,SANsC;AAAA,MAM3BC,YAN2B;;AAU/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBN,KAAK,CAACF,IAAN,CAAWS,MAA9B;AAEE,SAGE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,oBAAoB,MAFtB;AAGE,IAAA,IAAI,EAAEP,KAAK,CAACH,MAHd;AAIE,IAAA,aAAa,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CANF,CAHF;AAiBD,CA7BM","sourcesContent":["import React, { useState } from 'react'\nimport Popup from 'reactjs-popup'\nimport sqlFormatter from \"sql-formatter\";\nimport './popup.scss';\nimport { Link } from './components/models/Link';\n\nclass Props {\n  isOpen: boolean;\n  link: Link;\n}\n\nexport const RelationPopup = (props: Props) => {\n \n  const [dbName, setDbName] = useState(\n    'DB1'\n  );\n\n  const [sqlString, setSqlString] = useState(\n    ''\n  );\n\nconsole.log('PPP', props.link.labels);\n  \n  return (\n\n\n    <Popup\n      modal\n      closeOnDocumentClick\n      open={props.isOpen}\n      closeOnEscape\n    >\n      <div className=\"SQLResultDialog\">\n        <p>Link infoooo</p>\n      {/* <input type=\"text\" onChange={event => setDbName(event.target.value)} value={dbName}/>\n      <button onClick={ () => props.generateScript(dbName)}>Generate</button>\n        <textarea readOnly={true} value={aa}></textarea>\n        <button>Download</button> */}\n      </div>\n    </Popup>)\n}\n\n"]},"metadata":{},"sourceType":"module"}