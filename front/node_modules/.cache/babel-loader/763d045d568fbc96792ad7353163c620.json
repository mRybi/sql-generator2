{"ast":null,"code":"import _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport * as _ from \"lodash\";\nimport { Link } from \"./Link\";\nimport { PortModel } from \"storm-react-diagrams\";\nimport { PropertyType } from \"./PropertyType\";\nexport var Port =\n/*#__PURE__*/\nfunction (_PortModel) {\n  _inherits(Port, _PortModel);\n\n  function Port(isInput, name, isPrimaryKey, isForeignKey, isNotNull, isAutoincremented, isUnique, propertyType, id) {\n    var _this;\n\n    _classCallCheck(this, Port);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Port).call(this, name, \"custom\", id));\n    _this.in = void 0;\n    _this.label = void 0;\n    _this.links = void 0;\n    _this.firstTime = true;\n    _this.isPrimaryKey = void 0;\n    _this.isForeignKey = void 0;\n    _this.isAutoincremented = void 0;\n    _this.isNotNull = void 0;\n    _this.isUnique = void 0;\n    _this.propertyType = void 0;\n    _this.in = isInput;\n    _this.label = name;\n    _this.links = {};\n    _this.isPrimaryKey = isPrimaryKey;\n    _this.isForeignKey = isForeignKey;\n    _this.isNotNull = isNotNull;\n    _this.isUnique = isUnique;\n    _this.isAutoincremented = isAutoincremented;\n    _this.propertyType = propertyType;\n    return _this;\n  }\n\n  _createClass(Port, [{\n    key: \"deSerialize\",\n    value: function deSerialize(object, engine) {\n      _get(_getPrototypeOf(Port.prototype), \"deSerialize\", this).call(this, object, engine);\n\n      this.in = object.in;\n      this.label = object.label;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return _.merge(_get(_getPrototypeOf(Port.prototype), \"serialize\", this).call(this), {\n        in: this.in,\n        label: this.label,\n        links: this.links,\n        isPrimaryKey: this.isPrimaryKey,\n        isForeignKey: this.isForeignKey,\n        isNotNull: this.isNotNull,\n        isUnique: this.isUnique,\n        isAutoincremented: this.isAutoincremented,\n        propertyType: this.propertyType\n      });\n    }\n  }, {\n    key: \"link\",\n    value: function link(port) {\n      var link = this.createLinkModel();\n      link.setSourcePort(this);\n      var node = port.getParent();\n      var targetPort = node.addInPort(this.getParent().name + 'Id', false, true, false, false, false, PropertyType.INT);\n      link.setTargetPort(targetPort);\n      link.addLabel('qwe');\n      link.addLabel('qwe');\n      link.addLabel('qwe');\n      return link;\n    }\n  }, {\n    key: \"canLinkToPort\",\n    value: function canLinkToPort(port) {\n      this.link(port);\n      return true;\n    }\n  }, {\n    key: \"createLinkModel\",\n    value: function createLinkModel() {\n      // let link = super.createLinkModel();\n      // return link || new Link();\n      return new Link();\n    }\n  }]);\n\n  return Port;\n}(PortModel);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/models/Port.ts"],"names":["_","Link","PortModel","PropertyType","Port","isInput","name","isPrimaryKey","isForeignKey","isNotNull","isAutoincremented","isUnique","propertyType","id","in","label","links","firstTime","object","engine","merge","port","link","createLinkModel","setSourcePort","node","getParent","targetPort","addInPort","INT","setTargetPort","addLabel"],"mappings":"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","sourcesContent":["import * as _ from \"lodash\";\nimport { Link } from \"./Link\";\nimport { Node } from \"./Node\";\nimport { PortModel, DiagramEngine, LinkModel } from \"storm-react-diagrams\";\nimport { PropertyType } from \"./PropertyType\";\nimport { Label } from \"./Label\";\n\nexport class Port extends PortModel {\n\tin: boolean;\n\tlabel: string;\n\tlinks: { [id: string]: Link };\n\tfirstTime: boolean = true;\n\n\n\tisPrimaryKey: boolean;\n\tisForeignKey: boolean;\n\tisAutoincremented: boolean;\n\tisNotNull: boolean;\n\tisUnique: boolean;\n\tpropertyType: PropertyType;\n\n\tconstructor(isInput: boolean, name: string, isPrimaryKey?: boolean, isForeignKey?: boolean, isNotNull?: boolean, isAutoincremented?: boolean, isUnique?: boolean, propertyType?: PropertyType, id?: string) {\n\t\tsuper(name, \"custom\", id);\n\t\tthis.in = isInput;\n\t\tthis.label = name;\n\t\tthis.links = {};\n\n\t\tthis.isPrimaryKey = isPrimaryKey;\n\t\tthis.isForeignKey = isForeignKey;\n\n\t\tthis.isNotNull = isNotNull;\n\t\tthis.isUnique = isUnique;\n\t\tthis.isAutoincremented = isAutoincremented;\n\n\t\tthis.propertyType = propertyType;\n\t}\n\n\tdeSerialize(object: any, engine: DiagramEngine) {\n\t\tsuper.deSerialize(object, engine);\n\t\tthis.in = object.in;\n\t\tthis.label = object.label;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tin: this.in,\n\t\t\tlabel: this.label,\n\n\t\t\tlinks: this.links,\n\n\t\tisPrimaryKey: this.isPrimaryKey,\n\t\tisForeignKey: this.isForeignKey,\n\t\tisNotNull: this.isNotNull,\n\t\tisUnique: this.isUnique,\n\t\tisAutoincremented: this.isAutoincremented,\n\n\t\tpropertyType: this.propertyType,\n\t\t});\n\t}\n\n\tlink(port: Port): Link {\n\t\tlet link = this.createLinkModel();\n\t\tlink.setSourcePort(this);\n\t\tlet node = port.getParent() as Node;\n\t\tlet targetPort = node.addInPort((this.getParent() as Node).name + 'Id', false, true, false, false, false, PropertyType.INT);\n\t\tlink.setTargetPort(targetPort);\n\t\t(link as Link).addLabel('qwe');\n\t\t(link as Link).addLabel('qwe');\n\t\t(link as Link).addLabel('qwe');\n\n\t\treturn link;\n\t}\n\n\tcanLinkToPort(port: Port): boolean {\n\t\t\tthis.link(port);\n\t\t\treturn true;\n\n\t}\n\n\tcreateLinkModel(): Link {\n\t\t// let link = super.createLinkModel();\n\t\t// return link || new Link();\n\t\treturn new Link();\n\t}\n}"]},"metadata":{},"sourceType":"module"}