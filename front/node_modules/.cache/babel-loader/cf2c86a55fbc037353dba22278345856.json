{"ast":null,"code":"import _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport * as _ from \"lodash\";\nimport { PortModel } from \"storm-react-diagrams\";\nimport { Link } from \"./Link\";\nimport { PropertyType } from \"./PropertyType\";\nimport { RelationType } from \"../../AppView\";\nexport var Port =\n/*#__PURE__*/\nfunction (_PortModel) {\n  _inherits(Port, _PortModel);\n\n  function Port(isNotNull, isAutoincremented, isUnique, isPrimaryKey, isForeignKey, isIn, id, label, selectedRelation, diagramEngine, propertyType) {\n    var _this;\n\n    _classCallCheck(this, Port);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Port).call(this, name, \"default\", id));\n    _this.in = void 0;\n    _this.isPrimaryKey = void 0;\n    _this.isForeignKey = void 0;\n    _this.isAutoincremented = void 0;\n    _this.isNotNull = void 0;\n    _this.isUnique = void 0;\n    _this.selectedRelation = void 0;\n    _this.diagramEngine = void 0;\n    _this.label = void 0;\n    _this.propertyType = void 0;\n    _this.links = void 0;\n    _this.in = isIn;\n    _this.label = label || name;\n    _this.links = {};\n    _this.propertyType = propertyType;\n    _this.diagramEngine = diagramEngine;\n    _this.isAutoincremented = isAutoincremented;\n    _this.isNotNull = isNotNull;\n    _this.isUnique = isUnique;\n    _this.isForeignKey = isForeignKey;\n    _this.isPrimaryKey = isPrimaryKey;\n    _this.selectedRelation = selectedRelation;\n    return _this;\n  }\n\n  _createClass(Port, [{\n    key: \"deSerialize\",\n    value: function deSerialize(object, engine) {\n      _get(_getPrototypeOf(Port.prototype), \"deSerialize\", this).call(this, object, engine);\n\n      this.in = object.in;\n      this.label = object.label;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return _.merge(_get(_getPrototypeOf(Port.prototype), \"serialize\", this).call(this), {\n        in: this.in,\n        label: this.label,\n        propertyType: PropertyType[this.propertyType]\n      });\n    }\n  }, {\n    key: \"updatePortRelation\",\n    value: function updatePortRelation(selectedRelation) {\n      this.selectedRelation = selectedRelation;\n    }\n  }, {\n    key: \"initialLink\",\n    value: function initialLink(node) {\n      var link = this.createLinkModel();\n      var port2 = node.addInPort(true, true, true, false, true, \"xdId\", RelationType.O2O, this.diagramEngine, PropertyType.INT);\n      link.setSourcePort(this);\n      link.setTargetPort(port2);\n      return link;\n    }\n  }, {\n    key: \"link\",\n    value: function link(port) {\n      var link = this.createLinkModel();\n      link.setSourcePort(this);\n      link.setTargetPort(port);\n      return link;\n    }\n  }, {\n    key: \"canLinkToPort\",\n    value: function canLinkToPort(port) {\n      // if (port instanceof Port) {\n      // \treturn this.in !== port.in;\n      // }\n      return true;\n    }\n  }, {\n    key: \"createLinkModel\",\n    value: function createLinkModel() {\n      var link = _get(_getPrototypeOf(Port.prototype), \"createLinkModel\", this).call(this);\n\n      return link || new Link();\n    }\n  }]);\n\n  return Port;\n}(PortModel);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/models/Port.ts"],"names":["_","PortModel","Link","PropertyType","RelationType","Port","isNotNull","isAutoincremented","isUnique","isPrimaryKey","isForeignKey","isIn","id","label","selectedRelation","diagramEngine","propertyType","name","in","links","object","engine","merge","node","link","createLinkModel","port2","addInPort","O2O","INT","setSourcePort","setTargetPort","port"],"mappings":"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","sourcesContent":["import * as _ from \"lodash\";\nimport { PortModel, DiagramEngine, LinkModel } from \"storm-react-diagrams\";\nimport { Link } from \"./Link\";\nimport { Node } from \"./Node\";\nimport { PropertyType } from \"./PropertyType\";\nimport { RelationType } from \"../../AppView\";\n\n\nexport class Port extends PortModel {\n\tin: boolean;\n\tisPrimaryKey: boolean;\n\tisForeignKey: boolean;\n\n\tisAutoincremented: boolean;\n\tisNotNull: boolean;\n\tisUnique: boolean;\n\tselectedRelation: RelationType;\n\tdiagramEngine: DiagramEngine;\n\n\n    label: string;\n    propertyType: PropertyType;\n\tlinks: { [id: string]: Link };\n\n\tconstructor(isNotNull: boolean, isAutoincremented: boolean, isUnique: boolean, isPrimaryKey: boolean, isForeignKey: boolean, isIn: boolean, id?: string, label?: string, selectedRelation?: RelationType, diagramEngine?: DiagramEngine, propertyType?: PropertyType) {\n\t\tsuper(name, \"default\", id);\n\t\tthis.in = isIn;\n        this.label = label || name;\n        this.links = {};\n\t\tthis.propertyType = propertyType;\n\t\t\n\t\tthis.diagramEngine = diagramEngine;\n\t\tthis.isAutoincremented = isAutoincremented;\n\t\tthis.isNotNull = isNotNull;\n\t\tthis.isUnique = isUnique;\n\t\tthis.isForeignKey = isForeignKey;\n\t\tthis.isPrimaryKey = isPrimaryKey;\n\t\tthis.selectedRelation = selectedRelation;\n\t}\n\n\tdeSerialize(object: any, engine: DiagramEngine) {\n\t\tsuper.deSerialize(object, engine);\n\t\tthis.in = object.in;\n\t\tthis.label = object.label;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tin: this.in,\n            label: this.label,\n            propertyType: PropertyType[this.propertyType]\n\t\t});\n\t}\n\n\tupdatePortRelation(selectedRelation: RelationType) {\n\t\tthis.selectedRelation = selectedRelation;\n\t}\n\n\tinitialLink(node: Node) {\n\t\tlet link = this.createLinkModel();\n\t\tlet port2 = node.addInPort(true, true, true, false, true,\"xdId\", RelationType.O2O,this.diagramEngine, PropertyType.INT);\n\t\tlink.setSourcePort(this);\n\t\tlink.setTargetPort(port2);\n\t\treturn link;\n\t}\n\n\tlink(port: PortModel): LinkModel {\n\t\tlet link = this.createLinkModel();\n\t\tlink.setSourcePort(this);\n\t\tlink.setTargetPort(port);\n\t\treturn link;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\t// if (port instanceof Port) {\n\t\t// \treturn this.in !== port.in;\n\t\t// }\n\t\treturn true;\n\t}\n\n\tcreateLinkModel(): LinkModel {\n\t\tlet link = super.createLinkModel();\n\t\treturn link || new Link();\n\t}\n}"]},"metadata":{},"sourceType":"module"}