{"ast":null,"code":"import _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport * as _ from \"lodash\";\nimport { NodeModel, Toolkit } from \"storm-react-diagrams\";\nimport { Port } from \"./Port\";\nexport var Node =\n/*#__PURE__*/\nfunction (_NodeModel) {\n  _inherits(Node, _NodeModel);\n\n  function Node(engine) {\n    var _this;\n\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Untitled\";\n    var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"rgb(0,192,255)\";\n\n    _classCallCheck(this, Node);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Node).call(this, \"custom\"));\n    _this.name = void 0;\n    _this.color = void 0;\n    _this.ports = void 0;\n    _this.engine = void 0;\n    _this.name = name;\n    _this.color = color;\n    _this.ports = {};\n    _this.engine = engine;\n    return _this;\n  }\n\n  _createClass(Node, [{\n    key: \"addInPort\",\n    value: function addInPort(label, isPK, isFK, isUnique, isAuto, isNotNull, propertyType) {\n      return this.addPort(new Port(this.engine, true, label, isPK, isFK, isNotNull, isAuto, isUnique, propertyType, Toolkit.UID()));\n    }\n  }, {\n    key: \"addOutPort\",\n    value: function addOutPort(label, isPK, isFK, isUnique, isAuto, isNotNull, propertyType) {\n      return this.addPort(new Port(this.engine, true, label, isPK, isFK, isNotNull, isAuto, isUnique, propertyType, Toolkit.UID()));\n    }\n  }, {\n    key: \"deSerialize\",\n    value: function deSerialize(object, engine) {\n      _get(_getPrototypeOf(Node.prototype), \"deSerialize\", this).call(this, object, engine);\n\n      this.name = object.name;\n      this.color = object.color;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return _.merge(_get(_getPrototypeOf(Node.prototype), \"serialize\", this).call(this), {\n        name: this.name,\n        color: this.color\n      });\n    }\n  }, {\n    key: \"getInPorts\",\n    value: function getInPorts() {\n      return _.filter(this.ports, function (portModel) {\n        return portModel.in;\n      });\n    }\n  }, {\n    key: \"getOutPorts\",\n    value: function getOutPorts() {\n      return _.filter(this.ports, function (portModel) {\n        return !portModel.in;\n      });\n    }\n  }]);\n\n  return Node;\n}(NodeModel);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/models/Node.ts"],"names":["_","NodeModel","Toolkit","Port","Node","engine","name","color","ports","label","isPK","isFK","isUnique","isAuto","isNotNull","propertyType","addPort","UID","object","merge","filter","portModel","in"],"mappings":";;;;;;AAAA,OAAO,KAAKA,CAAZ,MAAmB,QAAnB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAkD,sBAAlD;AACA,SAASC,IAAT,QAAqB,QAArB;AAGA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAMC,gBAAYC,MAAZ,EAAgG;AAAA;;AAAA,QAA7DC,IAA6D,uEAA9C,UAA8C;AAAA,QAAlCC,KAAkC,uEAAlB,gBAAkB;;AAAA;;AAC/F,8EAAM,QAAN;AAD+F,UALhGD,IAKgG;AAAA,UAJhGC,KAIgG;AAAA,UAHhGC,KAGgG;AAAA,UAFhGH,MAEgG;AAE/F,UAAKC,IAAL,GAAYA,IAAZ;AACA,UAAKC,KAAL,GAAaA,KAAb;AACA,UAAKC,KAAL,GAAa,EAAb;AAEA,UAAKH,MAAL,GAAcA,MAAd;AAN+F;AAO/F;;AAbF;AAAA;AAAA,8BAeWI,KAfX,EAe0BC,IAf1B,EAeyCC,IAfzC,EAewDC,QAfxD,EAe2EC,MAf3E,EAe4FC,SAf5F,EAegHC,YAfhH,EAekJ;AAChJ,aAAO,KAAKC,OAAL,CAAa,IAAIb,IAAJ,CAAS,KAAKE,MAAd,EAAsB,IAAtB,EAA4BI,KAA5B,EAAmCC,IAAnC,EAAyCC,IAAzC,EAA+CG,SAA/C,EAA0DD,MAA1D,EAAkED,QAAlE,EAA4EG,YAA5E,EAA0Fb,OAAO,CAACe,GAAR,EAA1F,CAAb,CAAP;AACA;AAjBF;AAAA;AAAA,+BAmBYR,KAnBZ,EAmB2BC,IAnB3B,EAmB0CC,IAnB1C,EAmByDC,QAnBzD,EAmB4EC,MAnB5E,EAmB6FC,SAnB7F,EAmBiHC,YAnBjH,EAmBmJ;AACjJ,aAAO,KAAKC,OAAL,CAAa,IAAIb,IAAJ,CAAS,KAAKE,MAAd,EAAsB,IAAtB,EAA4BI,KAA5B,EAAmCC,IAAnC,EAAyCC,IAAzC,EAA+CG,SAA/C,EAA0DD,MAA1D,EAAkED,QAAlE,EAA4EG,YAA5E,EAA0Fb,OAAO,CAACe,GAAR,EAA1F,CAAb,CAAP;AACA;AArBF;AAAA;AAAA,gCAuBaC,MAvBb,EAuB0Bb,MAvB1B,EAuBiD;AAC/C,4EAAkBa,MAAlB,EAA0Bb,MAA1B;;AACA,WAAKC,IAAL,GAAYY,MAAM,CAACZ,IAAnB;AACA,WAAKC,KAAL,GAAaW,MAAM,CAACX,KAApB;AACA;AA3BF;AAAA;AAAA,gCA6Ba;AACX,aAAOP,CAAC,CAACmB,KAAF,sEAA2B;AACjCb,QAAAA,IAAI,EAAE,KAAKA,IADsB;AAEjCC,QAAAA,KAAK,EAAE,KAAKA;AAFqB,OAA3B,CAAP;AAIA;AAlCF;AAAA;AAAA,iCAoCsB;AACpB,aAAOP,CAAC,CAACoB,MAAF,CAAS,KAAKZ,KAAd,EAAqB,UAAAa,SAAS,EAAI;AACxC,eAAOA,SAAS,CAACC,EAAjB;AACA,OAFM,CAAP;AAGA;AAxCF;AAAA;AAAA,kCA0CuB;AACrB,aAAOtB,CAAC,CAACoB,MAAF,CAAS,KAAKZ,KAAd,EAAqB,UAAAa,SAAS,EAAI;AACxC,eAAO,CAACA,SAAS,CAACC,EAAlB;AACA,OAFM,CAAP;AAGA;AA9CF;;AAAA;AAAA,EAA0BrB,SAA1B","sourcesContent":["import * as _ from \"lodash\";\nimport { NodeModel, Toolkit, DiagramEngine } from \"storm-react-diagrams\";\nimport { Port } from \"./Port\";\nimport { PropertyType } from \"./PropertyType\";\n\nexport class Node extends NodeModel {\n\tname: string;\n\tcolor: string;\n\tports: { [s: string]: Port };\n\tengine: DiagramEngine\n\n\tconstructor(engine: DiagramEngine, name: string = \"Untitled\", color: string = \"rgb(0,192,255)\") {\n\t\tsuper(\"custom\");\n\t\tthis.name = name;\n\t\tthis.color = color;\n\t\tthis.ports = {};\n\n\t\tthis.engine = engine;\n\t}\n\n\taddInPort(label: string, isPK: boolean, isFK: boolean, isUnique: boolean, isAuto: boolean, isNotNull: boolean, propertyType: PropertyType): Port {\n\t\treturn this.addPort(new Port(this.engine, true, label, isPK, isFK, isNotNull, isAuto, isUnique, propertyType, Toolkit.UID()));\n\t}\n\n\taddOutPort(label: string, isPK: boolean, isFK: boolean, isUnique: boolean, isAuto: boolean, isNotNull: boolean, propertyType: PropertyType): Port {\n\t\treturn this.addPort(new Port(this.engine, true, label, isPK, isFK, isNotNull, isAuto, isUnique, propertyType, Toolkit.UID()));\n\t}\n\n\tdeSerialize(object: any, engine: DiagramEngine) {\n\t\tsuper.deSerialize(object, engine);\n\t\tthis.name = object.name;\n\t\tthis.color = object.color;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tname: this.name,\n\t\t\tcolor: this.color\n\t\t});\n\t}\n\n\tgetInPorts(): Port[] {\n\t\treturn _.filter(this.ports, portModel => {\n\t\t\treturn portModel.in;\n\t\t});\n\t}\n\n\tgetOutPorts(): Port[] {\n\t\treturn _.filter(this.ports, portModel => {\n\t\t\treturn !portModel.in;\n\t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}