{"ast":null,"code":"import _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx\";\nimport './NodeProperties.scss';\nimport * as React from \"react\";\n\nvar OwnProps = function OwnProps() {\n  _classCallCheck(this, OwnProps);\n\n  this.selectedItem = void 0;\n  this.diagramEngine = void 0;\n  this.selectedLink = void 0;\n  this.selectedRelation = void 0;\n};\n\nvar State = function State() {\n  _classCallCheck(this, State);\n\n  this.updatedItem = void 0;\n  this.name = void 0;\n};\n\nexport var NodeProperties =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NodeProperties, _React$Component);\n\n  function NodeProperties(props) {\n    _classCallCheck(this, NodeProperties);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NodeProperties).call(this, props));\n  }\n\n  _createClass(NodeProperties, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        updatedItem: this.props.selectedItem,\n        name: this.props.selectedItem.name\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps != this.props) {\n        this.setState({\n          updatedItem: nextProps.selectedItem,\n          name: nextProps.selectedItem.name\n        });\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"renderPorts\",\n    value: function renderPorts() {\n      console.log(this.state.updatedItem.ports);\n      var ports = this.state.updatedItem.ports;\n      Object.keys(ports).map(function (x) {\n        React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, ports[x].name);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ports = this.state.updatedItem.ports;\n      console.log(ports);\n      var xd = Object.keys(ports).map(function (x) {\n        React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"XDDDD\");\n      });\n      return React.createElement(\"div\", {\n        className: \"trayBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, xd);\n    }\n  }]);\n\n  return NodeProperties;\n}(React.Component);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/nodeProperties/NodeProperties.tsx"],"names":["React","OwnProps","selectedItem","diagramEngine","selectedLink","selectedRelation","State","updatedItem","name","NodeProperties","props","setState","nextProps","forceUpdate","console","log","state","ports","Object","keys","map","x","xd","Component"],"mappings":";;;;;;AAAA,OAAO,uBAAP;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;IAUMC,Q;;;OACFC,Y;OACAC,a;OACAC,Y;OACAC,gB;;;IAGEC,K;;;OACFC,W;OACAC,I;;;AAKJ,WAAaC,cAAb;AAAA;AAAA;AAAA;;AACI,0BAAYC,KAAZ,EAA0B;AAAA;;AAAA,uFAChBA,KADgB;AAEzB;;AAHL;AAAA;AAAA,yCAKyB;AACjB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,WAAW,EAAE,KAAKG,KAAL,CAAWR,YADd;AAEVM,QAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWR,YAAX,CAAwBM;AAFpB,OAAd;AAIH;AAVL;AAAA;AAAA,8CAY8BI,SAZ9B,EAYgD;AACxC,UAAIA,SAAS,IAAI,KAAKF,KAAtB,EAA6B;AACzB,aAAKC,QAAL,CAAc;AACVJ,UAAAA,WAAW,EAAEK,SAAS,CAACV,YADb;AAEVM,UAAAA,IAAI,EAAEI,SAAS,CAACV,YAAV,CAAuBM;AAFnB,SAAd;AAIA,aAAKK,WAAL;AACH;AACJ;AApBL;AAAA;AAAA,kCAsBkB;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWT,WAAX,CAAuBU,KAAnC;AACA,UAAIA,KAAK,GAAG,KAAKD,KAAL,CAAWT,WAAX,CAAuBU,KAAnC;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,GAAnB,CAAuB,UAAAC,CAAC,EAAI;AACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIJ,KAAK,CAACI,CAAD,CAAL,CAASb,IAAb;AAEH,OAHD;AAIH;AA7BL;AAAA;AAAA,6BAgCa;AACL,UAAIS,KAAK,GAAG,KAAKD,KAAL,CAAWT,WAAX,CAAuBU,KAAnC;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,UAAIK,EAAE,GAAGJ,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,GAAnB,CAAuB,UAAAC,CAAC,EAAI;AACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,OAHQ,CAAT;AAIA,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,EADL,CADJ;AAMH;AA7CL;;AAAA;AAAA,EAAoCtB,KAAK,CAACuB,SAA1C","sourcesContent":["import './NodeProperties.scss';\nimport * as React from \"react\";\nimport { DefaultNodeModel, DefaultPortModel, PortModel, DiagramModel, LabelModel, DefaultLinkModel, DiagramEngine } from 'storm-react-diagrams';\nimport { number } from 'prop-types';\nimport { randomBytes } from 'crypto';\nimport { Link } from '../models/Link';\nimport { Node } from \"../models/Node\";\nimport { PropertyType } from '../models/PropertyType';\nimport { Port } from '../models/Port';\nimport { RelationType } from '../../App2';\n\nclass OwnProps {\n    selectedItem: Node;\n    diagramEngine: DiagramEngine;\n    selectedLink: Link;\n    selectedRelation: RelationType;\n}\n\nclass State {\n    updatedItem: Node\n    name: string;\n}\n\ntype Props = OwnProps;\n\nexport class NodeProperties extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.setState({\n            updatedItem: this.props.selectedItem,\n            name: this.props.selectedItem.name,\n        })\n    }\n\n    componentWillReceiveProps(nextProps: Props) {\n        if (nextProps != this.props) {\n            this.setState({\n                updatedItem: nextProps.selectedItem,\n                name: nextProps.selectedItem.name\n            })\n            this.forceUpdate();\n        }\n    }\n\n    renderPorts() {\n        console.log(this.state.updatedItem.ports);\n        let ports = this.state.updatedItem.ports as { [s: string]: Port };\n        Object.keys(ports).map(x => {\n            <p>{ports[x].name}</p>\n\n        });\n    }\n\n\n    render() {\n        let ports = this.state.updatedItem.ports as { [s: string]: Port };\n        console.log(ports);\n        let xd = Object.keys(ports).map(x => {\n            <p>XDDDD</p>\n\n        }) ;\n        return (\n            <div className=\"trayBottom\">\n                {xd}\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}