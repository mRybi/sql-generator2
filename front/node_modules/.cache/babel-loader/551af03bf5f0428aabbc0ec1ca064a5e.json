{"ast":null,"code":"import _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { NodeModel, Toolkit } from \"storm-react-diagrams\";\nimport * as _ from \"lodash\";\nimport { Port } from \"./Port\";\nexport var Node =\n/*#__PURE__*/\nfunction (_NodeModel) {\n  _inherits(Node, _NodeModel);\n\n  function Node() {\n    var _this;\n\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Untitled\";\n    var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"rgb(0,192,255)\";\n\n    _classCallCheck(this, Node);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Node).call(this, \"default\"));\n    _this.name = void 0;\n    _this.color = void 0;\n    _this.ports = void 0;\n    _this.name = name;\n    _this.color = color;\n    return _this;\n  }\n\n  _createClass(Node, [{\n    key: \"addInPort\",\n    value: function addInPort(label) {\n      console.log('port', this.ports);\n      return this.addPort(new Port(true, Toolkit.UID(), label));\n    }\n  }, {\n    key: \"addOutPort\",\n    value: function addOutPort(label) {\n      console.log('port', this.ports);\n      return this.addPort(new Port(false, Toolkit.UID(), label));\n    }\n  }, {\n    key: \"deSerialize\",\n    value: function deSerialize(object, engine) {\n      _get(_getPrototypeOf(Node.prototype), \"deSerialize\", this).call(this, object, engine);\n\n      this.name = object.name;\n      this.color = object.color;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return _.merge(_get(_getPrototypeOf(Node.prototype), \"serialize\", this).call(this), {\n        name: this.name,\n        color: this.color\n      });\n    }\n  }, {\n    key: \"getInPorts\",\n    value: function getInPorts() {\n      return _.filter(this.ports, function (portModel) {\n        return portModel.in;\n      });\n    }\n  }, {\n    key: \"getOutPorts\",\n    value: function getOutPorts() {\n      return _.filter(this.ports, function (portModel) {\n        return !portModel.in;\n      });\n    }\n  }]);\n\n  return Node;\n}(NodeModel);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/models/Node.ts"],"names":["NodeModel","Toolkit","_","Port","Node","name","color","ports","label","console","log","addPort","UID","object","engine","merge","filter","portModel","in"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAsCC,OAAtC,QAAoE,sBAApE;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAMC,kBAAyE;AAAA;;AAAA,QAA7DC,IAA6D,uEAA9C,UAA8C;AAAA,QAAlCC,KAAkC,uEAAlB,gBAAkB;;AAAA;;AACxE,8EAAM,SAAN;AADwE,UAJtED,IAIsE;AAAA,UAHzEC,KAGyE;AAAA,UAFzEC,KAEyE;AAExE,UAAKF,IAAL,GAAYA,IAAZ;AACA,UAAKC,KAAL,GAAaA,KAAb;AAHwE;AAIxE;;AAVF;AAAA;AAAA,8BAYWE,KAZX,EAYgC;AAE9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKH,KAAzB;AACA,aAAO,KAAKI,OAAL,CAAa,IAAIR,IAAJ,CAAS,IAAT,EAAeF,OAAO,CAACW,GAAR,EAAf,EAA8BJ,KAA9B,CAAb,CAAP;AACA;AAhBF;AAAA;AAAA,+BAkBYA,KAlBZ,EAkBiC;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKH,KAAzB;AACA,aAAO,KAAKI,OAAL,CAAa,IAAIR,IAAJ,CAAS,KAAT,EAAgBF,OAAO,CAACW,GAAR,EAAhB,EAA+BJ,KAA/B,CAAb,CAAP;AACA;AArBF;AAAA;AAAA,gCAuBaK,MAvBb,EAuB0BC,MAvB1B,EAuBiD;AAC/C,4EAAkBD,MAAlB,EAA0BC,MAA1B;;AACA,WAAKT,IAAL,GAAYQ,MAAM,CAACR,IAAnB;AACA,WAAKC,KAAL,GAAaO,MAAM,CAACP,KAApB;AACA;AA3BF;AAAA;AAAA,gCA6Ba;AACX,aAAOJ,CAAC,CAACa,KAAF,sEAA2B;AACjCV,QAAAA,IAAI,EAAE,KAAKA,IADsB;AAEjCC,QAAAA,KAAK,EAAE,KAAKA;AAFqB,OAA3B,CAAP;AAIA;AAlCF;AAAA;AAAA,iCAoCsB;AACpB,aAAOJ,CAAC,CAACc,MAAF,CAAS,KAAKT,KAAd,EAAqB,UAAAU,SAAS,EAAI;AACxC,eAAOA,SAAS,CAACC,EAAjB;AACA,OAFM,CAAP;AAGA;AAxCF;AAAA;AAAA,kCA0CuB;AACrB,aAAOhB,CAAC,CAACc,MAAF,CAAS,KAAKT,KAAd,EAAqB,UAAAU,SAAS,EAAI;AACxC,eAAO,CAACA,SAAS,CAACC,EAAlB;AACA,OAFM,CAAP;AAGA;AA9CF;;AAAA;AAAA,EAA0BlB,SAA1B","sourcesContent":["import { NodeModel, DefaultPortModel, Toolkit, DiagramEngine } from \"storm-react-diagrams\";\nimport * as _ from \"lodash\";\nimport { Port } from \"./Port\";\n\nexport class Node extends NodeModel{\n\n    name: string;\n\tcolor: string;\n\tports: { [s: string]: Port };\n\n\tconstructor(name: string = \"Untitled\", color: string = \"rgb(0,192,255)\") {\n\t\tsuper(\"default\");\n\t\tthis.name = name;\n\t\tthis.color = color;\n\t}\n\n\taddInPort(label: string): Port {\n\t\t\n\t\tconsole.log('port', this.ports);\n\t\treturn this.addPort(new Port(true, Toolkit.UID(), label));\n\t}\n\n\taddOutPort(label: string): Port {\n\t\tconsole.log('port', this.ports);\n\t\treturn this.addPort(new Port(false, Toolkit.UID(), label));\n\t}\n\n\tdeSerialize(object: any, engine: DiagramEngine) {\n\t\tsuper.deSerialize(object, engine);\n\t\tthis.name = object.name;\n\t\tthis.color = object.color;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tname: this.name,\n\t\t\tcolor: this.color\n\t\t});\n\t}\n\n\tgetInPorts(): Port[] {\n\t\treturn _.filter(this.ports, portModel => {\n\t\t\treturn portModel.in;\n\t\t});\n\t}\n\n\tgetOutPorts(): Port[] {\n\t\treturn _.filter(this.ports, portModel => {\n\t\t\treturn !portModel.in;\n\t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}