{"ast":null,"code":"import _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { NodeModel, Toolkit } from \"storm-react-diagrams\";\nimport * as _ from \"lodash\";\nimport { Port } from \"./Port\";\nexport var Node =\n/*#__PURE__*/\nfunction (_NodeModel) {\n  _inherits(Node, _NodeModel);\n\n  function Node(type) {\n    var _this;\n\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Untitled\";\n    var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"rgb(0,192,255)\";\n\n    _classCallCheck(this, Node);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Node).call(this, type));\n    _this.name = void 0;\n    _this.color = void 0;\n    _this.ports = void 0;\n    _this.name = name;\n    _this.color = color;\n    _this.ports = {};\n    return _this;\n  }\n\n  _createClass(Node, [{\n    key: \"addInPort\",\n    value: function addInPort(isPrimaryKey, isForeignKey, label, propertyType) {\n      return this.addPort(new Port(isPrimaryKey, isForeignKey, true, Toolkit.UID(), label, propertyType));\n    }\n  }, {\n    key: \"addOutPort\",\n    value: function addOutPort(isPrimaryKey, isForeignKey, label, propertyType) {\n      return this.addPort(new Port(isPrimaryKey, isForeignKey, false, Toolkit.UID(), label, propertyType));\n    }\n  }, {\n    key: \"deSerialize\",\n    value: function deSerialize(object, engine) {\n      _get(_getPrototypeOf(Node.prototype), \"deSerialize\", this).call(this, object, engine);\n\n      this.name = object.name;\n      this.color = object.color;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return _.merge(_get(_getPrototypeOf(Node.prototype), \"serialize\", this).call(this), {\n        name: this.name,\n        color: this.color\n      });\n    }\n  }, {\n    key: \"getInPorts\",\n    value: function getInPorts() {\n      return _.filter(this.ports, function (portModel) {\n        return portModel.in;\n      });\n    }\n  }, {\n    key: \"getOutPorts\",\n    value: function getOutPorts() {\n      return _.filter(this.ports, function (portModel) {\n        return !portModel.in;\n      });\n    }\n  }]);\n\n  return Node;\n}(NodeModel);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/models/Node.ts"],"names":["NodeModel","Toolkit","_","Port","Node","type","name","color","ports","isPrimaryKey","isForeignKey","label","propertyType","addPort","UID","object","engine","merge","filter","portModel","in"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAsCC,OAAtC,QAAoE,sBAApE;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,QAArB;AAGA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAMC,gBAAYC,IAAZ,EAAuF;AAAA;;AAAA,QAA7DC,IAA6D,uEAA9C,UAA8C;AAAA,QAAlCC,KAAkC,uEAAlB,gBAAkB;;AAAA;;AACtF,8EAAMF,IAAN;AADsF,UAJpFC,IAIoF;AAAA,UAHvFC,KAGuF;AAAA,UAFvFC,KAEuF;AAEtF,UAAKF,IAAL,GAAYA,IAAZ;AACA,UAAKC,KAAL,GAAaA,KAAb;AACA,UAAKC,KAAL,GAAa,EAAb;AAJsF;AAKtF;;AAXF;AAAA;AAAA,8BAaWC,YAbX,EAakCC,YAblC,EAayDC,KAbzD,EAawEC,YAbxE,EAa2G;AACzG,aAAO,KAAKC,OAAL,CAAa,IAAIV,IAAJ,CAASM,YAAT,EAAsBC,YAAtB,EAAmC,IAAnC,EAAyCT,OAAO,CAACa,GAAR,EAAzC,EAAwDH,KAAxD,EAA+DC,YAA/D,CAAb,CAAP;AACA;AAfF;AAAA;AAAA,+BAiBYH,YAjBZ,EAiBmCC,YAjBnC,EAiB0DC,KAjB1D,EAiByEC,YAjBzE,EAiB4G;AAC1G,aAAO,KAAKC,OAAL,CAAa,IAAIV,IAAJ,CAASM,YAAT,EAAsBC,YAAtB,EAAmC,KAAnC,EAA0CT,OAAO,CAACa,GAAR,EAA1C,EAAyDH,KAAzD,EAAgEC,YAAhE,CAAb,CAAP;AACA;AAnBF;AAAA;AAAA,gCAqBaG,MArBb,EAqB0BC,MArB1B,EAqBiD;AAC/C,4EAAkBD,MAAlB,EAA0BC,MAA1B;;AACA,WAAKV,IAAL,GAAYS,MAAM,CAACT,IAAnB;AACA,WAAKC,KAAL,GAAaQ,MAAM,CAACR,KAApB;AACA;AAzBF;AAAA;AAAA,gCA2Ba;AACX,aAAOL,CAAC,CAACe,KAAF,sEAA2B;AACjCX,QAAAA,IAAI,EAAE,KAAKA,IADsB;AAEjCC,QAAAA,KAAK,EAAE,KAAKA;AAFqB,OAA3B,CAAP;AAIA;AAhCF;AAAA;AAAA,iCAkCsB;AACpB,aAAOL,CAAC,CAACgB,MAAF,CAAS,KAAKV,KAAd,EAAqB,UAAAW,SAAS,EAAI;AACxC,eAAOA,SAAS,CAACC,EAAjB;AACA,OAFM,CAAP;AAGA;AAtCF;AAAA;AAAA,kCAwCuB;AACrB,aAAOlB,CAAC,CAACgB,MAAF,CAAS,KAAKV,KAAd,EAAqB,UAAAW,SAAS,EAAI;AACxC,eAAO,CAACA,SAAS,CAACC,EAAlB;AACA,OAFM,CAAP;AAGA;AA5CF;;AAAA;AAAA,EAA0BpB,SAA1B","sourcesContent":["import { NodeModel, DefaultPortModel, Toolkit, DiagramEngine } from \"storm-react-diagrams\";\nimport * as _ from \"lodash\";\nimport { Port } from \"./Port\";\nimport { PropertyType } from \"./PropertyType\";\n\nexport class Node extends NodeModel{\n\n    name: string;\n\tcolor: string;\n\tports: { [s: string]: Port };\n\n\tconstructor(type: string, name: string = \"Untitled\", color: string = \"rgb(0,192,255)\") {\n\t\tsuper(type);\n\t\tthis.name = name;\n\t\tthis.color = color;\n\t\tthis.ports = {};\n\t}\n\n\taddInPort(isPrimaryKey: boolean, isForeignKey: boolean, label: string, propertyType?: PropertyType): Port {\n\t\treturn this.addPort(new Port(isPrimaryKey,isForeignKey,true, Toolkit.UID(), label, propertyType));\n\t}\n\n\taddOutPort(isPrimaryKey: boolean, isForeignKey: boolean, label: string, propertyType?: PropertyType): Port {\n\t\treturn this.addPort(new Port(isPrimaryKey,isForeignKey,false, Toolkit.UID(), label, propertyType));\n\t}\n\n\tdeSerialize(object: any, engine: DiagramEngine) {\n\t\tsuper.deSerialize(object, engine);\n\t\tthis.name = object.name;\n\t\tthis.color = object.color;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tname: this.name,\n\t\t\tcolor: this.color\n\t\t});\n\t}\n\n\tgetInPorts(): Port[] {\n\t\treturn _.filter(this.ports, portModel => {\n\t\t\treturn portModel.in;\n\t\t});\n\t}\n\n\tgetOutPorts(): Port[] {\n\t\treturn _.filter(this.ports, portModel => {\n\t\t\treturn !portModel.in;\n\t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}