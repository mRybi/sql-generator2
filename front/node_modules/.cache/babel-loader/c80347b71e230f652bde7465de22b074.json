{"ast":null,"code":"import _classCallCheck from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport * as _ from \"lodash\";\nimport { PortModel } from \"storm-react-diagrams\";\nimport { Link } from \"./Link\";\nimport { PropertyType } from \"./PropertyType\";\nexport var Port =\n/*#__PURE__*/\nfunction (_PortModel) {\n  _inherits(Port, _PortModel);\n\n  function Port(isPrimaryKey, isForeignKey, isInput, name) {\n    var _this;\n\n    var label = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    var propertyType = arguments.length > 5 ? arguments[5] : undefined;\n    var id = arguments.length > 6 ? arguments[6] : undefined;\n\n    _classCallCheck(this, Port);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Port).call(this, name, \"with_prop\", id));\n    _this.in = void 0;\n    _this.label = void 0;\n    _this.propertyType = void 0;\n    _this.isPrimaryKey = void 0;\n    _this.isForeignKey = void 0;\n    _this.links = void 0;\n    _this.in = isInput;\n    _this.label = label || name;\n    _this.links = {};\n    _this.propertyType = propertyType;\n    _this.isForeignKey = isForeignKey;\n    _this.isPrimaryKey = isPrimaryKey;\n    return _this;\n  }\n\n  _createClass(Port, [{\n    key: \"deSerialize\",\n    value: function deSerialize(object, engine) {\n      _get(_getPrototypeOf(Port.prototype), \"deSerialize\", this).call(this, object, engine);\n\n      this.in = object.in;\n      this.label = object.label;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return _.merge(_get(_getPrototypeOf(Port.prototype), \"serialize\", this).call(this), {\n        in: this.in,\n        label: this.label,\n        propertyType: PropertyType[this.propertyType],\n        isForeignKey: this.isForeignKey,\n        isPrimaryKey: this.isPrimaryKey\n      });\n    } // link(port: PortModel): LinkModel {\n    // \tlet link = this.createLinkModel();\n    // \tlink.setSourcePort(this);\n    // \tlink.setTargetPort(port);\n    // \treturn link;\n    // }\n\n  }, {\n    key: \"link\",\n    value: function link(nodeToLink) {\n      console.log('nodeToLink', nodeToLink);\n      var link = this.createLinkModel();\n      var thisPortNode = this.getNode();\n      var newPort = nodeToLink.addInPort(false, true, \"\".concat(thisPortNode.name, \"Id\"));\n      link.setSourcePort(this);\n      link.setTargetPort(newPort);\n      console.log('NEWLINK', link);\n      return link;\n    }\n  }, {\n    key: \"canLinkToPort\",\n    value: function canLinkToPort(port, nodeToLink) {\n      this.link(nodeToLink); //logika czy mozna polaczyc\n      // if (port instanceof Port) {\n      // \treturn (this.isPrimaryKey && port.isForeignKey || this.isForeignKey && port.isPrimaryKey) ? true : false\n      // }\n      // return false;\n\n      return true;\n    }\n  }, {\n    key: \"createLinkModel\",\n    value: function createLinkModel() {\n      var link = _get(_getPrototypeOf(Port.prototype), \"createLinkModel\", this).call(this);\n\n      return link || new Link();\n    }\n  }]);\n\n  return Port;\n}(PortModel);","map":{"version":3,"sources":["/home/dell/Dokumenty/sql-gen2/sql-gen2/sql-generator2/src/components/models/Port.ts"],"names":["_","PortModel","Link","PropertyType","Port","isPrimaryKey","isForeignKey","isInput","name","label","propertyType","id","in","links","object","engine","merge","nodeToLink","console","log","link","createLinkModel","thisPortNode","getNode","newPort","addInPort","setSourcePort","setTargetPort","port"],"mappings":";;;;;;AAAA,OAAO,KAAKA,CAAZ,MAAmB,QAAnB;AACA,SAASC,SAAT,QAAiF,sBAAjF;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAGA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAQC,gBAAYC,YAAZ,EAAmCC,YAAnC,EAA0DC,OAA1D,EAA4EC,IAA5E,EAA0J;AAAA;;AAAA,QAAhEC,KAAgE,uEAAhD,IAAgD;AAAA,QAA1CC,YAA0C;AAAA,QAAbC,EAAa;;AAAA;;AACzJ,8EAAMH,IAAN,EAAY,WAAZ,EAAyBG,EAAzB;AADyJ,UAP1JC,EAO0J;AAAA,UANvJH,KAMuJ;AAAA,UAL1JC,YAK0J;AAAA,UAJ1JL,YAI0J;AAAA,UAH1JC,YAG0J;AAAA,UAF1JO,KAE0J;AAEzJ,UAAKD,EAAL,GAAUL,OAAV;AACM,UAAKE,KAAL,GAAaA,KAAK,IAAID,IAAtB;AACA,UAAKK,KAAL,GAAa,EAAb;AACN,UAAKH,YAAL,GAAoBA,YAApB;AACA,UAAKJ,YAAL,GAAoBA,YAApB;AACA,UAAKD,YAAL,GAAoBA,YAApB;AAPyJ;AAQzJ;;AAhBF;AAAA;AAAA,gCAkBaS,MAlBb,EAkB0BC,MAlB1B,EAkBiD;AAC/C,4EAAkBD,MAAlB,EAA0BC,MAA1B;;AACA,WAAKH,EAAL,GAAUE,MAAM,CAACF,EAAjB;AACA,WAAKH,KAAL,GAAaK,MAAM,CAACL,KAApB;AACA;AAtBF;AAAA;AAAA,gCAwBa;AACX,aAAOT,CAAC,CAACgB,KAAF,sEAA2B;AACjCJ,QAAAA,EAAE,EAAE,KAAKA,EADwB;AAExBH,QAAAA,KAAK,EAAE,KAAKA,KAFY;AAGjCC,QAAAA,YAAY,EAAEP,YAAY,CAAC,KAAKO,YAAN,CAHO;AAIjCJ,QAAAA,YAAY,EAAE,KAAKA,YAJc;AAKjCD,QAAAA,YAAY,EAAE,KAAKA;AALc,OAA3B,CAAP;AAOA,KAhCF,CAkCC;AACA;AAEA;AACA;AACA;AACA;;AAxCD;AAAA;AAAA,yBA0CMY,UA1CN,EA0CmC;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B;AAEA,UAAIG,IAAI,GAAG,KAAKC,eAAL,EAAX;AACA,UAAIC,YAAY,GAAG,KAAKC,OAAL,EAAnB;AAEA,UAAIC,OAAO,GAAGP,UAAU,CAACQ,SAAX,CAAqB,KAArB,EAA4B,IAA5B,YAAqCH,YAAY,CAACd,IAAlD,QAAd;AAEAY,MAAAA,IAAI,CAACM,aAAL,CAAmB,IAAnB;AACAN,MAAAA,IAAI,CAACO,aAAL,CAAmBH,OAAnB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,IAAvB;AACA,aAAOA,IAAP;AACA;AAtDF;AAAA;AAAA,kCAwDeQ,IAxDf,EAwDgCX,UAxDhC,EAwD2D;AACzD,WAAKG,IAAL,CAAUH,UAAV,EADyD,CAEzD;AACA;AACA;AACA;AACA;;AACA,aAAO,IAAP;AACA;AAhEF;AAAA;AAAA,sCAkE8B;AAC5B,UAAIG,IAAI,4EAAR;;AACA,aAAOA,IAAI,IAAI,IAAIlB,IAAJ,EAAf;AACA;AArEF;;AAAA;AAAA,EAA0BD,SAA1B","sourcesContent":["import * as _ from \"lodash\";\nimport { PortModel, DiagramEngine, LinkModel, DefaultLinkModel, NodeModel } from \"storm-react-diagrams\";\nimport { Link } from \"./Link\";\nimport { PropertyType } from \"./PropertyType\";\nimport { Node } from \"./Node\";\n\nexport class Port extends PortModel {\n\tin: boolean;\n    label: string;\n\tpropertyType: PropertyType;\n\tisPrimaryKey: boolean;\n\tisForeignKey: boolean;\n\tlinks: { [id: string]: Link };\n\n\tconstructor(isPrimaryKey: boolean, isForeignKey: boolean, isInput: boolean, name: string, label: string = null, propertyType?: PropertyType, id?: string) {\n\t\tsuper(name, \"with_prop\", id);\n\t\tthis.in = isInput;\n        this.label = label || name;\n        this.links = {};\n\t\tthis.propertyType = propertyType;\n\t\tthis.isForeignKey = isForeignKey;\n\t\tthis.isPrimaryKey = isPrimaryKey;\n\t}\n\n\tdeSerialize(object: any, engine: DiagramEngine) {\n\t\tsuper.deSerialize(object, engine);\n\t\tthis.in = object.in;\n\t\tthis.label = object.label;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tin: this.in,\n            label: this.label,\n\t\t\tpropertyType: PropertyType[this.propertyType],\n\t\t\tisForeignKey: this.isForeignKey,\n\t\t\tisPrimaryKey: this.isPrimaryKey\n\t\t});\n\t}\n\n\t// link(port: PortModel): LinkModel {\n\t// \tlet link = this.createLinkModel();\n\n\t// \tlink.setSourcePort(this);\n\t// \tlink.setTargetPort(port);\n\t// \treturn link;\n\t// }\n\n\tlink(nodeToLink: Node): LinkModel {\n\t\tconsole.log('nodeToLink', nodeToLink);\n\n\t\tlet link = this.createLinkModel();\n\t\tlet thisPortNode = this.getNode() as Node;\n\n\t\tlet newPort = nodeToLink.addInPort(false, true, `${thisPortNode.name}Id`);\n\n\t\tlink.setSourcePort(this);\n\t\tlink.setTargetPort(newPort);\n\t\tconsole.log('NEWLINK', link);\n\t\treturn link;\n\t}\n\n\tcanLinkToPort(port: PortModel, nodeToLink: Node): boolean {\n\t\tthis.link(nodeToLink);\n\t\t//logika czy mozna polaczyc\n\t\t// if (port instanceof Port) {\n\t\t// \treturn (this.isPrimaryKey && port.isForeignKey || this.isForeignKey && port.isPrimaryKey) ? true : false\n\t\t// }\n\t\t// return false;\n\t\treturn true;\n\t}\n\n\tcreateLinkModel(): LinkModel {\n\t\tlet link = super.createLinkModel();\n\t\treturn link || new Link();\n\t}\n}"]},"metadata":{},"sourceType":"module"}